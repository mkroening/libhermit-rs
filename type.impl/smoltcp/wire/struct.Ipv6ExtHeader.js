(function() {var type_impls = {
"smoltcp":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#33-87\">source</a><a href=\"#impl-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section></summary><div class=\"docblock\"><p>Core getter methods relevant to any IPv6 extension header.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#35-37\">source</a><h4 class=\"code-header\">pub const fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(buffer: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a raw octet buffer with an IPv6 Extension Header structure.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_checked\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#43-47\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.new_checked\" class=\"fn\">new_checked</a>(buffer: T) -&gt; <a class=\"type\" href=\"smoltcp/wire/type.Result.html\" title=\"type smoltcp::wire::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Shorthand for a combination of <a href=\"#method.new_unchecked\">new_unchecked</a> and <a href=\"#method.check_len\">check_len</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_len\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#55-69\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.check_len\" class=\"fn\">check_len</a>(&amp;self) -&gt; <a class=\"type\" href=\"smoltcp/wire/type.Result.html\" title=\"type smoltcp::wire::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Ensure that no accessor method will panic if called.\nReturns <code>Err(Error)</code> if the buffer is too short.</p>\n<p>The result of this check is invalidated by calling <a href=\"#method.set_header_len\">set_header_len</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#72-74\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Consume the header, returning the underlying buffer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_header\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#77-80\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.next_header\" class=\"fn\">next_header</a>(&amp;self) -&gt; <a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">IpProtocol</a></h4></section></summary><div class=\"docblock\"><p>Return the next header field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header_len\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#83-86\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.header_len\" class=\"fn\">header_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Return the header length field.</p>\n</div></details></div></details>",0,"smoltcp::wire::Ipv6HopByHopHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Header%3C%26T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#89-95\">source</a><a href=\"#impl-Header%3C%26T%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'h, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;'h T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.payload\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#91-94\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.payload\" class=\"fn\">payload</a>(&amp;self) -&gt; &amp;'h [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]</h4></section></summary><div class=\"docblock\"><p>Return the payload of the IPv6 extension header.</p>\n</div></details></div></details>",0,"smoltcp::wire::Ipv6HopByHopHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#97-112\">source</a><a href=\"#impl-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_next_header\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#100-103\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.set_next_header\" class=\"fn\">set_next_header</a>(&amp;mut self, value: <a class=\"enum\" href=\"smoltcp/wire/enum.IpProtocol.html\" title=\"enum smoltcp::wire::IpProtocol\">IpProtocol</a>)</h4></section></summary><div class=\"docblock\"><p>Set the next header field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_header_len\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#108-111\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.set_header_len\" class=\"fn\">set_header_len</a>(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class=\"docblock\"><p>Set the extension header data length. The length of the header is\nin 8-octet units, not including the first 8 octets.</p>\n</div></details></div></details>",0,"smoltcp::wire::Ipv6HopByHopHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Header%3C%26mut+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#114-122\">source</a><a href=\"#impl-Header%3C%26mut+T%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;'a mut T</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.payload_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#117-121\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeader.html#tymethod.payload_mut\" class=\"fn\">payload_mut</a>(&amp;mut self) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]</h4></section></summary><div class=\"docblock\"><p>Return a mutable pointer to the payload data.</p>\n</div></details></div></details>",0,"smoltcp::wire::Ipv6HopByHopHeader"],["<section id=\"impl-StructuralEq-for-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#impl-StructuralEq-for-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section>","StructuralEq","smoltcp::wire::Ipv6HopByHopHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#impl-PartialEq-for-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","smoltcp::wire::Ipv6HopByHopHeader"],["<section id=\"impl-StructuralPartialEq-for-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#impl-StructuralPartialEq-for-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section>","StructuralPartialEq","smoltcp::wire::Ipv6HopByHopHeader"],["<section id=\"impl-Eq-for-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#impl-Eq-for-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section>","Eq","smoltcp::wire::Ipv6HopByHopHeader"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Header%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#impl-Debug-for-Header%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#26\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","smoltcp::wire::Ipv6HopByHopHeader"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()