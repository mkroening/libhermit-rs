(function() {var type_impls = {
"smoltcp":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#132-156\">source</a><a href=\"#impl-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#134-143\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html#tymethod.parse\" class=\"fn\">parse</a>&lt;T&gt;(header: &amp;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;'a T</a>&gt;) -&gt; <a class=\"type\" href=\"smoltcp/wire/type.Result.html\" title=\"type smoltcp::wire::Result\">Result</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class=\"docblock\"><p>Parse an IPv6 Extension Header Header and return a high-level representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.header_len\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#147-149\">source</a><h4 class=\"code-header\">pub const fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html#tymethod.header_len\" class=\"fn\">header_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the length, in bytes, of a header that will be emitted from this high-level\nrepresentation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.emit\" class=\"method\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#152-155\">source</a><h4 class=\"code-header\">pub fn <a href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html#tymethod.emit\" class=\"fn\">emit</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>]&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    &amp;self,\n    header: &amp;mut <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeader.html\" title=\"struct smoltcp::wire::Ipv6ExtHeader\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut T</a>&gt;\n)</h4></section></summary><div class=\"docblock\"><p>Emit a high-level representation into an IPv6 Extension Header.</p>\n</div></details></div></details>",0,"smoltcp::wire::Ipv6HopByHopRepr"],["<section id=\"impl-Copy-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-Copy-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section>","Copy","smoltcp::wire::Ipv6HopByHopRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-Clone-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","smoltcp::wire::Ipv6HopByHopRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-PartialEq-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","smoltcp::wire::Ipv6HopByHopRepr"],["<section id=\"impl-Eq-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-Eq-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section>","Eq","smoltcp::wire::Ipv6HopByHopRepr"],["<section id=\"impl-StructuralEq-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-StructuralEq-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section>","StructuralEq","smoltcp::wire::Ipv6HopByHopRepr"],["<section id=\"impl-StructuralPartialEq-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-StructuralPartialEq-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section>","StructuralPartialEq","smoltcp::wire::Ipv6HopByHopRepr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Repr%3C'a%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#impl-Debug-for-Repr%3C'a%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"smoltcp/wire/struct.Ipv6ExtHeaderRepr.html\" title=\"struct smoltcp::wire::Ipv6ExtHeaderRepr\">Repr</a>&lt;'a&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/smoltcp/wire/ipv6ext_header.rs.html#124\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","smoltcp::wire::Ipv6HopByHopRepr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()