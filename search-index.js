var searchIndex = JSON.parse('{\
"ahash":{"doc":"AHash is a high performance keyed hash function.","t":"DCLLLLLLLLLALLLLLLLLLLLIDLLLLLLLKLLLLLFLLLLLL","n":["AHasher","RandomState","borrow","borrow_mut","clone","clone_into","default","finish","fmt","from","into","random_state","to_owned","try_from","try_into","type_id","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","RandomSource","RandomState","borrow","borrow_mut","build_hasher","clone","clone_into","fmt","from","gen_hasher_seed","generate_with","hash_one","hash_one","into","new","set_random_source","to_owned","try_from","try_into","type_id","with_seed","with_seeds"],"q":[[0,"ahash"],[23,"ahash::random_state"],[45,"core::fmt"],[46,"core::fmt"],[47,"core::any"],[48,"core::hash"],[49,"core::marker"],[50,"core::marker"]],"d":["A <code>Hasher</code> for hashing an arbitrary stream of bytes.","","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A supplier of Randomness used for different hashers. See …","Provides a Hasher factory. This is typically used (e.g. by …","","","Constructs a new AHasher with keys based on this …","","","","Returns the argument unchanged.","","Create a new <code>RandomState</code> <code>BuildHasher</code> based on the provided …","Calculates the hash of a single value. This provides a …","Calculates the hash of a single value. This provides a …","Calls <code>U::from(self)</code>.","Create a new <code>RandomState</code> <code>BuildHasher</code> using random keys.","Provides an optional way to manually supply a source of …","","","","","Build a <code>RandomState</code> from a single key. The provided key …","Allows for explicitly setting the seeds to used. All …"],"i":[0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,14,14,14,14,14,14,14,17,14,14,14,14,14,0,14,14,14,14,14,14],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[],1],[1,3],[[1,4],5],[-1,-1,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[[1,[9,[8]]],2],[[1,10],2],[[1,11],2],[[1,12],2],[[1,3],2],[[1,8],2],[[1,13],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[14,1],[14,14],[[-1,-2],2,[],[]],[[14,4],5],[-1,-1,[]],[-1,13,[]],[[3,3,3,3],14],[[14,-1],3,15],[[14,-1],3,15],[-1,-2,[],[]],[[],14],[-1,[[6,[2,16]]],[17,18,19]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],[13,14],[[3,3,3,3],14]],"c":[],"p":[[3,"AHasher",0],[15,"tuple"],[15,"u64"],[3,"Formatter",45],[6,"Result",45],[4,"Result",46],[3,"TypeId",47],[15,"u8"],[15,"slice"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"usize"],[3,"RandomState",23],[8,"Hash",48],[15,"bool"],[8,"RandomSource",23],[8,"Send",49],[8,"Sync",49]],"b":[[34,"impl-BuildHasher-for-RandomState"],[35,"impl-RandomState"]]},\
"align_address":{"doc":"This crate provides functions for aligning addresses.","t":"IKKK","n":["Align","align_down","align_up","is_aligned"],"q":[[0,"align_address"]],"d":["An adress that can be aligned.","Align address downwards.","Align address upwards.","Checks whether the address has the demanded alignment."],"i":[0,2,2,2],"f":[0,[[-1,-2],-1,[],[]],[[-1,-2],-1,[],[]],[[-1,-2],1,[],[]]],"c":[],"p":[[15,"bool"],[8,"Align",0]],"b":[]},\
"bit_field":{"doc":"Provides the abstraction of a bit field, which allows for …","t":"SIIKKKKKKKKK","n":["BIT_LENGTH","BitArray","BitField","bit_length","get_bit","get_bit","get_bits","get_bits","set_bit","set_bit","set_bits","set_bits"],"q":[[0,"bit_field"],[12,"core::ops::range"]],"d":["The number of bits in this bit field.","","A generic trait which provides methods for extracting and …","Returns the length, eg number of bits, in this bit array.","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the bit at the index <code>bit</code>; note that index 0 is the …","Obtains the range of bits specified by <code>range</code>; note that …","Obtains the range of bits specified by <code>range</code>; note that …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the bit at the index <code>bit</code> to the value <code>value</code> (where …","Sets the range of bits defined by the range <code>range</code> to the …","Sets the range of bits defined by the range <code>range</code> to the …"],"i":[5,0,0,6,5,6,5,6,5,6,5,6],"f":[0,0,0,[-1,1,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,-2],-1,[],[[3,[1]]]],[[-1,-2],-3,[],[[3,[1]]],[]],[[-1,1,2],-1,[]],[[-1,1,2],4,[]],[[-1,-2,-1],-1,[],[[3,[1]]]],[[-1,-2,-3],4,[],[[3,[1]]],[]]],"c":[],"p":[[15,"usize"],[15,"bool"],[8,"RangeBounds",12],[15,"tuple"],[8,"BitField",0],[8,"BitArray",0]],"b":[]},\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::marker"],[106,"core::option"],[107,"core::result"],[108,"core::any"],[109,"core::fmt"],[110,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[18,0,0,11,18,11,0,0,11,11,0,11,6,6,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,6,6,0,11,11,11,11,6,6,0,11,11,11,11,11,11,11,11,6,6,6,11,11,6,0,0,7,8,7,8,7,8,7,8,7,8,7,8,8,7,8,7,8,7,8,0,0,0,12,12,12,12,12,12,0,12,12,12,19,0,12,12,12,20],"f":[0,0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],0,[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[-1,-1,[]],[[],[[3,[-1]]],[]],[[],[[3,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[4,[[3,[-1]]],[]],[4,[[3,[-1]]],[]],[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],1,2],[[-1,-1],1,2],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[6,[-1]]],1,[]],[[[6,[-1]]],1,[]],0,[-1,[[7,[-1]]],[]],[-1,[[7,[-1]]],[]],[-1,[[8,[-1]]],[]],[-1,[[8,[-1]]],[]],[[[6,[-1]]],4,[]],[[4,-1],[[6,[-1]]],[]],0,[[-1,-1],5,2],[[-1,-1],5,2],[[-1,-1,1],5,2],[[-1,-1,1],5,2],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],5,2],[[-1,-1],5,2],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[[6,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]]],3,11],[[[8,[-1]]],3,11],[[[8,[-1]]],-1,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],12],[[12,13],14],[[12,13],14],[-1,-1,[]],[4,[[9,[-1,12]]],11],[-1,-2,[],[]],[-1,12,15],[-1,12,15],[4,[[9,[-1,12]]],2],[[-1,-2],[[9,[5,16]]],11,17],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[[-1,-2],14,[],17]],"c":[],"p":[[15,"bool"],[8,"Sized",105],[4,"Option",106],[15,"str"],[15,"tuple"],[3,"Flag",0],[3,"Iter",65],[3,"IterNames",65],[4,"Result",107],[3,"TypeId",108],[8,"Flags",0],[3,"ParseError",86],[3,"Formatter",109],[6,"Result",109],[8,"Display",109],[3,"Error",109],[8,"Write",109],[8,"Bits",0],[8,"ParseHex",86],[8,"WriteHex",86]],"b":[[92,"impl-Display-for-ParseError"],[93,"impl-Debug-for-ParseError"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":"GEIGEGGLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLLKLLKLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLLKLLKLLLKLLKLLKLLKLL","n":["BE","BigEndian","ByteOrder","LE","LittleEndian","NativeEndian","NetworkEndian","borrow","borrow","borrow_mut","borrow_mut","clone","clone","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","hash","hash","into","into","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","try_from","try_from","try_into","try_into","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128"],"q":[[0,"byteorder"],[156,"core::cmp"],[157,"core::fmt"],[158,"core::fmt"],[159,"core::option"],[160,"core::result"],[161,"core::any"]],"d":["A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","Defines system native-endian serialization.","Defines network byte order serialization.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","",""],"i":[0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,26,1,2,26,1,2,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2,1,2,1,2,1,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,2,26,1,2,26,1,2,26,1,2,26,26,1,2,26,1,2,26,26,1,2,26,1,2,26,1,2,26,1,2],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,1],3],[[2,2],3],[[],1],[[],2],[[1,1],4],[[2,2],4],[[1,5],6],[[2,5],6],[-1,-1,[]],[-1,-1,[]],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[7]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[10]]],9],[[[8,[11]]],9],[[[8,[12]]],9],[[[8,[13]]],9],[[[8,[14]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[15]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[16]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[17]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[[8,[18]]],9],[[1,-1],9,19],[[2,-1],9,19],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],[[20,[3]]]],[[2,2],[[20,[3]]]],[[[8,[21]]],7],[[[8,[21]],[8,[7]]],9],[[[8,[21]],[8,[7]]],9],[[[8,[21]]],10],[[[8,[21]],[8,[10]]],9],[[[8,[21]],[8,[10]]],9],[[[8,[21]]],11],[[[8,[21]],[8,[11]]],9],[[[8,[21]]],12],[[[8,[21]],[8,[12]]],9],[[[8,[21]]],13],[[[8,[21]]],13],[[[8,[21]],[8,[13]]],9],[[[8,[21]]],14],[[[8,[21]]],14],[[[8,[21]],[8,[14]]],9],[[[8,[21]],22],14],[[[8,[21]],22],11],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]]],15],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]],[8,[15]]],9],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]]],16],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]],[8,[16]]],9],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]]],17],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]],[8,[17]]],9],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]]],18],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],[8,[18]]],9],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],18],[[[8,[21]],22],15],[[[8,[21]],22],15],[[[8,[21]],22],15],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[[8,[21]],7],9],[[[8,[7]],[8,[21]]],9],[[[8,[21]],10],9],[[[8,[10]],[8,[21]]],9],[[[8,[21]],11],9],[[[8,[11]],[8,[21]]],9],[[[8,[21]],12],9],[[[8,[12]],[8,[21]]],9],[[[8,[21]],13],9],[[[8,[21]],13],9],[[[8,[13]],[8,[21]]],9],[[[8,[21]],14],9],[[[8,[21]],14],9],[[[8,[14]],[8,[21]]],9],[[[8,[25]],[8,[21]]],9],[[[8,[21]],14,22],9],[[[8,[21]],11,22],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[21]],15],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[15]],[8,[21]]],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[21]],16],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[16]],[8,[21]]],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[21]],17],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[17]],[8,[21]]],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[21]],18],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[18]],[8,[21]]],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],18,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9],[[[8,[21]],15,22],9]],"c":[53,56],"p":[[4,"BigEndian",0],[4,"LittleEndian",0],[4,"Ordering",156],[15,"bool"],[3,"Formatter",157],[6,"Result",157],[15,"f32"],[15,"slice"],[15,"tuple"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"Hasher",158],[4,"Option",159],[15,"u8"],[15,"usize"],[4,"Result",160],[3,"TypeId",161],[15,"i8"],[8,"ByteOrder",0]],"b":[]},\
"call_once":{"doc":"This crate provides <code>CallOnce</code>, a simple, thread-safe type …","t":"DDLLLLLLLLLLLLLLLLLLLLL","n":["CallOnce","CallOnceError","borrow","borrow","borrow_mut","borrow_mut","call_once","default","fmt","fmt","fmt","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","was_called"],"q":[[0,"call_once"],[23,"core::result"],[24,"core::fmt"],[25,"core::fmt"]],"d":["A type that can only be called successfully <em>once</em>.","The <code>CallOnceError</code> error indicates that <code>CallOnce::call_once</code> …","","","","","Mark this <code>CallOnce</code> as called.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>CallOnce</code>.","","","","","","","Returns <code>true</code> if <code>call_once</code> has been called."],"i":[0,0,1,3,1,3,1,1,1,3,3,1,3,1,3,1,1,3,1,3,1,3,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[2,3]]]],[[],1],[[1,5],6],[[3,5],6],[[3,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[1,8]],"c":[],"p":[[3,"CallOnce",0],[15,"tuple"],[3,"CallOnceError",0],[4,"Result",23],[3,"Formatter",24],[6,"Result",24],[3,"TypeId",25],[15,"bool"]],"b":[[9,"impl-Display-for-CallOnceError"],[10,"impl-Debug-for-CallOnceError"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":"DDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLL","n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id"],"q":[[0,"crossbeam_utils"],[35,"crossbeam_utils::atomic"],[162,"core::clone"],[163,"core::default"],[164,"core::cmp"],[165,"core::fmt"],[166,"core::fmt"],[167,"core::hash"],[168,"core::any"],[169,"core::marker"],[170,"core::cmp"]],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","",""],"i":[0,0,0,3,1,3,1,1,3,1,1,1,1,3,1,3,1,1,1,1,3,1,1,3,3,1,3,3,3,3,1,3,1,3,1,0,0,32,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,16,16,16,16,16,16,16],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[],3],[[],[[1,[-1]]],4],[[[1,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[[1,[-1]],[1,[-1]]],5,6],[[3,7],8],[[[1,[-1]],7],8,9],[-1,-1,[]],[10,-1,[]],[-1,[[1,[-1]]],[]],[-1,-1,[]],[[[1,[-1]],-2],11,12,13],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[]],[3,5],[[],3],[-1,[[1,[-1]]],[]],[3,11],[3,11],[3,11],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],0,0,0,[[[16,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1]],-1,-1],-1,[17,18]],[[[16,[-1]],-1,-1],[[14,[-1,-1]]],[17,18]],[[],[[16,[-1]]],4],[[[16,[-1]]],11,[]],[[[16,[19]],19],19],[[[16,[20]],20],20],[[[16,[21]],21],21],[[[16,[22]],22],22],[[[16,[23]],23],23],[[[16,[24]],24],24],[[[16,[25]],25],25],[[[16,[26]],26],26],[[[16,[27]],27],27],[[[16,[28]],28],28],[[[16,[29]],29],29],[[[16,[30]],30],30],[[[16,[30]],30],30],[[[16,[19]],19],19],[[[16,[24]],24],24],[[[16,[5]],5],5],[[[16,[29]],29],29],[[[16,[23]],23],23],[[[16,[21]],21],21],[[[16,[20]],20],20],[[[16,[26]],26],26],[[[16,[27]],27],27],[[[16,[25]],25],25],[[[16,[28]],28],28],[[[16,[22]],22],22],[[[16,[19]],19],19],[[[16,[24]],24],24],[[[16,[28]],28],28],[[[16,[26]],26],26],[[[16,[20]],20],20],[[[16,[25]],25],25],[[[16,[22]],22],22],[[[16,[23]],23],23],[[[16,[29]],29],29],[[[16,[27]],27],27],[[[16,[21]],21],21],[[[16,[30]],30],30],[[[16,[26]],26],26],[[[16,[20]],20],20],[[[16,[24]],24],24],[[[16,[19]],19],19],[[[16,[30]],30],30],[[[16,[21]],21],21],[[[16,[22]],22],22],[[[16,[27]],27],27],[[[16,[25]],25],25],[[[16,[29]],29],29],[[[16,[23]],23],23],[[[16,[28]],28],28],[[[16,[27]],27],27],[[[16,[30]],30],30],[[[16,[22]],22],22],[[[16,[28]],28],28],[[[16,[25]],25],25],[[[16,[19]],19],19],[[[16,[23]],23],23],[[[16,[20]],20],20],[[[16,[26]],26],26],[[[16,[5]],5],5],[[[16,[21]],21],21],[[[16,[29]],29],29],[[[16,[24]],24],24],[[[16,[30]],30],30],[[[16,[22]],22],22],[[[16,[24]],24],24],[[[16,[5]],5],5],[[[16,[29]],29],29],[[[16,[19]],19],19],[[[16,[28]],28],28],[[[16,[27]],27],27],[[[16,[23]],23],23],[[[16,[20]],20],20],[[[16,[26]],26],26],[[[16,[25]],25],25],[[[16,[21]],21],21],[[[16,[25]],25],25],[[[16,[20]],20],20],[[[16,[29]],29],29],[[[16,[22]],22],22],[[[16,[23]],23],23],[[[16,[28]],28],28],[[[16,[24]],24],24],[[[16,[19]],19],19],[[[16,[27]],27],27],[[[16,[21]],21],21],[[[16,[26]],26],26],[[[16,[30]],30],30],[[[16,[-1]],-2],[[14,[-1,-1]]],[17,18],31],[[[16,[23]],23],23],[[[16,[19]],19],19],[[[16,[5]],5],5],[[[16,[24]],24],24],[[[16,[29]],29],29],[[[16,[27]],27],27],[[[16,[21]],21],21],[[[16,[20]],20],20],[[[16,[25]],25],25],[[[16,[22]],22],22],[[[16,[30]],30],30],[[[16,[26]],26],26],[[[16,[28]],28],28],[[[16,[-1]],7],8,[17,9]],[-1,[[16,[-1]]],[]],[10,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[16,[-1]]],-1,[]],[[],5],[[[16,[-1]]],-1,17],[-1,[],[]],[-1,[[16,[-1]]],[]],[[[16,[-1]],-1],11,[]],[[[16,[-1]],-1],-1,[]],[[[16,[-1]]],-1,4],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]]],"c":[41],"p":[[3,"CachePadded",0],[8,"Clone",162],[3,"Backoff",0],[8,"Default",163],[15,"bool"],[8,"PartialEq",164],[3,"Formatter",165],[6,"Result",165],[8,"Debug",165],[15,"never"],[15,"tuple"],[8,"Hash",166],[8,"Hasher",166],[4,"Result",167],[3,"TypeId",168],[3,"AtomicCell",35],[8,"Copy",169],[8,"Eq",164],[15,"isize"],[15,"usize"],[15,"i128"],[15,"u128"],[15,"i64"],[15,"u64"],[15,"i32"],[15,"u32"],[15,"u16"],[15,"i8"],[15,"u8"],[15,"i16"],[8,"FnMut",170],[8,"AtomicConsume",35]],"b":[[45,"impl-AtomicCell%3Cisize%3E"],[46,"impl-AtomicCell%3Cusize%3E"],[47,"impl-AtomicCell%3Ci128%3E"],[48,"impl-AtomicCell%3Cu128%3E"],[49,"impl-AtomicCell%3Ci64%3E"],[50,"impl-AtomicCell%3Cu64%3E"],[51,"impl-AtomicCell%3Ci32%3E"],[52,"impl-AtomicCell%3Cu32%3E"],[53,"impl-AtomicCell%3Cu16%3E"],[54,"impl-AtomicCell%3Ci8%3E"],[55,"impl-AtomicCell%3Cu8%3E"],[56,"impl-AtomicCell%3Ci16%3E"],[57,"impl-AtomicCell%3Ci16%3E"],[58,"impl-AtomicCell%3Cisize%3E"],[59,"impl-AtomicCell%3Cu64%3E"],[60,"impl-AtomicCell%3Cbool%3E"],[61,"impl-AtomicCell%3Cu8%3E"],[62,"impl-AtomicCell%3Ci64%3E"],[63,"impl-AtomicCell%3Ci128%3E"],[64,"impl-AtomicCell%3Cusize%3E"],[65,"impl-AtomicCell%3Cu32%3E"],[66,"impl-AtomicCell%3Cu16%3E"],[67,"impl-AtomicCell%3Ci32%3E"],[68,"impl-AtomicCell%3Ci8%3E"],[69,"impl-AtomicCell%3Cu128%3E"],[70,"impl-AtomicCell%3Cisize%3E"],[71,"impl-AtomicCell%3Cu64%3E"],[72,"impl-AtomicCell%3Ci8%3E"],[73,"impl-AtomicCell%3Cu32%3E"],[74,"impl-AtomicCell%3Cusize%3E"],[75,"impl-AtomicCell%3Ci32%3E"],[76,"impl-AtomicCell%3Cu128%3E"],[77,"impl-AtomicCell%3Ci64%3E"],[78,"impl-AtomicCell%3Cu8%3E"],[79,"impl-AtomicCell%3Cu16%3E"],[80,"impl-AtomicCell%3Ci128%3E"],[81,"impl-AtomicCell%3Ci16%3E"],[82,"impl-AtomicCell%3Cu32%3E"],[83,"impl-AtomicCell%3Cusize%3E"],[84,"impl-AtomicCell%3Cu64%3E"],[85,"impl-AtomicCell%3Cisize%3E"],[86,"impl-AtomicCell%3Ci16%3E"],[87,"impl-AtomicCell%3Ci128%3E"],[88,"impl-AtomicCell%3Cu128%3E"],[89,"impl-AtomicCell%3Cu16%3E"],[90,"impl-AtomicCell%3Ci32%3E"],[91,"impl-AtomicCell%3Cu8%3E"],[92,"impl-AtomicCell%3Ci64%3E"],[93,"impl-AtomicCell%3Ci8%3E"],[94,"impl-AtomicCell%3Cu16%3E"],[95,"impl-AtomicCell%3Ci16%3E"],[96,"impl-AtomicCell%3Cu128%3E"],[97,"impl-AtomicCell%3Ci8%3E"],[98,"impl-AtomicCell%3Ci32%3E"],[99,"impl-AtomicCell%3Cisize%3E"],[100,"impl-AtomicCell%3Ci64%3E"],[101,"impl-AtomicCell%3Cusize%3E"],[102,"impl-AtomicCell%3Cu32%3E"],[103,"impl-AtomicCell%3Cbool%3E"],[104,"impl-AtomicCell%3Ci128%3E"],[105,"impl-AtomicCell%3Cu8%3E"],[106,"impl-AtomicCell%3Cu64%3E"],[107,"impl-AtomicCell%3Ci16%3E"],[108,"impl-AtomicCell%3Cu128%3E"],[109,"impl-AtomicCell%3Cu64%3E"],[110,"impl-AtomicCell%3Cbool%3E"],[111,"impl-AtomicCell%3Cu8%3E"],[112,"impl-AtomicCell%3Cisize%3E"],[113,"impl-AtomicCell%3Ci8%3E"],[114,"impl-AtomicCell%3Cu16%3E"],[115,"impl-AtomicCell%3Ci64%3E"],[116,"impl-AtomicCell%3Cusize%3E"],[117,"impl-AtomicCell%3Cu32%3E"],[118,"impl-AtomicCell%3Ci32%3E"],[119,"impl-AtomicCell%3Ci128%3E"],[120,"impl-AtomicCell%3Ci32%3E"],[121,"impl-AtomicCell%3Cusize%3E"],[122,"impl-AtomicCell%3Cu8%3E"],[123,"impl-AtomicCell%3Cu128%3E"],[124,"impl-AtomicCell%3Ci64%3E"],[125,"impl-AtomicCell%3Ci8%3E"],[126,"impl-AtomicCell%3Cu64%3E"],[127,"impl-AtomicCell%3Cisize%3E"],[128,"impl-AtomicCell%3Cu16%3E"],[129,"impl-AtomicCell%3Ci128%3E"],[130,"impl-AtomicCell%3Cu32%3E"],[131,"impl-AtomicCell%3Ci16%3E"],[133,"impl-AtomicCell%3Ci64%3E"],[134,"impl-AtomicCell%3Cisize%3E"],[135,"impl-AtomicCell%3Cbool%3E"],[136,"impl-AtomicCell%3Cu64%3E"],[137,"impl-AtomicCell%3Cu8%3E"],[138,"impl-AtomicCell%3Cu16%3E"],[139,"impl-AtomicCell%3Ci128%3E"],[140,"impl-AtomicCell%3Cusize%3E"],[141,"impl-AtomicCell%3Ci32%3E"],[142,"impl-AtomicCell%3Cu128%3E"],[143,"impl-AtomicCell%3Ci16%3E"],[144,"impl-AtomicCell%3Cu32%3E"],[145,"impl-AtomicCell%3Ci8%3E"]]},\
"deranged":{"doc":"","t":"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MAX","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","MIN","None","None","None","None","None","None","None","None","None","None","None","None","OptionRangedI128","OptionRangedI16","OptionRangedI32","OptionRangedI64","OptionRangedI8","OptionRangedIsize","OptionRangedU128","OptionRangedU16","OptionRangedU32","OptionRangedU64","OptionRangedU8","OptionRangedUsize","ParseIntError","RangedI128","RangedI16","RangedI32","RangedI64","RangedI8","RangedIsize","RangedU128","RangedU16","RangedU32","RangedU64","RangedU8","RangedUsize","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","TryFromIntError","abs","abs","abs","abs","abs","abs","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_abs","checked_abs","checked_abs","checked_abs","checked_abs","checked_abs","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_div_euclid","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_mul","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_neg","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_pow","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_rem_euclid","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shl","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_shr","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expand","expand","expand","expand","expand","expand","expand","expand","expand","expand","expand","expand","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_str_radix","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","get_primitive","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_none","is_some","is_some","is_some","is_some","is_some","is_some","is_some","is_some","is_some","is_some","is_some","is_some","kind","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","metadata","narrow","narrow","narrow","narrow","narrow","narrow","narrow","narrow","narrow","narrow","narrow","narrow","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_static","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","saturating_abs","saturating_abs","saturating_abs","saturating_abs","saturating_abs","saturating_abs","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_add","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_mul","saturating_neg","saturating_neg","saturating_neg","saturating_neg","saturating_neg","saturating_neg","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_pow","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","saturating_sub","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","some_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unchecked_abs","unchecked_abs","unchecked_abs","unchecked_abs","unchecked_abs","unchecked_abs","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_add","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_div_euclid","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_mul","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_neg","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_pow","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_rem_euclid","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shl","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_shr","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","unchecked_sub","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add","wrapping_add"],"q":[[0,"deranged"],[1111,"core::option"],[1112,"core::cmp"],[1113,"core::fmt"],[1114,"core::fmt"],[1115,"core::result"],[1116,"core::hash"],[1117,"core::num::error"],[1118,"powerfmt::smart_display"]],"d":["The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The largest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","The smallest value that can be represented by this type.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","An optional ranged value that is not present.","A <code>RangedI128</code> that is optional. Equivalent to …","A <code>RangedI16</code> that is optional. Equivalent to …","A <code>RangedI32</code> that is optional. Equivalent to …","A <code>RangedI64</code> that is optional. Equivalent to …","A <code>RangedI8</code> that is optional. Equivalent to <code>Option&lt;RangedI8&gt;</code>…","A <code>RangedIsize</code> that is optional. Equivalent to …","A <code>RangedU128</code> that is optional. Equivalent to …","A <code>RangedU16</code> that is optional. Equivalent to …","A <code>RangedU32</code> that is optional. Equivalent to …","A <code>RangedU64</code> that is optional. Equivalent to …","A <code>RangedU8</code> that is optional. Equivalent to <code>Option&lt;RangedU8&gt;</code>…","A <code>RangedUsize</code> that is optional. Equivalent to …","","An <code>i128</code> that is known to be in the range <code>MIN..=MAX</code>.","An <code>i16</code> that is known to be in the range <code>MIN..=MAX</code>.","An <code>i32</code> that is known to be in the range <code>MIN..=MAX</code>.","An <code>i64</code> that is known to be in the range <code>MIN..=MAX</code>.","An <code>i8</code> that is known to be in the range <code>MIN..=MAX</code>.","An <code>isize</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>u128</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>u16</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>u32</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>u64</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>u8</code> that is known to be in the range <code>MIN..=MAX</code>.","A <code>usize</code> that is known to be in the range <code>MIN..=MAX</code>.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","Creates an optional ranged value that is present.","","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.abs()</code>, <strong>failing to compile</strong> if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked absolute value. Computes <code>self.abs()</code>, returning <code>None</code>…","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self + rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked integer addition. Computes <code>self / rhs</code>, returning …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked Euclidean division. Computes <code>self.div_euclid(rhs)</code>, …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked integer addition. Computes <code>self * rhs</code>, returning …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked negation. Computes <code>-self</code>, returning <code>None</code> if the …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked exponentiation. Computes <code>self.pow(exp)</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked integer remainder. Computes <code>self % rhs</code>, returning …","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked Euclidean remainder. Computes <code>self.rem_euclid(rhs)</code>…","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","Checked integer addition. Computes <code>self - rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","Expand the range that the value may be in. <strong>Fails to compile</strong>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Converts a string slice in a given base to an integer.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","Returns the value as a primitive type.","Returns the value as the standard library’s <code>Option</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Returns <code>true</code> if the value is not the niche value.","Outputs the detailed cause of parsing an integer failing.","","","","","","","","","","","","","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Attempt to narrow the range that the value may be in. …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Absolute value. Computes <code>self.neg()</code>, <strong>failing to compile</strong> if …","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer if the given value is in the range","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer with a statically known value. …","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","Creates a ranged integer without checking the value.","","","","","","","","","","","","","","","","","","","","","","","","","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating absolute value. Computes <code>self.abs()</code>, saturating …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer addition. Computes <code>self + rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer multiplication. Computes <code>self * rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer negation. Computes <code>self - rhs</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer exponentiation. Computes <code>self.pow(exp)</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Saturating integer subtraction. Computes <code>self - rhs</code>, …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","Creates an optional ranged integer without checking the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked absolute value. Computes <code>self.abs()</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer addition. Computes <code>self + rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked integer division. Computes <code>self / rhs</code>, assuming …","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked Euclidean division. Computes <code>self.div_euclid(rhs)</code>…","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked integer multiplication. Computes <code>self * rhs</code>, …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked negation. Computes <code>-self</code>, assuming that <code>-self</code> is …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked exponentiation. Computes <code>self.pow(exp)</code>, assuming …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked remainder. Computes <code>self % rhs</code>, assuming that …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked Euclidean remainder. Computes …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift left. Computes <code>self &lt;&lt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked shift right. Computes <code>self &gt;&gt; rhs</code>, assuming that …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Unchecked integer subtraction. Computes <code>self - rhs</code>, …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …","Wrapping integer addition. Computes <code>self + rhs</code>, wrapping …"],"i":[1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,2,4,6,8,10,12,14,16,18,20,22,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,14,16,18,20,22,24,0,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,38,39,1,1,2,3,3,4,5,5,6,7,7,8,9,9,10,11,11,12,13,13,14,15,15,16,17,17,18,19,19,20,21,21,22,23,23,24,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,4,6,8,10,12,14,16,18,20,22,24,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,1,3,5,7,9,11,13,15,17,19,21,23,38,38,39,39,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,3,4,5,5,5,5,5,5,5,5,6,7,7,7,7,7,7,7,7,8,9,9,9,9,9,9,9,9,10,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,14,15,15,15,15,15,15,15,15,16,17,17,17,17,17,17,17,17,18,19,19,19,19,19,19,19,19,20,21,21,21,21,21,21,21,21,22,23,23,23,23,23,23,23,23,24,1,3,5,7,9,11,13,15,17,19,21,23,38,39,1,2,2,2,3,4,4,4,5,6,6,6,7,8,8,8,9,10,10,10,11,12,12,12,13,14,14,14,15,16,16,16,17,18,18,18,19,20,20,20,21,22,22,22,23,24,24,24,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,4,6,8,10,12,14,16,18,20,22,24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,2,4,6,8,10,12,14,16,18,20,22,24,2,4,6,8,10,12,14,16,18,20,22,24,39,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,2,4,6,8,10,12,14,16,18,20,22,24,38,39,1,1,2,3,3,4,5,5,6,7,7,8,9,9,10,11,11,12,13,13,14,15,15,16,17,17,18,19,19,20,21,21,22,23,23,24,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,38,39,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23,1,3,5,7,9,11,13,15,17,19,21,23],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[5,6],[7,8],[9,10],[11,12],[13,14],[15,16],[17,18],[19,20],[21,22],[23,24],0,[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[1,25],[3,26],[5,27],[7,28],[9,29],[11,30],[13,31],[15,32],[17,33],[19,34],[21,35],[23,36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,25],[-1,-2,[],[]],[3,26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,27],[-1,-2,[],[]],[-1,-2,[],[]],[7,28],[-1,-2,[],[]],[9,29],[-1,-2,[],[]],[-1,-2,[],[]],[11,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,31],[-1,-2,[],[]],[15,32],[-1,-2,[],[]],[-1,-2,[],[]],[17,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,34],[-1,-2,[],[]],[-1,-2,[],[]],[21,35],[-1,-2,[],[]],[23,36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,[[37,[13]]]],[15,[[37,[15]]]],[17,[[37,[17]]]],[19,[[37,[19]]]],[21,[[37,[21]]]],[23,[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[1,[[37,[1]]]],[3,[[37,[3]]]],[5,[[37,[5]]]],[7,[[37,[7]]]],[9,[[37,[9]]]],[11,[[37,[11]]]],[13,[[37,[13]]]],[15,[[37,[15]]]],[17,[[37,[17]]]],[19,[[37,[19]]]],[21,[[37,[21]]]],[23,[[37,[23]]]],[[1,27],[[37,[1]]]],[[3,27],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,27],[[37,[7]]]],[[9,27],[[37,[9]]]],[[11,27],[[37,[11]]]],[[13,27],[[37,[13]]]],[[15,27],[[37,[15]]]],[[17,27],[[37,[17]]]],[[19,27],[[37,[19]]]],[[21,27],[[37,[21]]]],[[23,27],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[[1,27],[[37,[1]]]],[[3,27],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,27],[[37,[7]]]],[[9,27],[[37,[9]]]],[[11,27],[[37,[11]]]],[[13,27],[[37,[13]]]],[[15,27],[[37,[15]]]],[[17,27],[[37,[17]]]],[[19,27],[[37,[19]]]],[[21,27],[[37,[21]]]],[[23,27],[[37,[23]]]],[[1,27],[[37,[1]]]],[[3,27],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,27],[[37,[7]]]],[[9,27],[[37,[9]]]],[[11,27],[[37,[11]]]],[[13,27],[[37,[13]]]],[[15,27],[[37,[15]]]],[[17,27],[[37,[17]]]],[[19,27],[[37,[19]]]],[[21,27],[[37,[21]]]],[[23,27],[[37,[23]]]],[[1,25],[[37,[1]]]],[[3,26],[[37,[3]]]],[[5,27],[[37,[5]]]],[[7,28],[[37,[7]]]],[[9,29],[[37,[9]]]],[[11,30],[[37,[11]]]],[[13,31],[[37,[13]]]],[[15,32],[[37,[15]]]],[[17,33],[[37,[17]]]],[[19,34],[[37,[19]]]],[[21,35],[[37,[21]]]],[[23,36],[[37,[23]]]],[38,38],[39,39],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[[1,1],40],[[2,2],40],[[3,3],40],[[4,4],40],[[5,5],40],[[6,6],40],[[7,7],40],[[8,8],40],[[9,9],40],[[10,10],40],[[11,11],40],[[12,12],40],[[13,13],40],[[14,14],40],[[15,15],40],[[16,16],40],[[17,17],40],[[18,18],40],[[19,19],40],[[20,20],40],[[21,21],40],[[22,22],40],[[23,23],40],[[24,24],40],[[],2],[[],4],[[],6],[[],8],[[],10],[[],12],[[],14],[[],16],[[],18],[[],20],[[],22],[[],24],[[38,38],41],[[39,39],41],[[1,1],41],[[2,2],41],[[3,3],41],[[4,4],41],[[5,5],41],[[6,6],41],[[7,7],41],[[8,8],41],[[9,9],41],[[10,10],41],[[11,11],41],[[12,12],41],[[13,13],41],[[14,14],41],[[15,15],41],[[16,16],41],[[17,17],41],[[18,18],41],[[19,19],41],[[20,20],41],[[21,21],41],[[22,22],41],[[23,23],41],[[24,24],41],[1,1],[3,3],[5,5],[7,7],[9,9],[11,11],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[[38,42],43],[[38,42],43],[[39,42],43],[[39,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[1,42],43],[[2,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[3,42],43],[[4,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[5,42],43],[[6,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[7,42],43],[[8,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[9,42],43],[[10,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[11,42],43],[[12,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[13,42],43],[[14,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[15,42],43],[[16,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[17,42],43],[[18,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[19,42],43],[[20,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[21,42],43],[[22,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[23,42],43],[[24,42],43],[[1,42,[44,[1]]],43],[[3,42,[44,[3]]],43],[[5,42,[44,[5]]],43],[[7,42,[44,[7]]],43],[[9,42,[44,[9]]],43],[[11,42,[44,[11]]],43],[[13,42,[44,[13]]],43],[[15,42,[44,[15]]],43],[[17,42,[44,[17]]],43],[[19,42,[44,[19]]],43],[[21,42,[44,[21]]],43],[[23,42,[44,[23]]],43],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,2],[-1,-1,[]],[[[37,[1]]],2],[-1,-1,[]],[-1,-1,[]],[3,4],[[[37,[3]]],4],[-1,-1,[]],[[[37,[5]]],6],[5,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[37,[7]]],8],[7,8],[-1,-1,[]],[[[37,[9]]],10],[-1,-1,[]],[9,10],[-1,-1,[]],[[[37,[11]]],12],[11,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[37,[13]]],14],[13,14],[-1,-1,[]],[[[37,[15]]],16],[15,16],[-1,-1,[]],[-1,-1,[]],[[[37,[17]]],18],[17,18],[-1,-1,[]],[-1,-1,[]],[[[37,[19]]],20],[-1,-1,[]],[19,20],[-1,-1,[]],[[[37,[21]]],22],[-1,-1,[]],[21,22],[-1,-1,[]],[-1,-1,[]],[[[37,[23]]],24],[23,24],[45,[[46,[1]]]],[45,[[46,[3]]]],[45,[[46,[5]]]],[45,[[46,[7]]]],[45,[[46,[9]]]],[45,[[46,[11]]]],[45,[[46,[13]]]],[45,[[46,[15]]]],[45,[[46,[17]]]],[45,[[46,[19]]]],[45,[[46,[21]]]],[45,[[46,[23]]]],[[45,27],[[46,[1,39]]]],[[45,27],[[46,[3,39]]]],[[45,27],[[46,[5,39]]]],[[45,27],[[46,[7,39]]]],[[45,27],[[46,[9,39]]]],[[45,27],[[46,[11,39]]]],[[45,27],[[46,[13,39]]]],[[45,27],[[46,[15,39]]]],[[45,27],[[46,[17,39]]]],[[45,27],[[46,[19,39]]]],[[45,27],[[46,[21,39]]]],[[45,27],[[46,[23,39]]]],[1,25],[2,[[37,[1]]]],[3,26],[4,[[37,[3]]]],[5,27],[6,[[37,[5]]]],[7,28],[8,[[37,[7]]]],[9,29],[10,[[37,[9]]]],[11,30],[12,[[37,[11]]]],[13,31],[14,[[37,[13]]]],[15,32],[16,[[37,[15]]]],[17,33],[18,[[37,[17]]]],[19,34],[20,[[37,[19]]]],[21,35],[22,[[37,[21]]]],[23,36],[24,[[37,[23]]]],[2,[[37,[25]]]],[4,[[37,[26]]]],[6,[[37,[27]]]],[8,[[37,[28]]]],[10,[[37,[29]]]],[12,[[37,[30]]]],[14,[[37,[31]]]],[16,[[37,[32]]]],[18,[[37,[33]]]],[20,[[37,[34]]]],[22,[[37,[35]]]],[24,[[37,[36]]]],[[1,-1],47,48],[[2,-1],47,48],[[3,-1],47,48],[[4,-1],47,48],[[5,-1],47,48],[[6,-1],47,48],[[7,-1],47,48],[[8,-1],47,48],[[9,-1],47,48],[[10,-1],47,48],[[11,-1],47,48],[[12,-1],47,48],[[13,-1],47,48],[[14,-1],47,48],[[15,-1],47,48],[[16,-1],47,48],[[17,-1],47,48],[[18,-1],47,48],[[19,-1],47,48],[[20,-1],47,48],[[21,-1],47,48],[[22,-1],47,48],[[23,-1],47,48],[[24,-1],47,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,41],[4,41],[6,41],[8,41],[10,41],[12,41],[14,41],[16,41],[18,41],[20,41],[22,41],[24,41],[2,41],[4,41],[6,41],[8,41],[10,41],[12,41],[14,41],[16,41],[18,41],[20,41],[22,41],[24,41],[39,49],[[1,50],[[44,[1]]]],[[3,50],[[44,[3]]]],[[5,50],[[44,[5]]]],[[7,50],[[44,[7]]]],[[9,50],[[44,[9]]]],[[11,50],[[44,[11]]]],[[13,50],[[44,[13]]]],[[15,50],[[44,[15]]]],[[17,50],[[44,[17]]]],[[19,50],[[44,[19]]]],[[21,50],[[44,[21]]]],[[23,50],[[44,[23]]]],[1,[[37,[1]]]],[3,[[37,[3]]]],[5,[[37,[5]]]],[7,[[37,[7]]]],[9,[[37,[9]]]],[11,[[37,[11]]]],[13,[[37,[13]]]],[15,[[37,[15]]]],[17,[[37,[17]]]],[19,[[37,[19]]]],[21,[[37,[21]]]],[23,[[37,[23]]]],[1,1],[3,3],[5,5],[7,7],[9,9],[11,11],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[25,[[37,[1]]]],[26,[[37,[3]]]],[27,[[37,[5]]]],[28,[[37,[7]]]],[29,[[37,[9]]]],[30,[[37,[11]]]],[31,[[37,[13]]]],[32,[[37,[15]]]],[33,[[37,[17]]]],[34,[[37,[19]]]],[35,[[37,[21]]]],[36,[[37,[23]]]],[[],1],[[],3],[[],5],[[],7],[[],9],[[],11],[[],13],[[],15],[[],17],[[],19],[[],21],[[],23],[25,1],[26,3],[27,5],[28,7],[29,9],[30,11],[31,13],[32,15],[33,17],[34,19],[35,21],[36,23],[[1,1],[[37,[40]]]],[[2,2],[[37,[40]]]],[[3,3],[[37,[40]]]],[[4,4],[[37,[40]]]],[[5,5],[[37,[40]]]],[[6,6],[[37,[40]]]],[[7,7],[[37,[40]]]],[[8,8],[[37,[40]]]],[[9,9],[[37,[40]]]],[[10,10],[[37,[40]]]],[[11,11],[[37,[40]]]],[[12,12],[[37,[40]]]],[[13,13],[[37,[40]]]],[[14,14],[[37,[40]]]],[[15,15],[[37,[40]]]],[[16,16],[[37,[40]]]],[[17,17],[[37,[40]]]],[[18,18],[[37,[40]]]],[[19,19],[[37,[40]]]],[[20,20],[[37,[40]]]],[[21,21],[[37,[40]]]],[[22,22],[[37,[40]]]],[[23,23],[[37,[40]]]],[[24,24],[[37,[40]]]],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[[1,27],1],[[3,27],3],[[5,27],5],[[7,27],7],[[9,27],9],[[11,27],11],[[13,27],13],[[15,27],15],[[17,27],17],[[19,27],19],[[21,27],21],[[23,27],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[25,2],[26,4],[27,6],[28,8],[29,10],[30,12],[31,14],[32,16],[33,18],[34,20],[35,22],[36,24],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[25,[[46,[1]]]],[-1,[[46,[-2]]],[],[]],[26,[[46,[3]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[27,[[46,[5]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[28,[[46,[7]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[29,[[46,[9]]]],[-1,[[46,[-2]]],[],[]],[30,[[46,[11]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[31,[[46,[13]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[32,[[46,[15]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[33,[[46,[17]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[34,[[46,[19]]]],[-1,[[46,[-2]]],[],[]],[35,[[46,[21]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[36,[[46,[23]]]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,[[46,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[1,1],[3,3],[5,5],[7,7],[9,9],[11,11],[13,13],[15,15],[17,17],[19,19],[21,21],[23,23],[[1,27],1],[[3,27],3],[[5,27],5],[[7,27],7],[[9,27],9],[[11,27],11],[[13,27],13],[[15,27],15],[[17,27],17],[[19,27],19],[[21,27],21],[[23,27],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,27],1],[[3,27],3],[[5,27],5],[[7,27],7],[[9,27],9],[[11,27],11],[[13,27],13],[[15,27],15],[[17,27],17],[[19,27],19],[[21,27],21],[[23,27],23],[[1,27],1],[[3,27],3],[[5,27],5],[[7,27],7],[[9,27],9],[[11,27],11],[[13,27],13],[[15,27],15],[[17,27],17],[[19,27],19],[[21,27],21],[[23,27],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23],[[1,25],1],[[3,26],3],[[5,27],5],[[7,28],7],[[9,29],9],[[11,30],11],[[13,31],13],[[15,32],15],[[17,33],17],[[19,34],19],[[21,35],21],[[23,36],23]],"c":[],"p":[[3,"RangedU8",0],[3,"OptionRangedU8",0],[3,"RangedU16",0],[3,"OptionRangedU16",0],[3,"RangedU32",0],[3,"OptionRangedU32",0],[3,"RangedU64",0],[3,"OptionRangedU64",0],[3,"RangedU128",0],[3,"OptionRangedU128",0],[3,"RangedUsize",0],[3,"OptionRangedUsize",0],[3,"RangedI8",0],[3,"OptionRangedI8",0],[3,"RangedI16",0],[3,"OptionRangedI16",0],[3,"RangedI32",0],[3,"OptionRangedI32",0],[3,"RangedI64",0],[3,"OptionRangedI64",0],[3,"RangedI128",0],[3,"OptionRangedI128",0],[3,"RangedIsize",0],[3,"OptionRangedIsize",0],[15,"u8"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u128"],[15,"usize"],[15,"i8"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i128"],[15,"isize"],[4,"Option",1111],[3,"TryFromIntError",0],[3,"ParseIntError",0],[4,"Ordering",1112],[15,"bool"],[3,"Formatter",1113],[6,"Result",1113],[3,"Metadata",1114],[15,"str"],[4,"Result",1115],[15,"tuple"],[8,"Hasher",1116],[4,"IntErrorKind",1117],[3,"FormatterOptions",1114],[3,"TypeId",1118]],"b":[[394,"impl-Display-for-TryFromIntError"],[395,"impl-Debug-for-TryFromIntError"],[396,"impl-Display-for-ParseIntError"],[397,"impl-Debug-for-ParseIntError"],[398,"impl-LowerHex-for-RangedU8%3CMIN,+MAX%3E"],[399,"impl-UpperExp-for-RangedU8%3CMIN,+MAX%3E"],[400,"impl-LowerExp-for-RangedU8%3CMIN,+MAX%3E"],[401,"impl-Binary-for-RangedU8%3CMIN,+MAX%3E"],[402,"impl-Display-for-RangedU8%3CMIN,+MAX%3E"],[403,"impl-UpperHex-for-RangedU8%3CMIN,+MAX%3E"],[404,"impl-Debug-for-RangedU8%3CMIN,+MAX%3E"],[405,"impl-Octal-for-RangedU8%3CMIN,+MAX%3E"],[407,"impl-LowerHex-for-RangedU16%3CMIN,+MAX%3E"],[408,"impl-UpperExp-for-RangedU16%3CMIN,+MAX%3E"],[409,"impl-Debug-for-RangedU16%3CMIN,+MAX%3E"],[410,"impl-Display-for-RangedU16%3CMIN,+MAX%3E"],[411,"impl-UpperHex-for-RangedU16%3CMIN,+MAX%3E"],[412,"impl-LowerExp-for-RangedU16%3CMIN,+MAX%3E"],[413,"impl-Binary-for-RangedU16%3CMIN,+MAX%3E"],[414,"impl-Octal-for-RangedU16%3CMIN,+MAX%3E"],[416,"impl-LowerExp-for-RangedU32%3CMIN,+MAX%3E"],[417,"impl-UpperExp-for-RangedU32%3CMIN,+MAX%3E"],[418,"impl-Display-for-RangedU32%3CMIN,+MAX%3E"],[419,"impl-Octal-for-RangedU32%3CMIN,+MAX%3E"],[420,"impl-Binary-for-RangedU32%3CMIN,+MAX%3E"],[421,"impl-UpperHex-for-RangedU32%3CMIN,+MAX%3E"],[422,"impl-LowerHex-for-RangedU32%3CMIN,+MAX%3E"],[423,"impl-Debug-for-RangedU32%3CMIN,+MAX%3E"],[425,"impl-Debug-for-RangedU64%3CMIN,+MAX%3E"],[426,"impl-Binary-for-RangedU64%3CMIN,+MAX%3E"],[427,"impl-Octal-for-RangedU64%3CMIN,+MAX%3E"],[428,"impl-UpperHex-for-RangedU64%3CMIN,+MAX%3E"],[429,"impl-UpperExp-for-RangedU64%3CMIN,+MAX%3E"],[430,"impl-LowerHex-for-RangedU64%3CMIN,+MAX%3E"],[431,"impl-LowerExp-for-RangedU64%3CMIN,+MAX%3E"],[432,"impl-Display-for-RangedU64%3CMIN,+MAX%3E"],[434,"impl-Octal-for-RangedU128%3CMIN,+MAX%3E"],[435,"impl-LowerHex-for-RangedU128%3CMIN,+MAX%3E"],[436,"impl-Display-for-RangedU128%3CMIN,+MAX%3E"],[437,"impl-UpperHex-for-RangedU128%3CMIN,+MAX%3E"],[438,"impl-Debug-for-RangedU128%3CMIN,+MAX%3E"],[439,"impl-Binary-for-RangedU128%3CMIN,+MAX%3E"],[440,"impl-UpperExp-for-RangedU128%3CMIN,+MAX%3E"],[441,"impl-LowerExp-for-RangedU128%3CMIN,+MAX%3E"],[443,"impl-UpperExp-for-RangedUsize%3CMIN,+MAX%3E"],[444,"impl-LowerExp-for-RangedUsize%3CMIN,+MAX%3E"],[445,"impl-UpperHex-for-RangedUsize%3CMIN,+MAX%3E"],[446,"impl-Debug-for-RangedUsize%3CMIN,+MAX%3E"],[447,"impl-Display-for-RangedUsize%3CMIN,+MAX%3E"],[448,"impl-Octal-for-RangedUsize%3CMIN,+MAX%3E"],[449,"impl-LowerHex-for-RangedUsize%3CMIN,+MAX%3E"],[450,"impl-Binary-for-RangedUsize%3CMIN,+MAX%3E"],[452,"impl-Octal-for-RangedI8%3CMIN,+MAX%3E"],[453,"impl-LowerHex-for-RangedI8%3CMIN,+MAX%3E"],[454,"impl-LowerExp-for-RangedI8%3CMIN,+MAX%3E"],[455,"impl-Binary-for-RangedI8%3CMIN,+MAX%3E"],[456,"impl-UpperHex-for-RangedI8%3CMIN,+MAX%3E"],[457,"impl-UpperExp-for-RangedI8%3CMIN,+MAX%3E"],[458,"impl-Debug-for-RangedI8%3CMIN,+MAX%3E"],[459,"impl-Display-for-RangedI8%3CMIN,+MAX%3E"],[461,"impl-UpperExp-for-RangedI16%3CMIN,+MAX%3E"],[462,"impl-Binary-for-RangedI16%3CMIN,+MAX%3E"],[463,"impl-Debug-for-RangedI16%3CMIN,+MAX%3E"],[464,"impl-LowerExp-for-RangedI16%3CMIN,+MAX%3E"],[465,"impl-LowerHex-for-RangedI16%3CMIN,+MAX%3E"],[466,"impl-Octal-for-RangedI16%3CMIN,+MAX%3E"],[467,"impl-UpperHex-for-RangedI16%3CMIN,+MAX%3E"],[468,"impl-Display-for-RangedI16%3CMIN,+MAX%3E"],[470,"impl-UpperHex-for-RangedI32%3CMIN,+MAX%3E"],[471,"impl-Debug-for-RangedI32%3CMIN,+MAX%3E"],[472,"impl-LowerHex-for-RangedI32%3CMIN,+MAX%3E"],[473,"impl-Binary-for-RangedI32%3CMIN,+MAX%3E"],[474,"impl-Display-for-RangedI32%3CMIN,+MAX%3E"],[475,"impl-UpperExp-for-RangedI32%3CMIN,+MAX%3E"],[476,"impl-Octal-for-RangedI32%3CMIN,+MAX%3E"],[477,"impl-LowerExp-for-RangedI32%3CMIN,+MAX%3E"],[479,"impl-LowerHex-for-RangedI64%3CMIN,+MAX%3E"],[480,"impl-Binary-for-RangedI64%3CMIN,+MAX%3E"],[481,"impl-Debug-for-RangedI64%3CMIN,+MAX%3E"],[482,"impl-UpperExp-for-RangedI64%3CMIN,+MAX%3E"],[483,"impl-LowerExp-for-RangedI64%3CMIN,+MAX%3E"],[484,"impl-Display-for-RangedI64%3CMIN,+MAX%3E"],[485,"impl-Octal-for-RangedI64%3CMIN,+MAX%3E"],[486,"impl-UpperHex-for-RangedI64%3CMIN,+MAX%3E"],[488,"impl-LowerExp-for-RangedI128%3CMIN,+MAX%3E"],[489,"impl-Octal-for-RangedI128%3CMIN,+MAX%3E"],[490,"impl-Display-for-RangedI128%3CMIN,+MAX%3E"],[491,"impl-UpperExp-for-RangedI128%3CMIN,+MAX%3E"],[492,"impl-Debug-for-RangedI128%3CMIN,+MAX%3E"],[493,"impl-UpperHex-for-RangedI128%3CMIN,+MAX%3E"],[494,"impl-Binary-for-RangedI128%3CMIN,+MAX%3E"],[495,"impl-LowerHex-for-RangedI128%3CMIN,+MAX%3E"],[497,"impl-Octal-for-RangedIsize%3CMIN,+MAX%3E"],[498,"impl-LowerHex-for-RangedIsize%3CMIN,+MAX%3E"],[499,"impl-UpperHex-for-RangedIsize%3CMIN,+MAX%3E"],[500,"impl-Binary-for-RangedIsize%3CMIN,+MAX%3E"],[501,"impl-Display-for-RangedIsize%3CMIN,+MAX%3E"],[502,"impl-Debug-for-RangedIsize%3CMIN,+MAX%3E"],[503,"impl-LowerExp-for-RangedIsize%3CMIN,+MAX%3E"],[504,"impl-UpperExp-for-RangedIsize%3CMIN,+MAX%3E"],[521,"impl-From%3CRangedU8%3CMIN,+MAX%3E%3E-for-OptionRangedU8%3CMIN,+MAX%3E"],[523,"impl-From%3COption%3CRangedU8%3CMIN,+MAX%3E%3E%3E-for-OptionRangedU8%3CMIN,+MAX%3E"],[526,"impl-From%3CRangedU16%3CMIN,+MAX%3E%3E-for-OptionRangedU16%3CMIN,+MAX%3E"],[527,"impl-From%3COption%3CRangedU16%3CMIN,+MAX%3E%3E%3E-for-OptionRangedU16%3CMIN,+MAX%3E"],[529,"impl-From%3COption%3CRangedU32%3CMIN,+MAX%3E%3E%3E-for-OptionRangedU32%3CMIN,+MAX%3E"],[530,"impl-From%3CRangedU32%3CMIN,+MAX%3E%3E-for-OptionRangedU32%3CMIN,+MAX%3E"],[534,"impl-From%3COption%3CRangedU64%3CMIN,+MAX%3E%3E%3E-for-OptionRangedU64%3CMIN,+MAX%3E"],[535,"impl-From%3CRangedU64%3CMIN,+MAX%3E%3E-for-OptionRangedU64%3CMIN,+MAX%3E"],[537,"impl-From%3COption%3CRangedU128%3CMIN,+MAX%3E%3E%3E-for-OptionRangedU128%3CMIN,+MAX%3E"],[539,"impl-From%3CRangedU128%3CMIN,+MAX%3E%3E-for-OptionRangedU128%3CMIN,+MAX%3E"],[541,"impl-From%3COption%3CRangedUsize%3CMIN,+MAX%3E%3E%3E-for-OptionRangedUsize%3CMIN,+MAX%3E"],[542,"impl-From%3CRangedUsize%3CMIN,+MAX%3E%3E-for-OptionRangedUsize%3CMIN,+MAX%3E"],[546,"impl-From%3COption%3CRangedI8%3CMIN,+MAX%3E%3E%3E-for-OptionRangedI8%3CMIN,+MAX%3E"],[547,"impl-From%3CRangedI8%3CMIN,+MAX%3E%3E-for-OptionRangedI8%3CMIN,+MAX%3E"],[549,"impl-From%3COption%3CRangedI16%3CMIN,+MAX%3E%3E%3E-for-OptionRangedI16%3CMIN,+MAX%3E"],[550,"impl-From%3CRangedI16%3CMIN,+MAX%3E%3E-for-OptionRangedI16%3CMIN,+MAX%3E"],[553,"impl-From%3COption%3CRangedI32%3CMIN,+MAX%3E%3E%3E-for-OptionRangedI32%3CMIN,+MAX%3E"],[554,"impl-From%3CRangedI32%3CMIN,+MAX%3E%3E-for-OptionRangedI32%3CMIN,+MAX%3E"],[557,"impl-From%3COption%3CRangedI64%3CMIN,+MAX%3E%3E%3E-for-OptionRangedI64%3CMIN,+MAX%3E"],[559,"impl-From%3CRangedI64%3CMIN,+MAX%3E%3E-for-OptionRangedI64%3CMIN,+MAX%3E"],[561,"impl-From%3COption%3CRangedI128%3CMIN,+MAX%3E%3E%3E-for-OptionRangedI128%3CMIN,+MAX%3E"],[563,"impl-From%3CRangedI128%3CMIN,+MAX%3E%3E-for-OptionRangedI128%3CMIN,+MAX%3E"],[566,"impl-From%3COption%3CRangedIsize%3CMIN,+MAX%3E%3E%3E-for-OptionRangedIsize%3CMIN,+MAX%3E"],[567,"impl-From%3CRangedIsize%3CMIN,+MAX%3E%3E-for-OptionRangedIsize%3CMIN,+MAX%3E"]]},\
"dyn_clone":{"doc":"github crates-io docs-rs","t":"IFFFOF","n":["DynClone","arc_make_mut","clone","clone_box","clone_trait_object","rc_make_mut"],"q":[[0,"dyn_clone"],[6,"alloc::sync"],[7,"core::marker"],[8,"alloc::boxed"],[9,"alloc::rc"]],"d":["This trait is implemented by any type that implements …","<code>&amp;mut Arc&lt;T&gt;</code> —▸ <code>&amp;mut T</code>","<code>&amp;T</code> —▸ <code>T</code>","<code>&amp;T</code> —▸ <code>Box&lt;T&gt;</code>","Implement the standard library <code>Clone</code> for a trait object …","<code>&amp;mut Rc&lt;T&gt;</code> —▸ <code>&amp;mut T</code>"],"i":[0,0,0,0,0,0],"f":[0,[[[1,[-1]]],-1,[2,3]],[-1,-1,3],[-1,[[4,[-1]]],[2,3]],0,[[[5,[-1]]],-1,[2,3]]],"c":[],"p":[[3,"Arc",6],[8,"Sized",7],[8,"DynClone",0],[3,"Box",8],[3,"Rc",9]],"b":[]},\
"exclusive_cell":{"doc":"This crate provides two thread-safe, non-blocking, no-std …","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CallOnce","CallOnceError","ExclusiveCell","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_once","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","get_mut","into","into","into","into_inner","is_taken","new","new","take","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","was_called"],"q":[[0,"exclusive_cell"],[40,"core::result"],[41,"core::default"],[42,"core::fmt"],[43,"core::fmt"],[44,"core::option"],[45,"core::any"]],"d":["A synchronization primitive that can only be called once …","The <code>CallOnceError</code> error indicates that <code>CallOnce::call_once</code> …","A synchronization primitive which can be accessed only …","","","","","","","Mark this <code>CallOnce</code> as called.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the value.","Returns <code>true</code> if the mutable reference has been taken.","Creates a new <code>CallOnce</code>.","Creates a new <code>ExclusiveCell</code> containing the given value.","Takes the mutable reference to the wrapped value.","","","","","","","","","","Returns <code>true</code> if <code>call_once</code> has been called."],"i":[0,0,0,1,3,5,1,3,5,1,1,5,1,3,3,5,1,3,5,5,5,5,1,3,5,5,5,1,5,5,1,3,5,1,3,5,1,3,5,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[2,3]]]],[[],1],[[],[[5,[-1]]],6],[[1,7],8],[[3,7],8],[[3,7],8],[[[5,[-1]],7],8,[9,10]],[-1,-1,[]],[-1,-1,[]],[-1,[[5,[-1]]],[]],[11,-1,[]],[-1,-1,[]],[[[5,[-1]]],-1,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1]]],-1,[]],[[[5,[-1]]],12,10],[[],1],[-1,[[5,[-1]]],[]],[[[5,[-1]]],[[13,[-1]]],10],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[1,12]],"c":[],"p":[[3,"CallOnce",0],[15,"tuple"],[3,"CallOnceError",0],[4,"Result",40],[3,"ExclusiveCell",0],[8,"Default",41],[3,"Formatter",42],[6,"Result",42],[8,"Debug",42],[8,"Sized",43],[15,"never"],[15,"bool"],[4,"Option",44],[3,"TypeId",45]],"b":[[13,"impl-Debug-for-CallOnceError"],[14,"impl-Display-for-CallOnceError"]]},\
"generic_once_cell":{"doc":"Overview","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","default","default","deref","deref_mut","eq","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"generic_once_cell"],[44,"lock_api::mutex"],[45,"core::clone"],[46,"core::default"],[47,"core::ops::function"],[48,"core::cmp"],[49,"core::fmt"],[50,"core::fmt"],[51,"core::result"],[52,"core::any"]],"d":["A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,1,5,1,5,1,1,1,5,5,5,1,1,5,5,5,1,1,1,5,1,5,1,5,1,1,1,1,5,1,5,1,5,1,1,1,5,1,1,5,1,5,1],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],2,3],[[[1,[-1,-2]],[1,[-1,-2]]],4,2,3],[[],[[1,[-1,-2]]],2,[]],[[],[[5,[-1,-2]]],2,6],[[[5,[-1,-2,-3]]],-2,2,[],7],[[[5,[-1,-2,-3]]],-2,2,[],7],[[[1,[-1,-2]],[1,[-1,-2]]],8,2,9],[[[1,[-1,-2]],10],11,2,12],[[[5,[-1,-2,-3]],10],11,2,12,[]],[[[5,[-1,-2,-3]]],-2,2,[],7],[[[5,[-1,-2,-3]]],-2,2,[],7],[-1,-1,[]],[-1,[[1,[-2,-1]]],[],2],[13,-1,[]],[-1,-1,[]],[[[1,[-1,-2]]],[[14,[-2]]],2,[]],[[[5,[-1,-2,-3]]],[[14,[-2]]],2,[],7],[[[1,[-1,-2]]],[[14,[-2]]],2,[]],[[[5,[-1,-2,-3]]],[[14,[-2]]],2,[],7],[[[1,[-1,-2]],-3],-2,2,[],7],[[[1,[-1,-2]],-3],[[15,[-2,-4]]],2,[],7,[]],[[[1,[-1,-2]]],-2,2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[14,[-2]]],2,[]],[[[5,[-1,-2,-3]]],[[15,[-2,-3]]],2,[],[]],[[],[[1,[-1,-2]]],2,[]],[-1,[[5,[-2,-3,-1]]],[],2,[]],[[[1,[-1,-2]],-2],[[15,[4,-2]]],2,[]],[[[1,[-1,-2]]],[[14,[-2]]],2,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[[[1,[-1,-2]],-2],[[15,[-2,[4,[-2,-2]]]]],2,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,[[1,[-2,-1]]],[],2]],"c":[],"p":[[3,"OnceCell",0],[8,"RawMutex",44],[8,"Clone",45],[15,"tuple"],[3,"Lazy",0],[8,"Default",46],[8,"FnOnce",47],[15,"bool"],[8,"PartialEq",48],[3,"Formatter",49],[6,"Result",49],[8,"Debug",49],[15,"never"],[4,"Option",50],[4,"Result",51],[3,"TypeId",52]],"b":[]},\
"hash32":{"doc":"32-bit hashing machinery","t":"IDDIIQDLLLLLLKLLLLLLKLLLLLLKLLLLLLLLLLLLLLKLL","n":["BuildHasher","BuildHasherDefault","FnvHasher","Hash","Hasher","Hasher","Murmur3Hasher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_hasher","build_hasher","clone","default","default","default","eq","finish","finish","finish","fmt","from","from","from","hash","hash_slice","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write"],"q":[[0,"hash32"],[45,"core::default"],[46,"core::fmt"],[47,"core::fmt"],[48,"core::result"],[49,"core::any"]],"d":["See <code>core::hash::BuildHasher</code> for details","See <code>core::hash::BuildHasherDefault</code> for details","32-bit Fowler-Noll-Vo hasher","See <code>core::hash::Hash</code> for details","See <code>core::hash::Hasher</code> for details","See <code>core::hash::BuildHasher::Hasher</code>","32-bit MurmurHash3 hasher","","","","","","","See <code>core::hash::BuildHasher.build_hasher</code>","","","","","","","See <code>core::hash::Hasher.finish</code>","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given <code>Hasher</code>.","Feeds a slice of this type into the given <code>Hasher</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>const</code> constructor","","","","","","","","","","See <code>core::hash::Hasher.write</code>","",""],"i":[0,0,0,0,0,16,0,4,5,1,4,5,1,16,1,1,4,5,1,1,3,4,5,1,4,5,1,17,17,4,5,1,1,4,5,1,4,5,1,4,5,1,3,4,5],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[[[1,[-1]]],[],[2,3]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[],4],[[],5],[[],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],6,[2,3]],[-1,7,[]],[4,7],[5,7],[[[1,[-1]],8],9,[2,3]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],10,[],3],[[[11,[-1]],-2],10,12,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[-1,[11,[15]]],10,[]],[[4,[11,[15]]],10],[[5,[11,[15]]],10]],"c":[],"p":[[3,"BuildHasherDefault",0],[8,"Default",45],[8,"Hasher",0],[3,"FnvHasher",0],[3,"Murmur3Hasher",0],[15,"bool"],[15,"u32"],[3,"Formatter",46],[6,"Result",46],[15,"tuple"],[15,"slice"],[8,"Sized",47],[4,"Result",48],[3,"TypeId",49],[15,"u8"],[8,"BuildHasher",0],[8,"Hash",0]],"b":[]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDDELLLLLKLLLAAALLLLLMEDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDEDDDDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","HashTable","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","hash_map","hash_set","hash_table","into","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","entry","entry","entry_ref","eq","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","entry","eq","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","next","next","next","next","next","next","next","next","or_insert","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","AbsentEntry","Drain","Entry","ExtractIf","HashTable","IntoIter","Iter","IterMut","Occupied","OccupiedEntry","Vacant","VacantEntry","allocator","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","default","drain","entry","extract_if","find","find_entry","find_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert","insert_unique","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_table","into_table","into_table","is_empty","iter","iter_mut","len","len","len","len","len","new","new_in","next","next","next","next","next","or_insert","or_insert_with","remove","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"hashbrown"],[24,"hashbrown::TryReserveError"],[25,"hashbrown::hash_map"],[424,"hashbrown::hash_set"],[637,"hashbrown::hash_table"],[788,"core::fmt"],[789,"core::fmt"],[790,"core::any"],[791,"core::ops::function"],[792,"core::marker"],[793,"core::clone"],[794,"core::cmp"],[795,"core::hash"],[796,"core::hash"],[797,"core::cmp"],[798,"core::ops::function"],[799,"core::option"],[800,"core::convert"],[801,"core::ops::function"],[802,"alloc::borrow"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Low-level hash table with explicit hashing.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A hash table implemented with quadratic probing and SIMD …","Calls <code>U::from(self)</code>.","","","","","The layout of the allocation request that failed.","Dummy default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …","Type representing the absence of an entry, as returned by …","A draining iterator over the items of a <code>HashTable</code>.","A view into a single entry in a table, which may either be …","A draining iterator over entries of a <code>HashTable</code> which don…","Low-level hash table with explicit hashing.","An owning iterator over the entries of a <code>HashTable</code> in …","An iterator over the entries of a <code>HashTable</code> in arbitrary …","A mutable iterator over the entries of a <code>HashTable</code> in …","An occupied entry.","A view into an occupied entry in a <code>HashTable</code>. It is part …","A vacant entry.","A view into a vacant entry in a <code>HashTable</code>. It is part of …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the table can hold without …","Clears the table, removing all values.","","","","Clears the set, returning all elements in an iterator.","Returns an <code>Entry</code> for an entry in the table with the given …","Drains elements which are true under the given predicate, …","Returns a reference to an entry in the table with the …","Returns an <code>OccupiedEntry</code> for an entry in the table with …","Returns a mutable reference to an entry in the table with …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Gets a mutable reference to the value in the entry.","Sets the value of the entry, replacing any existing value …","Inserts a new element into the table with the hash that …","Inserts an element into the <code>HashTable</code> with the given hash …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the VacantEntry into a mutable reference to the …","Converts the AbsentEntry into a mutable reference to the …","Returns <code>true</code> if the set contains no elements.","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all elements in arbitrary order, with …","Returns the number of elements in the table.","","","","","Creates an empty <code>HashTable</code>.","Creates an empty <code>HashTable</code> using the given allocator.","","","","","","Ensures a value is in the entry by inserting if it was …","Ensures a value is in the entry by inserting the result of …","Takes the value out of the entry, and returns it along …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the table with a lower limit. It …","Shrinks the capacity of the table as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","Creates an empty <code>HashTable</code> with the specified capacity.","Creates an empty <code>HashTable</code> with the specified capacity …"],"i":[1,1,0,0,0,0,0,1,1,1,1,1,22,1,1,1,0,0,0,1,1,1,1,1,75,0,0,0,0,0,0,0,0,0,0,0,0,9,11,12,0,0,0,0,0,0,0,0,9,11,12,0,0,0,0,8,9,11,12,9,11,12,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,8,8,8,16,17,18,8,8,16,17,18,8,8,8,8,45,8,8,8,8,8,8,8,8,16,31,32,33,34,17,18,24,35,36,9,37,38,39,11,40,41,12,43,44,45,45,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,36,39,8,36,39,36,39,8,37,40,43,8,37,8,37,8,8,8,8,8,37,40,43,8,8,8,9,37,38,11,40,41,12,43,44,38,37,8,38,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,8,8,8,16,31,32,33,34,17,18,24,28,35,37,41,44,37,8,37,40,43,8,8,8,8,37,11,40,41,12,43,44,37,8,8,16,31,32,33,34,17,18,24,35,16,31,32,33,34,17,18,24,28,35,11,12,9,11,12,9,11,12,11,12,8,8,8,37,40,43,8,37,40,43,40,43,37,40,43,40,43,8,8,8,8,16,31,32,33,34,17,18,24,28,35,8,16,17,18,45,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,8,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,8,76,8,16,31,32,33,34,17,18,24,28,35,36,9,37,38,39,11,40,41,12,43,44,45,45,8,8,8,8,8,8,0,0,0,0,0,0,0,0,59,0,0,0,59,0,52,52,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,53,54,55,56,57,52,52,53,54,55,56,57,52,52,52,52,52,52,52,52,52,52,52,53,61,58,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,59,62,63,52,52,52,52,52,59,63,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,63,52,52,52,52,52,52,53,61,58,53,61,58,60,54,55,56,57,59,52,62,52,62,52,52,52,52,53,61,58,60,54,55,56,57,52,52,52,52,53,54,55,56,57,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,52,52,0,0,0,0,0,0,0,0,66,0,66,0,65,66,65,66,69,71,70,73,72,74,67,68,65,66,69,71,70,73,72,74,67,68,65,65,65,65,65,65,65,65,65,65,65,65,66,69,71,70,67,65,66,69,71,70,73,72,74,67,68,69,65,65,69,66,71,65,65,66,69,71,70,73,72,74,67,68,65,65,65,73,72,74,67,68,69,69,71,70,65,65,65,65,73,72,74,67,65,65,73,72,74,67,68,66,66,69,65,65,65,65,73,72,74,67,68,65,65,66,69,71,70,73,72,74,67,68,65,66,69,71,70,73,72,74,67,68,65,65,66,69,71,70,73,72,74,67,68,65,65],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[1,4],5],[-1,-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,7,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[-1,-2,-3,-4]]],-4,[],[],[],0],[[[9,[-1,-2,-3,-4]],-5],[[9,[-1,-2,-3,-4]]],[],[],[],0,10],[[[11,[-1,-2,-3,-4]],-5],[[11,[-1,-2,-3,-4]]],[],[],[],0,10],[[[12,[-1,-2,-3,-4,-5]],-6],[[12,[-1,-2,-3,-4,-5]]],[],13,[],[],0,10],[[[9,[-1,-2,-3,-4]],-5],[[9,[-1,-2,-3,-4]]],[],[],[],0,10],[[[11,[-1,-2,-3,-4]],-5],[[11,[-1,-2,-3,-4]]],[],[],[],0,10],[[[12,[-1,-2,-3,-4,-5]],-6],[[12,[-1,-2,-3,-4,-5]]],[],13,[],[],0,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1,-2,-3,-4]]],14,[],[],[],0],[[[8,[-1,-2,-3,-4]]],2,[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[8,[-1,-2,-3,-4]]],15,15,15,[0,15]],[[[16,[-1,-2]]],[[16,[-1,-2]]],[],[]],[[[17,[-1,-2]]],[[17,[-1,-2]]],[],[]],[[[18,[-1,-2]]],[[18,[-1,-2]]],[],[]],[[[8,[-1,-2,-3,-4]],[8,[-1,-2,-3,-4]]],2,15,15,15,[0,15]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[8,[-1,-2,-3,-4]],-5],3,[19,20],[],21,0,[20,[22,[-1]],13]],[[],[[8,[-1,-2,-3,-4]]],[],[],23,[23,0]],[[[8,[-1,-2,-3,-4]]],[[24,[-1,-2,-4]]],[],[],[],0],[[[8,[-1,-2,-3,-4]],-1],[[11,[-1,-2,-3,-4]]],[19,20],[],21,0],0,[[[8,[-1,-2,-3,-4]],-5],[[12,[-1,-5,-2,-3,-4]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],[8,[-1,-2,-3,-4]]],3,[19,20],25,21,0],[[-1,-2],3,[],[]],[[[8,[-1,-2,-3,-4]],-5],2,[19,20,26],26,21,0,27],[[[8,[-1,-2,-3,-4]],-5],2,[19,20,26],26,21,0,27],[[[8,[-1,-2,-3,-4]],-5],2,[19,20],[],21,0,27],[[[8,[-1,-2,-3,-4]],-5],[[28,[-1,-2,-5,-4]]],[],[],[],0,29],[[[8,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[16,[-1,-2]],4],5,30,30],[[[31,[-1,-2]],4],5,30,30],[[[32,[-1,-2,-3]],4],5,30,30,0],[[[33,[-1,-2,-3]],4],5,30,30,0],[[[34,[-1,-2,-3]],4],5,[],30,0],[[[17,[-1,-2]],4],5,30,[]],[[[18,[-1,-2]],4],5,[],30],[[[24,[-1,-2,-3]],4],5,30,30,0],[[[35,[-1,-2]],4],5,[],30],[[[36,[-1,-2,-3,-4]],4],5,[],[],[],0],[[[9,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[37,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[38,[-1,-2,-3,-4]],4],5,[],[],[],0],[[[39,[-1,-2,-3,-4]],4],5,[],[],[],0],[[[11,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[40,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[41,[-1,-2,-3,-4]],4],5,30,[],[],0],[[[12,[-2,-1,-3,-4,-5]],4],5,[13,30],[[42,[-1]]],30,[],0],[[[43,[-2,-1,-3,-4,-5]],4],5,[13,30],[[42,[-1]]],30,[],0],[[[44,[-2,-1,-3,-4,-5]],4],5,[13,30],[[42,[-1]]],[],[],0],[[[45,[-1,-2,-3,-4]],4],5,30,30,[],0],[[[45,[-1,-2,-3,-4]],4],5,30,30,[],0],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[-1,-2,-3,-4]],46,-5],[[9,[-1,-2,-3,-4]]],[],[],[],0,29],[[[39,[-1,-2,-3,-4]],46,-5],[[47,[[2,[-1,-2]]]]],[],[],[],0,29],[-1,[[8,[-2,-3,-4,-5]]],27,[19,20],[],[21,23],[23,0]],[[[36,[-1,-2,-3,-4]],-5],[[9,[-1,-2,-3,-4]]],[],[],21,0,[20,[22,[-1]],13]],[[[39,[-1,-2,-3,-4]],-5],[[47,[[2,[-1,-2]]]]],[],[],21,0,[20,[22,[-1]],13]],[[[36,[-1,-2,-3,-4]],46,-5],[[9,[-1,-2,-3,-4]]],[],[],[],0,[[22,[-1]],13]],[[[39,[-1,-2,-3,-4]],46,-5],[[47,[[2,[-1,-2]]]]],[],[],[],0,[[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],-5],[[47,[-2]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[40,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],-3,[],13,[],[],0],[[[8,[-1,-2,-3,-4]],-5],[[47,[[2,[-1,-2]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]],-5],[[47,[[2,[-1,-2]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]],[48,[-5]]],[[47,[[48,[[2,[-1,-2]]]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],[48,[-5]]],[[47,[[48,[[2,[-1,-2]]]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],[48,[-5]]],[[47,[[48,[-2]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],[48,[-5]]],[[47,[[48,[-2]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],-5],[[47,[-2]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[40,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],-3,[],13,[],[],0],[[[8,[-1,-2,-3,-4]]],-3,[],[],[],0],[[[8,[-1,-2,-3,-4]],-5],-2,[19,20],[],21,0,[20,[22,[-1]],13]],[[[8,[-1,-2,-3,-4]],-1,-2],[[47,[-2]]],[19,20],[],21,0],[[[9,[-1,-2,-3,-4]],-1,-2],[[37,[-1,-2,-3,-4]]],20,[],21,0],[[[37,[-1,-2,-3,-4]],-2],-2,[],[],[],0],[[[38,[-1,-2,-3,-4]],-1,-2],[[2,[-1,-2]]],20,[],21,0],[[[11,[-1,-2,-3,-4]],-2],[[40,[-1,-2,-3,-4]]],20,[],21,0],[[[40,[-1,-2,-3,-4]],-2],-2,[],[],[],0],[[[41,[-1,-2,-3,-4]],-2],-2,20,[],21,0],[[[12,[-2,-1,-3,-4,-5]],-3],[[43,[-2,-1,-3,-4,-5]]],13,[20,[49,[-1]]],[],21,0],[[[43,[-1,-2,-3,-4,-5]],-3],-3,[],13,[],[],0],[[[44,[-2,-1,-3,-4,-5]],-3],-3,13,[20,[49,[-1]]],[],21,0],[[[38,[-1,-2,-3,-4]],46,-1,-2],[[2,[-1,-2]]],20,[],21,0],[[[37,[-1,-2,-3,-4]],-1],-1,[],[],[],0],[[[8,[-1,-2,-3,-4]],-1,-2],[[2,[-1,-2]]],[19,20],[],21,0],[[[38,[-1,-2,-3,-4]],46,-1,-2,-5],[[2,[-1,-2]]],[],[],[],0,50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1,-2,-3,-4]]],[[16,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[31,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[32,[-1,-2,-4]]],[],[],[],0],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[41,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[44,[-2,-1,-3,-4,-5]]],-2,13,[[49,[-1]]],[],[],0],[[[37,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[33,[-1,-2,-4]]],[],[],[],0],[[[37,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[40,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],-3,[],13,[],[],0],[[[8,[-1,-2,-3,-4]]],[[34,[-1,-2,-4]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],3,[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[16,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[31,[-1,-2]]],[],[],[],0],[[[37,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[11,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[40,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[41,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[12,[-2,-1,-3,-4,-5]]],-1,13,[[42,[-1]]],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],-1,[],13,[],[],0],[[[44,[-2,-1,-3,-4,-5]]],-1,13,[[42,[-1]]],[],[],0],[[[37,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[17,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],14,[],[],[],0],[[[16,[-1,-2]]],14,[],[]],[[[31,[-1,-2]]],14,[],[]],[[[32,[-1,-2,-3]]],14,[],[],0],[[[33,[-1,-2,-3]]],14,[],[],0],[[[34,[-1,-2,-3]]],14,[],[],0],[[[17,[-1,-2]]],14,[],[]],[[[18,[-1,-2]]],14,[],[]],[[[24,[-1,-2,-3]]],14,[],[],0],[[[35,[-1,-2]]],14,[],[]],[[[16,[-1,-2]]],[[47,[[2,[-1,-2]]]]],[],[]],[[[31,[-1,-2]]],[[47,[[2,[-1,-2]]]]],[],[]],[[[32,[-1,-2,-3]]],[[47,[[2,[-1,-2]]]]],[],[],0],[[[33,[-1,-2,-3]]],[[47,[-1]]],[],[],0],[[[34,[-1,-2,-3]]],[[47,[-2]]],[],[],0],[[[17,[-1,-2]]],[[47,[-1]]],[],[]],[[[18,[-1,-2]]],[[47,[-2]]],[],[]],[[[24,[-1,-2,-3]]],[[47,[[2,[-1,-2]]]]],[],[],0],[[[28,[-1,-2,-3,-4]]],47,[],[],29,0],[[[35,[-1,-2]]],[[47,[-2]]],[],[]],[[[11,[-1,-2,-3,-4]]],-2,20,23,21,0],[[[12,[-2,-1,-3,-4,-5]]],-3,13,[20,[49,[-1]]],23,21,0],[[[9,[-1,-2,-3,-4]],-1,-2],[[2,[-1,-2]]],20,[],21,0],[[[11,[-1,-2,-3,-4]],-2],-2,20,[],21,0],[[[12,[-2,-1,-3,-4,-5]],-3],-3,13,[20,[49,[-1]]],[],21,0],[[[9,[-1,-2,-3,-4]],-5],[[2,[-1,-2]]],20,[],21,0,10],[[[11,[-1,-2,-3,-4]],-5],-2,20,[],21,0,10],[[[12,[-2,-1,-3,-4,-5]],-6],-3,13,[20,[49,[-1]]],[],21,0,10],[[[11,[-1,-2,-3,-4]],-5],-2,20,[],21,0,10],[[[12,[-2,-1,-3,-4,-5]],-6],-3,13,[20,[42,[-1]],[49,[-1]]],[],21,0,10],[[[8,[-1,-2,-3,-4]]],[[39,[-1,-2,-3,-4]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[36,[-1,-2,-3,-4]]],[],[],[],0],[[[8,[-1,-2,-3,-4]],-5],[[47,[-2]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[40,[-1,-2,-3,-4]]],-2,[],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],-3,[],13,[],[],0],[[[8,[-1,-2,-3,-4]],-5],[[47,[[2,[-1,-2]]]]],[19,20],[],21,0,[20,[22,[-1]],13]],[[[37,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],0],[[[40,[-1,-2,-3,-4]]],[[2,[-1,-2]]],[],[],[],0],[[[43,[-1,-2,-3,-4,-5]]],[[2,[-1,-3]]],[],13,[],[],0],[[[40,[-1,-2,-3,-4]],-2],[[2,[-1,-2]]],[],[],[],0],[[[43,[-2,-1,-3,-4,-5]],-3],[[2,[-2,-3]]],13,[[49,[-1]]],[],[],0],[[[37,[-1,-2,-3,-4]],-5],[[9,[-1,-2,-3,-4]]],[],[],[],0,10],[[[40,[-1,-2,-3,-4]],-5],[[11,[-1,-2,-3,-4]]],[],[],[],0,10],[[[43,[-1,-2,-3,-4,-5]],-6],[[12,[-1,-2,-3,-4,-5]]],[],13,[],[],0,10],[[[40,[-1,-2,-3,-4]]],-1,[],[],[],0],[[[43,[-2,-1,-3,-4,-5]]],-2,13,[[49,[-1]]],[],[],0],[[[8,[-1,-2,-3,-4]],14],2,[19,20],[],21,0],[[[8,[-1,-2,-3,-4]],-5],2,[],[],[],0,29],[[[8,[-1,-2,-3,-4]],14],2,[19,20],[],21,0],[[[8,[-1,-2,-3,-4]]],2,[19,20],[],21,0],[[[16,[-1,-2]]],[[2,[14,[47,[14]]]]],[],[]],[[[31,[-1,-2]]],[[2,[14,[47,[14]]]]],[],[]],[[[32,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],[],0],[[[33,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],[],0],[[[34,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],[],0],[[[17,[-1,-2]]],[[2,[14,[47,[14]]]]],[],[]],[[[18,[-1,-2]]],[[2,[14,[47,[14]]]]],[],[]],[[[24,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],[],0],[[[28,[-1,-2,-3,-4]]],[[2,[14,[47,[14]]]]],[],[],29,0],[[[35,[-1,-2]]],[[2,[14,[47,[14]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,51,[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[8,[-1,-2,-3,-4]],-1,-2],[[6,[-2,[45,[-1,-2,-3,-4]]]]],[19,20],[],21,0],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[8,[-1,-2,-3,-4]],14],[[6,[2,1]]],[19,20],[],21,0],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,[[[8,[-1,-2,-3,-4]]],[[18,[-1,-2]]],[],[],[],0],[[[8,[-1,-2,-3,-4]]],[[35,[-1,-2]]],[],[],[],0],[[14,-1],[[8,[-2,-3,-1]]],[],[],[]],[[14,-1,-2],[[8,[-3,-4,-1,-2]]],[],0,[],[]],[-1,[[8,[-2,-3,-1]]],[],[],[]],[[-1,-2],[[8,[-3,-4,-1,-2]]],[],0,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[52,[-1,-2,-3]]],-3,[],[],0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[52,[-1,-2]]],[19,20,15],[21,23],0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[52,[-1,-2]]],[19,20,15],[21,23],0],[[[52,[-1,-2]],[52,[-1,-2]]],[[52,[-1,-2]]],[19,20,15],[21,23]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1,-2,-3]]],14,[],[],0],[[[52,[-1,-2,-3]]],2,[],[],0],[[[52,[-1,-2,-3]]],[[52,[-1,-2,-3]]],15,15,[0,15]],[[[53,[-1]]],[[53,[-1]]],[]],[[[54,[-1,-2,-3]]],[[54,[-1,-2,-3]]],[],[],0],[[[55,[-1,-2,-3]]],[[55,[-1,-2,-3]]],[],[],0],[[[56,[-1,-2,-3]]],[[56,[-1,-2,-3]]],[],[],0],[[[57,[-1,-2,-3]]],[[57,[-1,-2,-3]]],[],[],0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],2,15,15,[0,15]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[52,[-1,-2,-3]],-4],3,[19,20],21,0,[20,[22,[-1]],13]],[[],[[52,[-1,-2,-3]]],[],23,[23,0]],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[55,[-1,-2,-3]]],[19,20],21,0],[[[52,[-1,-2,-3]]],[[58,[-1,-3]]],[],[],0],[[[52,[-1,-2,-3]],-1],[[59,[-1,-2,-3]]],[19,20],21,0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],3,[19,20],21,0],[[-1,-2],3,[],[]],[[[52,[-1,-2,-3]],-4],2,[19,20,26],21,0,27],[[[52,[-1,-2,-3]],-4],2,[19,20],21,0,27],[[[52,[-1,-2,-3]],-4],[[60,[-1,-4,-3]]],[],[],0,29],[[[52,[-1,-2,-3]],4],5,30,[],0],[[[53,[-1]],4],5,30],[[[61,[-1,-2]],4],5,30,0],[[[58,[-1,-2]],4],5,30,0],[[[54,[-1,-2,-3]],4],5,[30,19,20],21,0],[[[55,[-1,-2,-3]],4],5,[30,19,20],21,0],[[[56,[-1,-2,-3]],4],5,[30,19,20],21,0],[[[57,[-1,-2,-3]],4],5,[30,19,20],21,0],[[[59,[-1,-2,-3]],4],5,30,[],0],[[[62,[-1,-2,-3]],4],5,30,[],0],[[[63,[-1,-2,-3]],4],5,30,[],0],[-1,-1,[]],[[[8,[-1,2,-2,-3]]],[[52,[-1,-2,-3]]],[],[],0],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[52,[-2,-3,-4]]],27,[19,20],[21,23],[23,0]],[[[52,[-1,-2,-3]],-4],[[47,[-1]]],[19,20],21,0,[20,[22,[-1]],13]],[[[59,[-1,-2,-3]]],-1,[],[],0],[[[62,[-1,-2,-3]]],-1,[],[],0],[[[63,[-1,-2,-3]]],-1,[],[],0],[[[52,[-1,-2,-3]],-1],-1,[19,20],21,0],[[[52,[-1,-2,-3]],-4],-1,[19,20],21,0,[20,[22,[-1]],64,13]],[[[52,[-1,-2,-3]],-4,-5],-1,[19,20],21,0,[20,[22,[-1]],13],10],[[[52,[-1,-2,-3]]],-2,[],[],0],[[[52,[-1,-2,-3]],-1],3,[19,20],21,0],[[[59,[-1,-2,-3]]],[[62,[-1,-2,-3]]],20,21,0],[[[63,[-1,-2,-3]]],2,20,21,0],[[[52,[-1,-2,-3]],-1],-1,[19,20],21,0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[54,[-1,-2,-3]]],[19,20],21,0],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[52,[-1,-2,-3]]],[[53,[-1]]],[],[],0],[[[52,[-1,-2,-3]]],[[61,[-1,-3]]],[],[],0],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[63,[-1,-2,-3]]],-1,[],[],0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],3,[19,20],21,0],[[[52,[-1,-2,-3]]],3,[],[],0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],3,[19,20],21,0],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],3,[19,20],21,0],[[[52,[-1,-2,-3]]],[[53,[-1]]],[],[],0],[[[52,[-1,-2,-3]]],14,[],[],0],[[[53,[-1]]],14,[]],[[[61,[-1,-2]]],14,[],0],[[[58,[-1,-2]]],14,[],0],[[[53,[-1]]],[[47,[-1]]],[]],[[[61,[-1,-2]]],[[47,[-1]]],[],0],[[[58,[-1,-2]]],[[47,[-1]]],[],0],[[[60,[-1,-2,-3]]],47,[],29,0],[[[54,[-1,-2,-3]]],[[47,[-1]]],[19,20],21,0],[[[55,[-1,-2,-3]]],[[47,[-1]]],[19,20],21,0],[[[56,[-1,-2,-3]]],[[47,[-1]]],[19,20],21,0],[[[57,[-1,-2,-3]]],[[47,[-1]]],[19,20],21,0],[[[59,[-1,-2,-3]]],2,20,21,0],[[[52,[-1,-2,-3]],-4],3,[19,20],21,0,[20,[22,[-1]],13]],[[[62,[-1,-2,-3]]],-1,[],[],0],[[[52,[-1,-2,-3]],-1],[[47,[-1]]],[19,20],21,0],[[[62,[-1,-2,-3]]],-1,[],[],0],[[[52,[-1,-2,-3]],14],2,[19,20],21,0],[[[52,[-1,-2,-3]],-4],2,[],[],0,29],[[[52,[-1,-2,-3]],14],2,[19,20],21,0],[[[52,[-1,-2,-3]]],2,[19,20],21,0],[[[53,[-1]]],[[2,[14,[47,[14]]]]],[]],[[[61,[-1,-2]]],[[2,[14,[47,[14]]]]],[],0],[[[58,[-1,-2]]],[[2,[14,[47,[14]]]]],[],0],[[[60,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],29,0],[[[54,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[19,20],21,0],[[[55,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[19,20],21,0],[[[56,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[19,20],21,0],[[[57,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[19,20],21,0],[[[52,[-1,-2]],[52,[-1,-2]]],[[52,[-1,-2]]],[19,20,15],[21,23]],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[56,[-1,-2,-3]]],[19,20],21,0],[[[52,[-1,-2,-3]],-4],[[47,[-1]]],[19,20],21,0,[20,[22,[-1]],13]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[52,[-1,-2,-3]],14],[[6,[2,1]]],[19,20],21,0],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[[[52,[-1,-2,-3]],[52,[-1,-2,-3]]],[[57,[-1,-2,-3]]],[19,20],21,0],[[14,-1],[[52,[-2,-1,0]]],[],[]],[[14,-1,-2],[[52,[-3,-1,-2]]],[],0,[]],[-1,[[52,[-2,-1,0]]],[],[]],[[-1,-2],[[52,[-3,-1,-2]]],[],0,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[65,[-1,-2]]],-2,[],0],[[[66,[-1,-2]],-3],[[66,[-1,-2]]],[],0,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1,-2]]],14,[],0],[[[65,[-1,-2]]],2,[],0],[[[65,[-1,-2]]],[[65,[-1,-2]]],15,[0,15]],[[-1,-2],2,[],[]],[[],[[65,[-1,-2]]],[],[0,23]],[[[65,[-1,-2]]],[[67,[-1,-2]]],[],0],[[[65,[-1,-2]],46,-3,-4],[[66,[-1,-2]]],[],0,29,50],[[[65,[-1,-2]],-3],[[68,[-1,-3,-2]]],[],0,29],[[[65,[-1,-2]],46,-3],[[47,[-1]]],[],0,29],[[[65,[-1,-2]],46,-3],[[6,[[69,[-1,-2]],[70,[-1,-2]]]]],[],0,29],[[[65,[-1,-2]],46,-3],[[47,[-1]]],[],0,29],[[[65,[-1,-2]],4],5,30,0],[[[66,[-1,-2]],4],5,30,0],[[[69,[-1,-2]],4],5,30,0],[[[71,[-1,-2]],4],5,30,0],[[[70,[-1,-2]],4],5,30,0],[[[67,[-1,-2]],4],5,30,0],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[69,[-1,-2]]],-1,[],0],[[[65,[-1,-2]],[48,[46]],-3],[[47,[[48,[-1]]]]],[],0,29],[[[65,[-1,-2]],[48,[46]],-3],[[47,[[48,[-1]]]]],[],0,29],[[[69,[-1,-2]]],-1,[],0],[[[66,[-1,-2]],-1],[[69,[-1,-2]]],[],0],[[[71,[-1,-2]],-1],[[69,[-1,-2]]],[],0],[[[65,[-1,-2]],46,-1,-3],[[69,[-1,-2]]],[],0,50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1,-2]]],[[72,[-1]]],[],0],[[[65,[-1,-2]]],[[73,[-1]]],[],0],[[[65,[-1,-2]]],[[74,[-1,-2]]],[],0],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[69,[-1,-2]]],-1,[],0],[[[69,[-1,-2]]],[[65,[-1,-2]]],[],0],[[[71,[-1,-2]]],[[65,[-1,-2]]],[],0],[[[70,[-1,-2]]],[[65,[-1,-2]]],[],0],[[[65,[-1,-2]]],3,[],0],[[[65,[-1,-2]]],[[73,[-1]]],[],0],[[[65,[-1,-2]]],[[72,[-1]]],[],0],[[[65,[-1,-2]]],14,[],0],[[[73,[-1]]],14,[]],[[[72,[-1]]],14,[]],[[[74,[-1,-2]]],14,[],0],[[[67,[-1,-2]]],14,[],0],[[],[[65,[-1,0]]],[]],[-1,[[65,[-2,-1]]],0,[]],[[[73,[-1]]],47,[]],[[[72,[-1]]],47,[]],[[[74,[-1,-2]]],47,[],0],[[[67,[-1,-2]]],[[47,[-1]]],[],0],[[[68,[-1,-2,-3]]],47,[],29,0],[[[66,[-1,-2]],-1],[[69,[-1,-2]]],[],0],[[[66,[-1,-2]],-3],[[69,[-1,-2]]],[],0,10],[[[69,[-1,-2]]],[[2,[-1,[71,[-1,-2]]]]],[],0],[[[65,[-1,-2]],14,-3],2,[],0,50],[[[65,[-1,-2]],-3],2,[],0,29],[[[65,[-1,-2]],14,-3],2,[],0,50],[[[65,[-1,-2]],-3],2,[],0,50],[[[73,[-1]]],[[2,[14,[47,[14]]]]],[]],[[[72,[-1]]],[[2,[14,[47,[14]]]]],[]],[[[74,[-1,-2]]],[[2,[14,[47,[14]]]]],[],0],[[[67,[-1,-2]]],[[2,[14,[47,[14]]]]],[],0],[[[68,[-1,-2,-3]]],[[2,[14,[47,[14]]]]],[],29,0],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[[65,[-1,-2]],14,-3],[[6,[2,1]]],[],0,50],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[14,[[65,[-1,0]]],[]],[[14,-1],[[65,[-2,-1]]],0,[]]],"c":[],"p":[[4,"TryReserveError",0],[15,"tuple"],[15,"bool"],[3,"Formatter",788],[6,"Result",788],[4,"Result",789],[3,"TypeId",790],[3,"HashMap",25],[4,"RawEntryMut",25],[8,"FnOnce",791],[4,"Entry",25],[4,"EntryRef",25],[8,"Sized",792],[15,"usize"],[8,"Clone",793],[3,"Iter",25],[3,"Keys",25],[3,"Values",25],[8,"Eq",794],[8,"Hash",795],[8,"BuildHasher",795],[8,"Equivalent",0],[8,"Default",796],[3,"Drain",25],[8,"PartialEq",794],[8,"Copy",792],[8,"IntoIterator",797],[3,"ExtractIf",25],[8,"FnMut",791],[8,"Debug",788],[3,"IterMut",25],[3,"IntoIter",25],[3,"IntoKeys",25],[3,"IntoValues",25],[3,"ValuesMut",25],[3,"RawEntryBuilderMut",25],[3,"RawOccupiedEntryMut",25],[3,"RawVacantEntryMut",25],[3,"RawEntryBuilder",25],[3,"OccupiedEntry",25],[3,"VacantEntry",25],[8,"Borrow",798],[3,"OccupiedEntryRef",25],[3,"VacantEntryRef",25],[3,"OccupiedError",25],[15,"u64"],[4,"Option",799],[15,"array"],[8,"From",800],[8,"Fn",791],[3,"String",801],[3,"HashSet",424],[3,"Iter",424],[3,"Intersection",424],[3,"Difference",424],[3,"SymmetricDifference",424],[3,"Union",424],[3,"Drain",424],[4,"Entry",424],[3,"ExtractIf",424],[3,"IntoIter",424],[3,"OccupiedEntry",424],[3,"VacantEntry",424],[8,"ToOwned",802],[3,"HashTable",637],[4,"Entry",637],[3,"Drain",637],[3,"ExtractIf",637],[3,"OccupiedEntry",637],[3,"AbsentEntry",637],[3,"VacantEntry",637],[3,"IterMut",637],[3,"Iter",637],[3,"IntoIter",637],[13,"AllocError",24],[4,"DefaultHashBuilder",25]],"b":[[129,"impl-Extend%3C%26(K,+V)%3E-for-HashMap%3CK,+V,+S,+A%3E"],[130,"impl-Extend%3C(%26K,+%26V)%3E-for-HashMap%3CK,+V,+S,+A%3E"],[131,"impl-Extend%3C(K,+V)%3E-for-HashMap%3CK,+V,+S,+A%3E"],[154,"impl-Debug-for-OccupiedError%3C\'_,+K,+V,+S,+A%3E"],[155,"impl-Display-for-OccupiedError%3C\'a,+K,+V,+S,+A%3E"],[243,"impl-IntoIterator-for-%26HashMap%3CK,+V,+S,+A%3E"],[244,"impl-IntoIterator-for-%26mut+HashMap%3CK,+V,+S,+A%3E"],[245,"impl-IntoIterator-for-HashMap%3CK,+V,+S,+A%3E"],[488,"impl-Extend%3C%26T%3E-for-HashSet%3CT,+S,+A%3E"],[489,"impl-Extend%3CT%3E-for-HashSet%3CT,+S,+A%3E"],[541,"impl-IntoIterator-for-%26HashSet%3CT,+S,+A%3E"],[542,"impl-IntoIterator-for-HashSet%3CT,+S,+A%3E"],[715,"impl-IntoIterator-for-%26mut+HashTable%3CT,+A%3E"],[716,"impl-IntoIterator-for-%26HashTable%3CT,+A%3E"],[717,"impl-IntoIterator-for-HashTable%3CT,+A%3E"]]},\
"heapless":{"doc":"<code>static</code> friendly data structures that don’t require …","t":"CCCDEGGDDDDNDDCDNDDLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGLLLLLLLLLLLDEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLDQILALLLLLLLLLLLLLLLLLLLLLLLDDQILLLLLLLLLLLLLLLLLLLLLLLLLDDIDDDDDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Arc","BinaryHeap","Bucket","Deque","Entry","FnvIndexMap","FnvIndexSet","HistoryBuffer","IndexMap","IndexSet","LinearMap","Occupied","OccupiedEntry","OldestOrdered","Pos","String","Vacant","VacantEntry","Vec","as_mut","as_mut","as_mut_ptr","as_mut_slices","as_mut_str","as_mut_vec","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","as_slices","as_str","back","back_mut","binary_heap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","capacity","capacity","capacity","clear","clear","clear","clear","clear","clear","clear","clear_with","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","contains","contains_key","contains_key","default","default","default","default","default","default","default","deref","deref","deref","deref_mut","deref_mut","difference","drop","drop","drop","drop","ends_with","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend_from_slice","extend_from_slice","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_slice","from_str","front","front_mut","get","get","get","get_mut","get_mut","get_mut","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","insert","insert","insert","insert","insert","intersection","into","into","into","into","into","into","into","into","into","into","into","into_array","into_bytes","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_mut","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_subset","is_superset","iter","iter","iter","iter","iter_mut","iter_mut","iter_mut","key","key","keys","keys","last","last","last_mut","len","len","len","len","len","mpmc","ne","ne","ne","new","new","new","new","new","new","new","new_with","next","oldest_ordered","partial_cmp","partial_cmp","pool","pop","pop","pop_back","pop_back_unchecked","pop_front","pop_front_unchecked","pop_unchecked","push","push","push_back","push_back_unchecked","push_front","push_front_unchecked","push_str","push_unchecked","recent","remove","remove","remove","remove","remove","remove_entry","resize","resize_default","retain","retain_mut","set_len","sorted_linked_list","spsc","starts_with","swap_remove","swap_remove","swap_remove_unchecked","symmetric_difference","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","values","values","values_mut","values_mut","write","write_char","write_str","write_str","BinaryHeap","Kind","Max","Min","PeekMut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","default","deref","deref_mut","drop","fmt","from","from","from","from","into","into","into","into","into_iter","into_vec","is_empty","iter","iter_mut","len","new","peek","peek_mut","pop","pop","pop_unchecked","push","push_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","MpMcQueue","Q16","Q2","Q32","Q4","Q64","Q8","borrow","borrow_mut","default","dequeue","enqueue","from","into","new","try_from","try_into","type_id","Box","Init","Node","Pool","Uninit","alloc","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","deref","deref_mut","eq","fmt","fmt","free","from","from","from","from","from","grow","grow_exact","hash","init","into","into","into","into","into","new","partial_cmp","singleton","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Box","Data","Pool","alloc","arc","as_mut","as_ref","borrow","borrow_mut","cmp","deref","deref_mut","drop","eq","fmt","fmt","forget","freeze","from","grow","grow_exact","hash","init","into","partial_cmp","try_from","try_into","type_id","Arc","ArcInner","Data","Pool","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","deref","drop","eq","fmt","fmt","from","from","hash","into","into","new","partial_cmp","try_from","try_from","try_into","try_into","type_id","type_id","FindMut","Iter","Kind","LinkedIndexU16","LinkedIndexU8","LinkedIndexUsize","Max","Min","Node","SortedLinkedList","SortedLinkedListIndex","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","deref","deref_mut","drop","drop","eq","eq","eq","find_mut","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into_iter","is_empty","is_full","iter","new_u16","new_u8","new_usize","next","partial_cmp","partial_cmp","partial_cmp","peek","pop","pop","pop_unchecked","push","push_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Consumer","Iter","IterMut","Producer","Queue","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","clone","clone","default","dequeue","dequeue","dequeue_unchecked","dequeue_unchecked","drop","enqueue","enqueue","enqueue_unchecked","enqueue_unchecked","eq","fmt","from","from","from","from","from","hash","hash","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_full","iter","iter_mut","len","len","len","new","next","next","next_back","next_back","peek","peek","ready","ready","split","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"heapless"],[344,"heapless::binary_heap"],[399,"heapless::mpmc"],[417,"heapless::pool"],[474,"heapless::pool::singleton"],[502,"heapless::pool::singleton::arc"],[531,"heapless::sorted_linked_list"],[641,"heapless::spsc"],[721,"core::option"],[722,"core::cmp"],[723,"hash32"],[724,"hash32"],[725,"core::clone"],[726,"core::cmp"],[727,"core::default"],[728,"core::cmp"],[729,"core::result"],[730,"core::fmt"],[731,"core::fmt"],[732,"core::hash"],[733,"hash32"],[734,"core::any"],[735,"core::fmt"],[736,"core::slice::iter"],[737,"core::convert"]],"d":["","","","A fixed capacity double-ended queue.","A view into an entry in the map","A <code>heapless::IndexMap</code> using the default FNV hasher","A <code>heapless::IndexSet</code> using the default FNV hasher. A list …","A “history buffer”, similar to a write-only ring …","Fixed capacity <code>IndexMap</code>","Fixed capacity <code>IndexSet</code>.","A fixed capacity map / dictionary that performs lookups …","The entry corresponding to the key <code>K</code> exists in the map","An occupied entry which can be manipulated","An iterator on the underlying buffer ordered from oldest …","","A fixed capacity <code>String</code>","The entry corresponding to the key <code>K</code> does not exist in the …","A view into an empty slot in the underlying map","A fixed capacity <code>Vec</code>","","","Returns a raw pointer to the vector’s buffer, which may …","Returns a pair of mutable slices which contain, in order, …","Converts a <code>String</code> into a mutable string slice.","Returns a mutable reference to the contents of this <code>String</code>.","Returns a raw pointer to the vector’s buffer.","","","","","","Returns the array slice backing the buffer, without …","Extracts a slice containing the entire vector.","Returns a pair of slices which contain, in order, the …","Extracts a string slice containing the entire string.","Provides a reference to the back element, or None if the …","Provides a mutable reference to the back element, or None …","A priority queue implemented with a binary heap.","","","","","","","","","","","","","","","","","","","","","","","Returns the maximum number of elements the deque can hold.","Returns the capacity of the buffer, which is the length of …","Returns the number of elements the map can hold","Returns the number of elements the set can hold","Returns the number of elements that the map can hold","Returns the maximum number of elements the String can hold","Returns the maximum number of elements the vector can hold.","Clears the deque, removing all values.","Clears the buffer, replacing every element with the …","Remove all key-value pairs in the map, while preserving …","Clears the set, removing all values.","Clears the map, removing all key-value pairs","Truncates this <code>String</code>, removing all contents.","Clears the vector, removing all values.","Clears the buffer, replacing every element with the given …","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Returns true if the map contains a value for the specified …","Returns true if the map contains a value for the specified …","","","","","","","","","","","","","Visits the values representing the difference, i.e. the …","","","","","Returns <code>true</code> if <code>needle</code> is a suffix of the Vec.","Returns an entry for the corresponding key","","","","","","","","","","","","","","","","","","","","","Extends the vec from an iterator.","Clones and writes all elements in a slice to the buffer.","Clones and appends all elements in a slice to the <code>Vec</code>.","Get the first key-value pair","Get the first value","Get the first key-value pair, with mutable access to the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Constructs a new vector with a fixed capacity of <code>N</code> and …","","Provides a reference to the front element, or None if the …","Provides a mutable reference to the front element, or None …","Gets a reference to the value associated with this entry","Returns a reference to the value corresponding to the key.","Returns a reference to the value corresponding to the key","Gets a mutable reference to the value associated with this …","Returns a mutable reference to the value corresponding to …","Returns a mutable reference to the value corresponding to …","","","","","","","","","Overwrites the underlying map’s value with this entry’…","Inserts this entry into to underlying map, yields a …","Inserts a key-value pair into the map.","Adds a value to the set.","Inserts a key-value pair into the map.","Inserts an element at position <code>index</code> within the vector, …","Visits the values representing the intersection, i.e. the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the contents of the vector as an array of length <code>M</code> …","Converts a <code>String</code> into a byte vector.","","","","","","","","","","","","","Consumes this entry to yield to key associated with it","Consumes this entry and yields a reference to the …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns whether the deque is empty.","Returns true if the map contains no elements.","Returns <code>true</code> if the set contains no elements.","Returns true if the map contains no elements","Returns true if the vec is empty","Returns whether the deque is full (i.e. if …","Returns true if the vec is full","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Examples","Returns an iterator over the deque.","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the values of the set, in their …","An iterator visiting all key-value pairs in arbitrary …","Returns an iterator that allows modifying each value.","Return an iterator over the key-value pairs of the map, in …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key that this entity corresponds to","Get the key associated with this entry","Return an iterator over the keys of the map, in their order","An iterator visiting all keys in arbitrary order","Get the last key-value pair","Get the last value","Get the last key-value pair, with mutable access to the …","Returns the number of elements currently in the deque.","Returns the current fill level of the buffer.","Return the number of key-value pairs in the map.","Returns the number of elements in the set.","Returns the number of elements in this map","A fixed capacity Multiple-Producer Multiple-Consumer …","","","","Constructs a new, empty deque with a fixed capacity of <code>N</code>","Constructs a new history buffer.","Creates an empty <code>IndexMap</code>.","Creates an empty <code>IndexSet</code>","Creates an empty <code>LinearMap</code>","Constructs a new, empty <code>String</code> with a fixed capacity of <code>N</code> …","Constructs a new, empty vector with a fixed capacity of <code>N</code>","Constructs a new history buffer, where every element is …","","Returns an iterator for iterating over the buffer from …","","","A heap-less, interrupt-safe, lock-free memory pool (*)","Removes the last character from the string buffer and …","Removes the last element from a vector and returns it, or …","Removes the item from the back of the deque and returns …","Removes an item from the back of the deque and returns it, …","Removes the item from the front of the deque and returns …","Removes an item from the front of the deque and returns …","Removes the last element from a vector and returns it","Appends the given <code>char</code> to the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the back of the deque","Appends an <code>item</code> to the front of the deque","Appends an <code>item</code> to the front of the deque","Appends a given string slice onto the end of this <code>String</code>.","Appends an <code>item</code> to the back of the collection","Returns a reference to the most recently written value.","Removes this entry from the map and yields its value","Same as <code>swap_remove</code>","Removes a value from the set. Returns <code>true</code> if the value …","Removes a key from the map, returning the value at the key …","Removes and returns the element at position <code>index</code> within …","Removes this entry from the map and yields its …","Resizes the Vec in-place so that len is equal to new_len.","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate, …","Forces the length of the vector to <code>new_len</code>.","A fixed sorted priority linked list, similar to <code>BinaryHeap</code> …","Fixed capacity Single Producer Single Consumer (SPSC) queue","Returns <code>true</code> if <code>needle</code> is a prefix of the Vec.","Remove the key-value pair equivalent to <code>key</code> and return its …","Removes an element from the vector and returns it.","Removes an element from the vector and returns it.","Visits the values representing the symmetric difference, …","Shortens this <code>String</code> to the specified length.","Shortens the vector, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visits the values representing the union, i.e. all the …","Return an iterator over the values of the map, in their …","An iterator visiting all values in arbitrary order","Return an iterator over mutable references to the the …","An iterator visiting all values mutably in arbitrary order","Writes an element to the buffer, overwriting the oldest …","","","","A priority queue implemented with a binary heap.","The binary heap kind: min-heap or max-heap","Max-heap","Min-heap","Structure wrapping a mutable reference to the greatest …","","","","","","","","","Returns the capacity of the binary heap.","Drops all items from the binary heap.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the underlying <code>Vec&lt;T,N&gt;</code>. Order is arbitrary and …","Checks if the binary heap is empty.","Returns an iterator visiting all values in the underlying …","Returns a mutable iterator visiting all values in the …","Returns the length of the binary heap.","Creates an empty BinaryHeap as a $K-heap.","Returns the <em>top</em> (greatest if max-heap, smallest if …","Returns a mutable reference to the greatest item in the …","Removes the <em>top</em> (greatest if max-heap, smallest if …","Removes the peeked value from the heap and returns it.","Removes the <em>top</em> (greatest if max-heap, smallest if …","Pushes an item onto the binary heap.","Pushes an item onto the binary heap without first checking …","","","","","","","","","","","","","MPMC queue with a capacity for N elements N must be a …","MPMC queue with a capability for 16 elements.","MPMC queue with a capability for 2 elements.","MPMC queue with a capability for 32 elements.","MPMC queue with a capability for 4 elements.","MPMC queue with a capability for 64 elements.","MPMC queue with a capability for 8 elements.","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Adds an <code>item</code> to the end of the queue","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates an empty queue","","","","A memory block","Initialized type state","Unfortunate implementation detail required to use the …","A lock-free memory pool","Uninitialized type state","Claims a memory block from the pool","","","","","","","","","","","","","","","","","","","Returns a memory block to the pool","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty pool","","<code>Pool</code> as a global singleton","","","","","","","","","","","","","","","","A memory block that belongs to the global memory pool, <code>POOL</code>","The type of data that can be allocated on this pool","A global singleton memory pool","Claims a memory block from the pool","Like <code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather …","","","","","","","","","","","","Forgets the contents of this memory block without running …","(DO NOT USE, SEE DEPRECATION) Freezes the contents of this …","Returns the argument unchanged.","Increases the capacity of the pool","Increases the capacity of the pool","","Initializes this memory block","Calls <code>U::from(self)</code>.","","","","","<code>std::sync::Arc</code> but backed by a memory <code>Pool</code> rather than …","Unfortunate implementation detail required to use the …","The data behind the Arc pointer","Pool of Arc pointers","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs a new <code>Arc</code>","","","","","","","","Comes from <code>SortedLinkedList::find_mut</code>.","Iterator for the linked list.","The linked list kind: min-list or max-list","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Index for the <code>SortedLinkedList</code> with specific backing …","Marker for Max sorted <code>SortedLinkedList</code>.","Marker for Min sorted <code>SortedLinkedList</code>.","A node in the <code>SortedLinkedList</code>.","The linked list.","Trait for defining an index for the linked list, never …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find an element in the list that can be changed and …","This will resort the element into the correct position in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if the linked list is empty.","Checks if the linked list is full.","Get an iterator over the sorted list.","Create a new linked list.","Create a new linked list.","Create a new linked list.","","","","","Peek at the first element.","Pops the first element in the list.","This will pop the element from the list.","Pop an element from the list without checking so the list …","Pushes an element to the linked list and sorts it into …","Pushes a value onto the list without checking if the list …","","","","","","","","","","","","","","","","","","","","","","","","","","","","A queue “consumer”; it can dequeue items from the queue","An iterator over the items of a queue","A mutable iterator over the items of a queue","A queue “producer”; it can enqueue items into the queue","A statically allocated single producer single consumer …","","","","","","","","","","","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","Returns the maximum number of elements the queue can hold","","","","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, or <code>None</code> if the …","Returns the item in the front of the queue, without …","Returns the item in the front of the queue, without …","","Adds an <code>item</code> to the end of the queue","Adds an <code>item</code> to the end of the queue, returns back the <code>item</code>…","Adds an <code>item</code> to the end of the queue, without checking if …","Adds an <code>item</code> to the end of the queue, without checking if …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if the queue is empty","Returns <code>true</code> if the queue is full","Iterates from the front of the queue to the back","Returns an iterator that allows modifying each value","Returns the number of elements in the queue","Returns the number of elements in the queue","Returns the number of elements in the queue","Creates an empty queue with a fixed capacity of <code>N - 1</code>","","","","","Returns a reference to the item in the front of the queue …","Returns the item in the front of the queue without …","Returns if there are any items to dequeue. When this …","Returns if there is any space to enqueue a new item. When …","Splits a queue into producer and consumer endpoints","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,27,0,0,1,1,1,3,5,5,1,8,5,5,1,1,8,1,3,5,3,3,0,3,8,27,41,45,11,15,16,5,1,19,3,8,27,41,45,11,15,16,5,1,19,3,8,11,15,16,5,1,3,8,11,15,16,5,1,8,3,11,15,16,5,1,19,5,1,15,11,16,3,8,11,15,16,5,1,8,5,1,5,1,15,3,8,16,1,1,11,11,15,16,5,5,5,1,1,1,1,1,1,8,8,11,11,15,15,1,1,1,8,1,11,15,11,3,8,11,15,16,5,5,1,3,8,27,41,45,11,15,16,5,5,5,5,5,5,5,5,5,5,1,19,11,15,16,5,5,5,1,1,5,3,3,41,11,16,41,11,16,5,5,1,1,11,16,11,16,41,45,11,15,16,1,15,3,8,27,41,45,11,15,16,5,1,19,1,5,3,3,3,11,11,11,15,16,1,1,1,19,45,41,15,3,11,15,16,1,3,1,15,15,3,11,15,16,3,11,16,41,45,11,16,11,15,11,3,8,11,15,16,0,5,5,5,3,8,11,15,16,5,1,8,19,8,5,1,0,5,1,3,3,3,3,1,5,1,3,3,3,3,5,1,8,41,11,15,16,1,41,1,1,1,1,1,0,0,1,11,1,1,15,5,1,3,8,27,41,45,11,15,16,5,1,1,19,3,8,27,41,45,11,15,16,5,1,19,3,8,27,41,45,11,15,16,5,1,19,15,11,16,11,16,8,5,5,1,0,0,0,0,0,85,86,53,55,85,86,53,55,53,53,53,53,55,55,55,53,85,86,53,55,85,86,53,55,53,53,53,53,53,53,53,53,53,53,55,53,53,53,85,86,53,55,85,86,53,55,85,86,53,55,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,0,0,0,0,0,59,61,61,66,59,61,60,67,66,59,61,60,67,61,61,61,61,61,61,59,66,59,61,60,67,59,59,61,61,66,59,61,60,67,59,61,0,66,59,61,60,67,66,59,61,60,67,66,59,61,60,67,0,69,0,69,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,68,68,68,68,68,68,68,0,0,71,0,70,70,87,70,87,70,70,70,70,70,70,70,70,87,70,70,87,70,70,70,87,70,87,70,87,0,0,0,0,0,0,0,0,0,0,0,88,89,90,78,79,75,72,73,74,88,89,90,78,79,75,72,73,74,72,73,74,72,73,74,75,75,78,75,72,73,74,78,75,78,72,73,74,88,89,90,78,79,75,72,73,74,88,89,90,78,79,75,72,73,74,79,78,78,78,78,78,78,79,72,73,74,78,78,75,78,78,78,88,89,90,78,79,75,72,73,74,88,89,90,78,79,75,72,73,74,88,89,90,78,79,75,72,73,74,0,0,0,0,0,80,83,84,81,82,80,83,84,81,82,80,81,82,80,83,80,80,81,80,81,80,80,82,80,82,80,80,80,83,84,81,82,80,80,80,83,84,81,82,80,80,83,84,80,80,80,80,80,81,82,80,83,84,83,84,80,81,81,82,80,80,83,84,81,82,80,83,84,81,82,80,83,84,81,82],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1]]],[[2,[-1]]],[]],[[[1,[-1]]],[[1,[-1]]],[]],[[[1,[-1]]],[],[]],[[[3,[-1]]],[[4,[[2,[-1]],[2,[-1]]]]],[]],[5,6],[5,[[1,[7]]]],[[[1,[-1]]],[],[]],[[[8,[-1]]],[[2,[-1]]],[]],[5,[[2,[7]]]],[5,6],[[[1,[-1]]],[[1,[-1]]],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[8,[-1]]],[[2,[-1]]],[]],[[[1,[-1]]],[[2,[-1]]],[]],[[[3,[-1]]],[[4,[[2,[-1]],[2,[-1]]]]],[]],[5,6],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[-1]]],10,[]],[[[8,[-1]]],10,[]],[[[11,[-1,-2,-3]]],10,[12,13],[],14],[[[15,[-1,-2]]],10,[12,13],14],[[[16,[-1,-2]]],10,12,[]],[5,10],[[[1,[-1]]],10,[]],[[[3,[-1]]],4,[]],[[[8,[-1]]],4,[]],[[[11,[-1,-2,-3]]],4,[12,13],[],14],[[[15,[-1,-2]]],4,[12,13],14],[[[16,[-1,-2]]],4,12,[]],[5,4],[[[1,[-1]]],4,[]],[[[8,[-1]],-1],4,[17,18]],[[[3,[-1]]],[[3,[-1]]],18],[[[11,[-1,-2,-3]]],[[11,[-1,-2,-3]]],[12,13,18],18,18],[[[15,[-1,-2]]],[[15,[-1,-2]]],[12,13,18],18],[[[16,[-1,-2]]],[[16,[-1,-2]]],[12,18],18],[5,5],[[[1,[-1]]],[[1,[-1]]],18],[[[19,[-1]]],[[19,[-1]]],18],[[5,5],20],[[[1,[-1]],[1,[-1]]],20,21],[[[15,[-2,-3]],-1],22,[23,12,13],[[24,[-1]],12,13],14],[[[11,[-2,-3,-4]],-1],22,[23,12,13],[[24,[-1]],12,13],[],14],[[[16,[-1,-2]],-1],22,12,[]],[[],[[3,[-1]]],[]],[[],[[8,[-1]]],[]],[[],[[11,[-1,-2,-3]]],[12,13],[],[14,25]],[[],[[15,[-1,-2]]],[12,13],[14,25]],[[],[[16,[-1,-2]]],12,[]],[[],5],[[],[[1,[-1]]],[]],[[[8,[-1]]],[[2,[-1]]],[]],[5,6],[[[1,[-1]]],[[2,[-1]]],[]],[5,6],[[[1,[-1]]],[[2,[-1]]],[]],[[[15,[-1,-2]],[15,[-1,-3]]],[[0,[-1,-3]]],[12,13],14,14],[[[3,[-1]]],4,[]],[[[8,[-1]]],4,[]],[[[16,[-1,-2]]],4,[],[]],[[[1,[-1]]],4,[]],[[[1,[-1]],[2,[-1]]],22,26],[[[11,[-1,-2,-3]],-1],[[27,[-1,-2]]],[12,13],[],14],[[[11,[-1,-2,-3]],[11,[-1,-2,-4]]],22,[12,13],12,14,14],[[[15,[-1,-2]],[15,[-1,-3]]],22,[12,13],14,14],[[[16,[-1,-2]],[16,[-1,-2]]],22,12,26],[[5,6],22],[[5,6],22],[[5,5],22],[[[1,[-2]],[2,[-1]]],22,[],[[26,[-1]]]],[[[1,[-2]],[2,[-1]]],22,[],[[26,[-1]]]],[[[1,[-2]],[1,[-1]]],22,[],[[26,[-1]]]],[[[1,[-2]],[2,[-1]]],22,[],[[26,[-1]]]],[[[1,[-2]],[28,[-1]]],22,[],[[26,[-1]]]],[[[1,[-2]],[28,[-1]]],22,[],[[26,[-1]]]],[[[8,[-1]],-2],4,18,29],[[[8,[-1]],-2],4,[],29],[[[11,[-1,-2,-3]],-4],4,[12,13],[],14,29],[[[11,[-1,-2,-3]],-4],4,[12,13,17],17,14,29],[[[15,[-1,-2]],-3],4,[12,13],14,29],[[[15,[-1,-2]],-3],4,[12,13,17],14,29],[[[1,[-1]],-2],4,[],29],[[[1,[-1]],-2],4,17,29],[[[1,[-1]],-2],4,[],29],[[[8,[-1]],[2,[-1]]],4,18],[[[1,[-1]],[2,[-1]]],[[30,[4,4]]],18],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[12,13],[],14],[[[15,[-1,-2]]],[[9,[-1]]],[12,13],14],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[12,13],[],14],[[[3,[-1]],31],32,33],[[[8,[-1]],31],32,33],[[[11,[-1,-2,-3]],31],32,[12,13,33],33,14],[[[15,[-1,-2]],31],32,[12,13,33],14],[[[16,[-1,-2]],31],32,[12,33],33],[[5,31],32],[[5,31],32],[[[1,[-1]],31],32,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,5],[35,5],[7,5],[36,5],[37,5],[6,5],[38,5],[39,5],[-1,-1,[]],[40,5],[-1,-1,[]],[-1,-1,[]],[-1,[[11,[-2,-3,-4]]],29,[12,13],[],[14,25]],[-1,[[15,[-2,-3]]],29,[12,13],[14,25]],[-1,[[16,[-2,-3]]],29,12,[]],[-1,5,29],[-1,5,29],[-1,5,29],[-1,[[1,[-2]]],29,[]],[[[2,[-1]]],[[30,[[1,[-1]],4]]],18],[6,[[30,[5]]]],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[41,[-1,-2]]],-2,[12,13],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,13,12],[[24,[-1]],12,13],[],14],[[[16,[-2,-3]],-1],[[9,[-3]]],[12,23],[[24,[-1]],12],[]],[[[41,[-1,-2]]],-2,[12,13],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,13,12],[[24,[-1]],12,13],[],14],[[[16,[-2,-3]],-1],[[9,[-3]]],[12,23],[[24,[-1]],12],[]],[[5,-1],4,42],[[5,-1],4,43],[[[1,[-1]],-2],4,13,42],[[[1,[-1]],-2],4,44,43],[[[11,[-2,-3,-4]],-1],-3,[23,12,13],[12,13,[24,[-1]]],[],14],[[[16,[-2,-3]],-1],-3,[12,23],[[24,[-1]],12],[]],[[[11,[-2,-3,-4]],-1],-3,[23,12,13],[12,13,[24,[-1]]],[],14],[[[16,[-2,-3]],-1],-3,[12,23],[[24,[-1]],12],[]],[[[41,[-1,-2]],-2],-2,[12,13],[]],[[[45,[-1,-2]],-2],[[30,[-2,-2]]],[12,13],[]],[[[11,[-1,-2,-3]],-1,-2],[[30,[[9,[-2]],[4,[-1,-2]]]]],[12,13],[],14],[[[15,[-1,-2]],-1],[[30,[22,-1]]],[12,13],14],[[[16,[-1,-2]],-1,-2],[[30,[[9,[-2]],[4,[-1,-2]]]]],12,[]],[[[1,[-1]],10,-1],[[30,[4,-1]]],[]],[[[15,[-1,-2]],[15,[-1,-3]]],[[0,[-1,-3]]],[12,13],14,14],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[30,[[28,[-1]],[1,[-1]]]]],[]],[5,[[1,[7]]]],[[[3,[-1]]],[],[]],[[[3,[-1]]],[],[]],[[[3,[-1]]],[],[]],[[[11,[-1,-2,-3]]],[],[12,13],[],14],[[[11,[-1,-2,-3]]],[],[12,13],[],14],[[[11,[-1,-2,-3]]],[],[12,13],[],14],[[[15,[-1,-2]]],[],[12,13],14],[[[16,[-1,-2]]],[],12,[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[],[]],[[[1,[-1]]],[],[]],[-1,-2,[],[]],[[[45,[-1,-2]]],-1,[12,13],[]],[[[41,[-1,-2]]],-2,[12,13],[]],[[[15,[-1,-2]],[15,[-1,-3]]],22,[12,13],14,14],[[[3,[-1]]],22,[]],[[[11,[-1,-2,-3]]],22,[12,13],[],14],[[[15,[-1,-2]]],22,[12,13],14],[[[16,[-1,-2]]],22,12,[]],[[[1,[-1]]],22,[]],[[[3,[-1]]],22,[]],[[[1,[-1]]],22,[]],[[[15,[-1,-2]],[15,[-1,-3]]],22,[12,13],14,14],[[[15,[-1,-2]],[15,[-1,-3]]],22,[12,13],14,14],[[[3,[-1]]],[[0,[-1]]],[]],[[[11,[-1,-2,-3]]],[[0,[-1,-2]]],[12,13],[],14],[[[15,[-1,-2]]],[[0,[-1]]],[12,13],14],[[[16,[-1,-2]]],[[0,[-1,-2]]],12,[]],[[[3,[-1]]],[[0,[-1]]],[]],[[[11,[-1,-2,-3]]],[[0,[-1,-2]]],[12,13],[],14],[[[16,[-1,-2]]],[[0,[-1,-2]]],12,[]],[[[41,[-1,-2]]],-1,[12,13],[]],[[[45,[-1,-2]]],-1,[12,13],[]],[[[11,[-1,-2,-3]]],[[0,[46]]],[12,13],[],14],[[[16,[-1,-2]]],[[0,[46]]],12,[]],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[12,13],[],14],[[[15,[-1,-2]]],[[9,[-1]]],[12,13],14],[[[11,[-1,-2,-3]]],[[9,[[4,[-1,-2]]]]],[12,13],[],14],[[[3,[-1]]],10,[]],[[[8,[-1]]],10,[]],[[[11,[-1,-2,-3]]],10,[12,13],[],14],[[[15,[-1,-2]]],10,[12,13],14],[[[16,[-1,-2]]],10,12,[]],0,[[5,6],22],[[5,6],22],[[5,5],22],[[],[[3,[-1]]],[]],[[],[[8,[-1]]],[]],[[],[[11,[-1,-2,[47,[-3]]]]],[],[],[]],[[],[[15,[-1,[47,[-2]]]]],[],[]],[[],[[16,[-1,-2]]],[],[]],[[],5],[[],[[1,[-1]]],[]],[-1,[[8,[-1]]],[17,18]],[[[19,[-1]]],[[9,[-1]]],[]],[[[8,[-1]]],[[19,[-1]]],[]],[[5,5],[[9,[20]]]],[[[1,[-1]],[1,[-1]]],[[9,[20]]],48],0,[5,[[9,[49]]]],[[[1,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],-1,[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],-1,[]],[[[1,[-1]]],-1,[]],[[5,49],[[30,[4,4]]]],[[[1,[-1]],-1],[[30,[4,-1]]],[]],[[[3,[-1]],-1],[[30,[4,-1]]],[]],[[[3,[-1]],-1],4,[]],[[[3,[-1]],-1],[[30,[4,-1]]],[]],[[[3,[-1]],-1],4,[]],[[5,6],[[30,[4,4]]]],[[[1,[-1]],-1],4,[]],[[[8,[-1]]],[[9,[-1]]],[]],[[[41,[-1,-2]]],-2,[12,13],[]],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,13,12],[[24,[-1]],12,13],[],14],[[[15,[-2,-3]],-1],22,[23,12,13],[[24,[-1]],12,13],14],[[[16,[-2,-3]],-1],[[9,[-3]]],[12,23],[[24,[-1]],12],[]],[[[1,[-1]],10],-1,[]],[[[41,[-1,-2]]],[[4,[-1,-2]]],[12,13],[]],[[[1,[-1]],10,-1],[[30,[4,4]]],18],[[[1,[-1]],10],[[30,[4,4]]],[18,25]],[[[1,[-1]],-2],4,[],50],[[[1,[-1]],-2],4,[],50],[[[1,[-1]],10],4,[]],0,0,[[[1,[-1]],[2,[-1]]],22,26],[[[11,[-2,-3,-4]],-1],[[9,[-3]]],[23,13,12],[[24,[-1]],12,13],[],14],[[[1,[-1]],10],-1,[]],[[[1,[-1]],10],-1,[]],[[[15,[-1,-2]],[15,[-1,-3]]],[[0,[46]]],[12,13],14,14],[[5,10],4],[[[1,[-1]],10],4,[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[[[2,[-1]]],[[30,[[1,[-1]]]]],18],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[[[15,[-1,-2]],[15,[-1,-3]]],[[0,[46]]],[12,13],14,14],[[[11,[-1,-2,-3]]],[[0,[46]]],[12,13],[],14],[[[16,[-1,-2]]],[[0,[46]]],12,[]],[[[11,[-1,-2,-3]]],[[0,[46]]],[12,13],[],14],[[[16,[-1,-2]]],[[0,[46]]],12,[]],[[[8,[-1]],-1],4,[]],[[5,49],[[30,[4,52]]]],[[5,6],[[30,[4,52]]]],[[[1,[7]],6],32],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1,-2]]],10,21,54],[[[53,[-1,-2]]],4,21,54],[[[53,[-1,-2]]],[[53,[-1,-2]]],[21,18],54],[[],[[53,[-1,-2]]],21,54],[[[55,[-1,-2]]],-1,21,54],[[[55,[-1,-2]]],-1,21,54],[[[55,[-1,-2]]],4,21,54],[[[53,[-1,-2]],31],32,[21,33],54],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-1,-2]]],[],21,54],[[[53,[-1,-2]]],[[1,[-1]]],21,54],[[[53,[-1,-2]]],22,21,54],[[[53,[-1,-2]]],[[56,[-1]]],21,54],[[[53,[-1,-2]]],[[57,[-1]]],21,54],[[[53,[-1,-2]]],10,21,54],[[],[[53,[-1,-2]]],[],[]],[[[53,[-1,-2]]],[[9,[-1]]],21,54],[[[53,[-1,-2]]],[[9,[[55,[-1,-2]]]]],21,54],[[[53,[-1,-2]]],[[9,[-1]]],21,54],[[[55,[-1,-2]]],-1,21,54],[[[53,[-1,-2]]],-1,21,54],[[[53,[-1,-2]],-1],[[30,[4,-1]]],21,54],[[[53,[-1,-2]],-1],4,21,54],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[58,[-1]]],[]],[[[58,[-1]]],[[9,[-1]]],[]],[[[58,[-1]],-1],[[30,[4,-1]]],[]],[-1,-1,[]],[-1,-2,[],[]],[[],[[58,[-1]]],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],0,0,0,0,0,[[[59,[-1]]],[[9,[[61,[-1,60]]]]],[]],[[[61,[-2]]],[[2,[-1]]],[],[[62,[[2,[-1]]]]]],[[[61,[-2]]],[[2,[-1]]],[],[[63,[[2,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[61,[-1]],[61,[-1]]],20,21],[[[61,[-1]]],-1,[]],[[[61,[-1]]],-1,[]],[[[61,[-1]],[61,[-1]]],22,26],[[[61,[-1]],31],32,64],[[[61,[-1]],31],32,33],[[[59,[-1]],[61,[-1,-2]]],4,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[59,[-1]],[2,[7]]],10,[]],[[[59,[-1]],[65,[-2]]],10,[],[[62,[[2,[[66,[-1]]]]]]]],[[[61,[-1]],-2],4,44,43],[[[61,[-1,60]],-1],[[61,[-1,67]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[59,[-1]]],[]],[[[61,[-1]],[61,[-1]]],[[9,[20]]],48],0,[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],0,0,0,[[],[[9,[[68,[-1,60]]]]],23],0,[[[68,[-1]]],[[2,[-2]]],69,[]],[[[68,[-1]]],[[2,[-2]]],69,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[68,[-1]],[68,[-1]]],20,69],[[[68,[-1]]],[],69],[[[68,[-1]]],[],69],[[[68,[-1,-2]]],4,69,[]],[[[68,[-1]],[68,[-1]]],22,69],[[[68,[-1]],31],32,69],[[[68,[-1]],31],32,69],[[[68,[-1,67]]],[[68,[-1,60]]],69],[[[68,[-1,60]]],[[68,[-1,67]]],69],[-1,-1,[]],[[[2,[7]]],10],[[[65,[-1]]],10,[[62,[[2,[66]]]]]],[[[68,[-1]],-2],4,69,43],[[[68,[-1,60]]],[[68,[-1,67]]],69],[-1,-2,[],[]],[[[68,[-1]],[68,[-1]]],[[9,[20]]],69],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],0,0,0,0,[[[70,[-1]]],[],71],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[70,[-1]]],[[70,[-1]]],71],[[[70,[-1]],[70,[-1]]],20,71],[[[70,[-1]]],[],71],[[[70,[-1]]],4,71],[[[70,[-1]],[70,[-1]]],22,71],[[[70,[-1]],31],32,71],[[[70,[-1]],31],32,71],[-1,-1,[]],[-1,-1,[]],[[[70,[-1]],-2],4,71,43],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[30,[[70,[-1]]]]],71],[[[70,[-1]],[70,[-1]]],[[9,[20]]],71],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[72,72],[73,73],[74,74],[[72,72],20],[[73,73],20],[[74,74],20],[[[75,[-1,-2,-3]]],[],21,76,77],[[[75,[-1,-2,-3]]],[],21,76,77],[[[78,[-1,-2,-3]]],4,[],76,[]],[[[75,[-1,-2,-3]]],4,21,76,77],[[72,72],22],[[73,73],22],[[74,74],22],[[[78,[-1,-2,-3]],-4],[[9,[[75,[-1,-2,-3]]]]],21,76,77,50],[[[75,[-1,-2,-3]]],4,21,76,77],[[[78,[-1,-2,-3]],31],32,[21,33],76,77],[[72,31],32],[[73,31],32],[[74,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[-1,-2,-3]]],22,21,76,77],[[[78,[-1,-2,-3]]],22,21,76,77],[[[78,[-1,-2,-3]]],[[79,[-1,-2,-3]]],21,76,77],[[],[[78,[-1,73,-2]]],[],[]],[[],[[78,[-1,72,-2]]],[],[]],[[],[[78,[-1,74,-2]]],[],[]],[[[79,[-1,-2,-3]]],9,21,76,77],[[72,72],[[9,[20]]]],[[73,73],[[9,[20]]]],[[74,74],[[9,[20]]]],[[[78,[-1,-2,-3]]],[[9,[-1]]],21,76,77],[[[78,[-1,-2,-3]]],[[30,[-1,4]]],21,76,77],[[[75,[-1,-2,-3]]],-1,21,76,77],[[[78,[-1,-2,-3]]],-1,21,76,77],[[[78,[-1,-2,-3]],-1],[[30,[4,-1]]],21,76,77],[[[78,[-1,-2,-3]],-1],4,21,76,77],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[80,[-1]]],10,[]],[[[81,[-1]]],10,[]],[[[82,[-1]]],10,[]],[[[80,[-1]]],[[80,[-1]]],18],[[[83,[-1]]],[[83,[-1]]],[]],[[],[[80,[-1]]],[]],[[[80,[-1]]],[[9,[-1]]],[]],[[[81,[-1]]],[[9,[-1]]],[]],[[[80,[-1]]],-1,[]],[[[81,[-1]]],-1,[]],[[[80,[-1]]],4,[]],[[[80,[-1]],-1],[[30,[4,-1]]],[]],[[[82,[-1]],-1],[[30,[4,-1]]],[]],[[[80,[-1]],-1],4,[]],[[[82,[-1]],-1],4,[]],[[[80,[-1]],[80,[-1]]],22,26],[[[80,[-1]],31],32,33],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[80,[-1]],-2],4,13,42],[[[80,[-1]],-2],4,44,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[80,[-1]]],[],[]],[[[80,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[80,[-1]]],22,[]],[[[80,[-1]]],22,[]],[[[80,[-1]]],[[83,[-1]]],[]],[[[80,[-1]]],[[84,[-1]]],[]],[[[80,[-1]]],10,[]],[[[81,[-1]]],10,[]],[[[82,[-1]]],10,[]],[[],[[80,[-1]]],[]],[[[83,[-1]]],9,[]],[[[84,[-1]]],9,[]],[[[83,[-1]]],9,[]],[[[84,[-1]]],9,[]],[[[80,[-1]]],[[9,[-1]]],[]],[[[81,[-1]]],[[9,[-1]]],[]],[[[81,[-1]]],22,[]],[[[82,[-1]]],22,[]],[[[80,[-1]]],[[4,[[82,[-1]],[81,[-1]]]]],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,[[30,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]]],"c":[491],"p":[[3,"Vec",0],[15,"slice"],[3,"Deque",0],[15,"tuple"],[3,"String",0],[15,"str"],[15,"u8"],[3,"HistoryBuffer",0],[4,"Option",721],[15,"usize"],[3,"IndexMap",0],[8,"Eq",722],[8,"Hash",723],[8,"BuildHasher",723],[3,"IndexSet",0],[3,"LinearMap",0],[8,"Copy",724],[8,"Clone",725],[3,"OldestOrdered",0],[4,"Ordering",722],[8,"Ord",722],[15,"bool"],[8,"Sized",724],[8,"Borrow",726],[8,"Default",727],[8,"PartialEq",722],[4,"Entry",0],[15,"array"],[8,"IntoIterator",728],[4,"Result",729],[3,"Formatter",730],[6,"Result",730],[8,"Debug",730],[15,"u16"],[15,"u64"],[15,"i8"],[15,"i32"],[15,"u32"],[15,"i16"],[15,"i64"],[3,"OccupiedEntry",0],[8,"Hasher",723],[8,"Hasher",731],[8,"Hash",731],[3,"VacantEntry",0],[8,"Iterator",732],[3,"BuildHasherDefault",723],[8,"PartialOrd",722],[15,"char"],[8,"FnMut",733],[3,"TypeId",734],[3,"Error",730],[3,"BinaryHeap",344],[8,"Kind",344],[3,"PeekMut",344],[3,"Iter",735],[3,"IterMut",735],[3,"MpMcQueue",399],[3,"Pool",417],[4,"Uninit",417],[3,"Box",417],[8,"AsMut",736],[8,"AsRef",736],[8,"Display",730],[19,"MaybeUninit",737],[3,"Node",417],[4,"Init",417],[3,"Box",474],[8,"Pool",474],[3,"Arc",502],[8,"Pool",502],[3,"LinkedIndexU8",531],[3,"LinkedIndexU16",531],[3,"LinkedIndexUsize",531],[3,"FindMut",531],[8,"SortedLinkedListIndex",531],[8,"Kind",531],[3,"SortedLinkedList",531],[3,"Iter",531],[3,"Queue",641],[3,"Consumer",641],[3,"Producer",641],[3,"Iter",641],[3,"IterMut",641],[4,"Min",344],[4,"Max",344],[3,"ArcInner",502],[3,"Min",531],[3,"Max",531],[3,"Node",531]],"b":[[19,"impl-AsMut%3C%5BT%5D%3E-for-Vec%3CT,+N%3E"],[20,"impl-AsMut%3CVec%3CT,+N%3E%3E-for-Vec%3CT,+N%3E"],[27,"impl-AsRef%3C%5Bu8%5D%3E-for-String%3CN%3E"],[28,"impl-AsRef%3Cstr%3E-for-String%3CN%3E"],[29,"impl-AsRef%3CVec%3CT,+N%3E%3E-for-Vec%3CT,+N%3E"],[30,"impl-AsRef%3C%5BT%5D%3E-for-Vec%3CT,+N%3E"],[109,"impl-PartialEq%3C%26str%3E-for-String%3CN%3E"],[110,"impl-PartialEq%3Cstr%3E-for-String%3CN%3E"],[111,"impl-PartialEq%3CString%3CN2%3E%3E-for-String%3CN1%3E"],[112,"impl-PartialEq%3C%26mut+%5BB%5D%3E-for-Vec%3CA,+N%3E"],[113,"impl-PartialEq%3C%26%5BB%5D%3E-for-Vec%3CA,+N%3E"],[114,"impl-PartialEq%3CVec%3CB,+N2%3E%3E-for-Vec%3CA,+N1%3E"],[115,"impl-PartialEq%3C%5BB%5D%3E-for-Vec%3CA,+N%3E"],[116,"impl-PartialEq%3C%26%5BB;+M%5D%3E-for-Vec%3CA,+N%3E"],[117,"impl-PartialEq%3C%5BB;+M%5D%3E-for-Vec%3CA,+N%3E"],[118,"impl-Extend%3C%26T%3E-for-HistoryBuffer%3CT,+N%3E"],[119,"impl-Extend%3CT%3E-for-HistoryBuffer%3CT,+N%3E"],[120,"impl-Extend%3C(K,+V)%3E-for-IndexMap%3CK,+V,+S,+N%3E"],[121,"impl-Extend%3C(%26K,+%26V)%3E-for-IndexMap%3CK,+V,+S,+N%3E"],[122,"impl-Extend%3CT%3E-for-IndexSet%3CT,+S,+N%3E"],[123,"impl-Extend%3C%26T%3E-for-IndexSet%3CT,+S,+N%3E"],[124,"impl-Extend%3CT%3E-for-Vec%3CT,+N%3E"],[125,"impl-Extend%3C%26T%3E-for-Vec%3CT,+N%3E"],[126,"impl-Vec%3CT,+N%3E"],[137,"impl-Display-for-String%3CN%3E"],[138,"impl-Debug-for-String%3CN%3E"],[148,"impl-From%3Cu16%3E-for-String%3CN%3E"],[149,"impl-From%3Cu64%3E-for-String%3CN%3E"],[150,"impl-From%3Cu8%3E-for-String%3CN%3E"],[151,"impl-From%3Ci8%3E-for-String%3CN%3E"],[152,"impl-From%3Ci32%3E-for-String%3CN%3E"],[153,"impl-From%3C%26str%3E-for-String%3CN%3E"],[154,"impl-From%3Cu32%3E-for-String%3CN%3E"],[155,"impl-From%3Ci16%3E-for-String%3CN%3E"],[157,"impl-From%3Ci64%3E-for-String%3CN%3E"],[163,"impl-FromIterator%3C%26str%3E-for-String%3CN%3E"],[164,"impl-FromIterator%3C%26char%3E-for-String%3CN%3E"],[165,"impl-FromIterator%3Cchar%3E-for-String%3CN%3E"],[177,"impl-Hash-for-String%3CN%3E"],[178,"impl-Hash-for-String%3CN%3E"],[179,"impl-Hash-for-Vec%3CT,+N%3E"],[180,"impl-Hash-for-Vec%3CT,+N%3E"],[205,"impl-IntoIterator-for-Deque%3CT,+N%3E"],[206,"impl-IntoIterator-for-%26mut+Deque%3CT,+N%3E"],[207,"impl-IntoIterator-for-%26Deque%3CT,+N%3E"],[208,"impl-IntoIterator-for-%26mut+IndexMap%3CK,+V,+S,+N%3E"],[209,"impl-IntoIterator-for-IndexMap%3CK,+V,+S,+N%3E"],[210,"impl-IntoIterator-for-%26IndexMap%3CK,+V,+S,+N%3E"],[213,"impl-IntoIterator-for-Vec%3CT,+N%3E"],[214,"impl-IntoIterator-for-%26mut+Vec%3CT,+N%3E"],[215,"impl-IntoIterator-for-%26Vec%3CT,+N%3E"],[249,"impl-PartialEq%3C%26str%3E-for-String%3CN%3E"],[250,"impl-PartialEq%3Cstr%3E-for-String%3CN%3E"],[251,"impl-PartialEq%3CString%3CN2%3E%3E-for-String%3CN1%3E"],[439,"impl-Display-for-Box%3CT%3E"],[440,"impl-Debug-for-Box%3CT%3E"],[488,"impl-Debug-for-Box%3CP%3E"],[489,"impl-Display-for-Box%3CP%3E"],[516,"impl-Debug-for-Arc%3CP%3E"],[517,"impl-Display-for-Arc%3CP%3E"],[678,"impl-Hash-for-Queue%3CT,+N%3E"],[679,"impl-Hash-for-Queue%3CT,+N%3E"],[685,"impl-IntoIterator-for-%26mut+Queue%3CT,+N%3E"],[686,"impl-IntoIterator-for-%26Queue%3CT,+N%3E"]]},\
"hermit":{"doc":"First version is derived and adapted for Hermit from …","t":"DDGLLLLLLLLLLLLLLLLLLLOALLLLLLLLLLLLLMMDAOOFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDDLLLLLLLLLLLLLMMMMLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLDMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMDDGGLLLLLLLLLDDMMMMDMMMMGMMMMMMMMMMMDDDGFFFFFFFFFFFFFGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["SpinlockContainer","SpinlockIrqSaveContainer","Tid","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dbg","errno","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","it_interval","it_value","itimerval","net","print","println","sys_abort","sys_add_queue","sys_block_current_task","sys_block_current_task_with_timeout","sys_clock_getres","sys_clock_gettime","sys_clock_nanosleep","sys_clock_settime","sys_close","sys_destroy_queue","sys_dup","sys_exit","sys_free","sys_fstat","sys_futex_wait","sys_futex_wake","sys_get_priority","sys_get_processor_count","sys_get_processor_frequency","sys_getpagesize","sys_getpid","sys_gettimeofday","sys_init_queue","sys_ioctl","sys_join","sys_lseek","sys_lstat","sys_malloc","sys_mkdir","sys_msleep","sys_nanosleep","sys_notify","sys_open","sys_opendir","sys_rand","sys_read","sys_read_entropy","sys_readdir","sys_realloc","sys_rmdir","sys_secure_rand32","sys_secure_rand64","sys_sem_cancelablewait","sys_sem_destroy","sys_sem_init","sys_sem_post","sys_sem_timedwait","sys_sem_trywait","sys_set_current_task_priority","sys_set_priority","sys_setitimer","sys_shutdown","sys_spawn","sys_spawn2","sys_spinlock_destroy","sys_spinlock_init","sys_spinlock_irqsave_destroy","sys_spinlock_irqsave_init","sys_spinlock_irqsave_lock","sys_spinlock_irqsave_unlock","sys_spinlock_lock","sys_spinlock_unlock","sys_srand","sys_stat","sys_thread_exit","sys_unlink","sys_usleep","sys_wait","sys_wakeup_task","sys_write","sys_yield","timespec","timeval","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","AF_INET","AF_INET6","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NONAME","EAI_SERVICE","FIONBIO","IPPROTO_IP","IPPROTO_IPV6","IPPROTO_TCP","IPPROTO_UDP","IPV6_ADD_MEMBERSHIP","IPV6_DROP_MEMBERSHIP","IPV6_MULTICAST_LOOP","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_DROP_MEMBERSHIP","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_TTL","MSG_PEEK","SHUT_RD","SHUT_RDWR","SHUT_WR","SOCK_DGRAM","SOCK_STREAM","SOL_SOCKET","SO_BROADCAST","SO_ERROR","SO_LINGER","SO_RCVTIMEO","SO_REUSEADDR","SO_SNDTIMEO","TCP_NODELAY","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addrinfo","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","getsockopt","imr_interface","imr_multiaddr","in6_addr","in_addr","in_addr_t","in_port_t","into","into","into","into","into","into","into","into","into","ip_mreq","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","l_linger","l_onoff","linger","s6_addr","s_addr","sa_data","sa_family","sa_family_t","sa_len","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_len","sin_port","sin_zero","sockaddr","sockaddr_in","sockaddr_in6","socklen_t","sys_accept","sys_bind","sys_connect","sys_freeaddrinfo","sys_getaddrinfo","sys_getpeername","sys_getsockname","sys_listen","sys_recv","sys_send","sys_setsockopt","sys_shutdown_socket","sys_socket","time_t","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"hermit"],[143,"hermit::errno"],[276,"hermit::net"],[485,"dyn_clone::sealed"],[486,"core::fmt"],[487,"core::fmt"],[488,"core::result"],[489,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Prints and returns the value of a given expression for …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Prints to the standard output.","Prints to the standard output, with a newline.","","","Set the current task state to <code>blocked</code>","Set the current task state to <code>blocked</code>","","","","","","","","","","","","","Determine the priority of the current thread","Returns the number of processors currently online.","Returns the processor frequency in MHz.","","","","","","","","","","","","","","","","The function computes a sequence of pseudo-random integers …","","Fill <code>len</code> bytes in <code>buf</code> with cryptographically secure random …","","","","Create a cryptographicly secure 32bit random number with …","Create a cryptographicly secure 64bit random number with …","","","","","","","Set priority of the current thread","Set priority of the thread with the identifier <code>id</code>","","","","","","","","","","","","","The function sets its argument as the seed for a new …","","","","","","Wake up the task with the identifier <code>id</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Argument list too long","Permission denied","Address already in use","Cannot assign requested address","Advertise error","Address family not supported by protocol","Try again","Operation already in progress","Invalid exchange","Bad file number","File descriptor in bad state","Not a data message","Invalid request descriptor","Invalid request code","Invalid slot","Bad font file format","Device or resource busy","Operation Canceled","No child processes","Channel number out of range","Communication error on send","Software caused connection abort","Connection refused","Connection reset by peer","Resource deadlock would occur","","Destination address required","Math argument out of domain of func","RFS specific error","Quota exceeded","File exists","Bad address","File too large","Host is down","No route to host","Robust mutexes: Memory page has hardware error","Identifier removed","Illegal byte sequence","Operation now in progress","Interrupted system call","Invalid argument","I/O error","Transport endpoint is already connected","Is a directory","Is a named type file","Key has expired","Key was rejected by service","Key has been revoked","Level 2 halted","Level 2 not synchronized","Level 3 halted","Level 3 reset","Can not access a needed shared library","Accessing a corrupted shared library","Cannot exec a shared library directly","Attempting to link in too many shared libraries",".lib section in a.out corrupted","Link number out of range","Too many symbolic links encountered","Wrong medium type","Too many open files","Too many links","Message too long","Multihop attempted","File name too long","No XENIX semaphores available","Network is down","Network dropped connection because of reset","Network is unreachable","File table overflow","No anode","No buffer space available","No CSI structure available","No data available","No such device","No such file or directory","Exec format error","Required key not available","No record locks available","Link has been severed","No medium found","Out of memory","No message of desired type","Machine is not on the network","Package not installed","Protocol not available","No space left on device","Out of streams resources","Device not a stream","Function not implemented","Block device required","Transport endpoint is not connected","Not a directory","Directory not empty","Not a XENIX named type file","Robust mutexes: State not recoverable","Socket operation on non-socket","Not a typewriter","Name not unique on network","No such device or address","Operation not supported on transport endpoint","Value too large for defined data type","Robust mutexes: Owner died","Operation not permitted","Protocol family not supported","Broken pipe","Protocol error","Protocol not supported","Protocol wrong type for socket","Math result not representable","Remote address changed","Object is remote","Remote I/O error","Interrupted system call should be restarted","Robust mutexes: Operation not possible due to RF-kill","Read-only file system","Cannot send after transport endpoint shutdown","Socket type not supported","Illegal seek","No such process","Srmount error","Stale file handle","Streams pipe error","Timer expired","Connection timed out","Too many references: cannot splice","Text file busy","Structure needs cleaning","Protocol driver not attached","Too many users","Operation would block","Cross-device link","Exchange full","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,3,4,5,19,20,3,4,5,19,20,3,4,5,3,4,5,3,4,5,0,0,3,4,5,19,20,3,4,5,19,20,3,4,5,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,19,20,3,4,5,19,20,3,4,5,4,4,5,5,19,20,3,4,5,19,20,3,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,27,28,29,30,31,0,30,30,30,30,30,30,30,30,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,0,28,28,0,0,0,0,23,24,25,26,27,28,29,30,31,0,0,29,29,31,31,0,24,23,25,25,0,25,27,27,27,27,27,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31,23,24,25,26,27,28,29,30,31],"f":[0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[4,4],[5,5],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[3,6],7],[[4,6],7],[[5,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],8],[[9,10],11],[[],2],[12,2],[[12,4],11],[[12,4],11],[[12,11,4,4],11],[[12,4],11],[11,11],[9,11],[11,11],[11,8],[[13,9,9],2],0,[[14,14,4,14],11],[[14,11],11],[[],13],[[],9],[[],15],[[],11],[[],16],[[5,9],11],[9,11],[[11,11,17],11],[16,11],[[11,18,11],18],0,[[9,9],13],[[13,14],11],[14,2],[[4,4],11],[[9,11],11],[[13,11,11],11],[13,11],[[],14],[[11,13,9],18],[[13,9,14],18],0,[[13,9,9,9],13],[13,11],[14,11],[12,11],0,0,0,0,0,0,[13,2],[[16,13],2],[[11,3,3],11],[11,8],[[16,9,13,18],11],[[9,13,9,18],16],[19,11],[19,11],[20,11],[20,11],[20,11],[20,11],[19,11],[19,11],[14,2],0,[11,8],[13,11],[12,2],[9,11],[16,2],[[11,13,9],18],[[],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],0,0,0,0,[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[23,6],7],[[24,6],7],[[25,6],7],[[26,6],7],[[27,6],7],[[28,6],7],[[29,6],7],[[30,6],7],[[31,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[11,11,11,17,32],11],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[11,25,32],11],[[11,25,32],11],[[11,25,32],11],[30,2],[[13,13,30,30],11],[[11,25,32],11],[[11,25,32],11],[[11,11],11],[[11,13,9,11],18],[[11,17,9,11],18],[[11,11,11,17,32],11],[[11,11],11],[[11,11,11],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",485],[15,"tuple"],[3,"itimerval",0],[3,"timespec",0],[3,"timeval",0],[3,"Formatter",486],[6,"Result",486],[15,"never"],[15,"usize"],[15,"i64"],[15,"i32"],[15,"u64"],[15,"u8"],[15,"u32"],[15,"u16"],[6,"Tid",0],[4,"c_void",487],[15,"isize"],[3,"SpinlockContainer",0],[3,"SpinlockIrqSaveContainer",0],[4,"Result",488],[3,"TypeId",489],[3,"in_addr",276],[3,"in6_addr",276],[3,"sockaddr",276],[3,"sockaddr_in",276],[3,"sockaddr_in6",276],[3,"ip_mreq",276],[3,"ipv6_mreq",276],[3,"addrinfo",276],[3,"linger",276],[6,"socklen_t",276]],"b":[]},\
"hermit_entry":{"doc":"RustyHermit’s entry API.","t":"GCAOADGDNDNEDGDNMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMMRRRRRRRRRRR","n":["Entry","_Note","boot_info","define_entry_version","fc","BootInfo","DeviceTreeAddress","HardwareInfo","LinuxBootParams","LoadInfo","Multiboot","PlatformInfo","RawBootInfo","SerialPortBase","TlsInfo","Uhyve","align","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","device_tree","filesz","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hardware_info","into","into","into","into","into","into","kernel_image_addr_range","load_info","memsz","phys_addr_range","platform_info","serial_port_base","start","tls_info","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","boot_params_addr","boot_time","command_line","command_line","cpu_freq","has_pci","multiboot_info_addr","num_cpus","BOOT_FLAG_OFFSET","CMD_LINE_PTR_OFFSET","CMD_LINE_SIZE_OFFSET","E820_ENTRIES_OFFSET","E820_TABLE_OFFSET","HDR_MAGIC_OFFSET","LINUX_KERNEL_BOOT_FLAG_MAGIC","LINUX_KERNEL_HRD_MAGIC","LINUX_SETUP_HEADER_OFFSET","RAMDISK_IMAGE_OFFSET","RAMDISK_SIZE_OFFSET"],"q":[[0,"hermit_entry"],[5,"hermit_entry::boot_info"],[79,"hermit_entry::boot_info::PlatformInfo"],[87,"hermit_entry::fc"],[98,"core::fmt"],[99,"core::fmt"],[100,"core::any"]],"d":["Kernel entry point.","","Creating and reading <code>RawBootInfo</code> from <code>Entry</code>.","Defines the hermit entry version in the note section.","Offsets and values used to interpret the boot params (“…","Boot information.","Device tree address","Hardware information.","Linux Boot Parameters.","Load information.","Multiboot.","Platform information.","The raw boot information struct.","Serial I/O port.","Thread local storage (TLS) image information.","Uhyve.","<code>align</code> of the TLS program header.","","","","","","","","","","","","","","","Address of the device tree","<code>filesz</code> of the TLS program header.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hardware information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The virtual address range of the loaded kernel image.","Load information.","<code>memsz</code> of the TLS program header.","The range of all possible physical memory addresses.","Platform information.","Serial port base address.","The start address of the TLS image.","Kernel image TLS information.","","","","","","","","","","","","","","","","","","","Address to Linux boot parameters.","Boot time.","Command line passed to the kernel.","Command line passed to the kernel.","CPU frequency in kHz.","PCI support.","Multiboot boot information address.","Total number of CPUs available.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,8,0,8,0,0,0,0,8,1,3,6,7,8,1,2,3,6,7,8,1,2,1,2,6,1,3,6,7,8,1,2,3,3,6,7,8,1,2,3,3,6,7,8,1,2,7,3,1,6,3,6,1,7,3,6,7,8,1,2,3,6,7,8,1,2,3,6,7,8,1,2,11,12,13,11,12,12,13,12,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],0,0,[[3,4],5],[[6,4],5],[[7,4],5],[[8,4],5],[[1,4],5],[[2,4],5],[2,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],[-1,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"TlsInfo",5],[3,"RawBootInfo",5],[3,"BootInfo",5],[3,"Formatter",98],[6,"Result",98],[3,"HardwareInfo",5],[3,"LoadInfo",5],[4,"PlatformInfo",5],[4,"Result",99],[3,"TypeId",100],[13,"LinuxBootParams",79],[13,"Uhyve",79],[13,"Multiboot",79]],"b":[]},\
"hermit_sync":{"doc":"Overview","t":"DDDGGGGGGGGGGDGGDDDGGGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["CallOnce","CallOnceError","ExclusiveCell","InterruptLazy","InterruptMutex","InterruptMutexGuard","InterruptOnceCell","InterruptSpinMutex","InterruptSpinMutexGuard","InterruptTicketMutex","InterruptTicketMutexGuard","Lazy","OnceCell","RawInterruptMutex","RawInterruptSpinMutex","RawInterruptTicketMutex","RawRwSpinLock","RawSpinMutex","RawTicketMutex","RwSpinLock","RwSpinLockReadGuard","RwSpinLockUpgradableReadGuard","RwSpinLockWriteGuard","SpinMutex","SpinMutexGuard","TicketMutex","TicketMutexGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","call_once","default","default","downgrade","downgrade_to_upgradable","downgrade_upgradable","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_mut","into","into","into","into","into","into","into","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_taken","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","take","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_shared","try_lock_shared_recursive","try_lock_upgradable","try_upgrade","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock","unlock_exclusive","unlock_fair","unlock_shared","unlock_upgradable","upgrade","was_called","without_interrupts"],"q":[[0,"hermit_sync"],[125,"core::result"],[126,"core::default"],[127,"core::fmt"],[128,"core::fmt"],[129,"lock_api::mutex"],[130,"core::option"],[131,"core::any"],[132,"core::ops::function"]],"d":["A synchronization primitive that can only be called once …","The <code>CallOnceError</code> error indicates that <code>CallOnce::call_once</code> …","A synchronization primitive which can be accessed only …","A <code>generic_once_cell::Lazy</code>, initialized using …","A <code>lock_api::Mutex</code> based on <code>RawInterruptMutex</code>.","A <code>lock_api::MutexGuard</code> based on <code>RawInterruptMutex</code>.","A <code>generic_once_cell::OnceCell</code>, initialized using …","A <code>lock_api::Mutex</code> based on <code>RawInterruptSpinMutex</code>.","A <code>lock_api::MutexGuard</code> based on <code>RawInterruptSpinMutex</code>.","A <code>lock_api::Mutex</code> based on <code>RawInterruptTicketMutex</code>.","A <code>lock_api::MutexGuard</code> based on <code>RawInterruptTicketMutex</code>.","A <code>generic_once_cell::Lazy</code>, initialized using <code>RawSpinMutex</code>.","A <code>generic_once_cell::OnceCell</code>, initialized using …","An interrupt-safe mutex.","An interrupt-safe <code>RawSpinMutex</code>.","An interrupt-safe <code>RawTicketMutex</code>.","A simple spinning, read-preferring readers-writer lock …","A simple test and test-and-set spinlock with exponential …","A fair ticket lock with exponential backoff.","A <code>lock_api::RwLock</code> based on <code>RawRwSpinLock</code>.","A <code>lock_api::RwLockReadGuard</code> based on <code>RawRwSpinLock</code>.","A <code>lock_api::RwLockUpgradableReadGuard</code> based on …","A <code>lock_api::RwLockWriteGuard</code> based on <code>RawRwSpinLock</code>.","A <code>lock_api::Mutex</code> based on <code>RawSpinMutex</code>.","A <code>lock_api::MutexGuard</code> based on <code>RawSpinMutex</code>.","A <code>lock_api::Mutex</code> based on <code>RawTicketMutex</code>.","A <code>lock_api::MutexGuard</code> based on <code>RawTicketMutex</code>.","","","","","","","","","","","","","","","","Mark this <code>CallOnce</code> as called.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the value.","","","","","","Returns <code>true</code> if the mutable reference has been taken.","","","","","","","","Creates a new <code>CallOnce</code>.","Creates a new <code>ExclusiveCell</code> containing the given value.","Takes the mutable reference to the wrapped value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>call_once</code> has been called.","Run a closure with disabled interrupts."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,3,4,6,17,1,8,14,3,4,6,17,1,8,1,3,3,6,8,8,8,3,4,4,6,14,3,4,6,6,6,17,1,8,6,14,3,4,6,17,1,8,6,14,17,1,8,8,6,14,17,1,8,8,8,8,3,6,6,14,3,4,6,17,1,8,14,3,4,6,17,1,8,14,17,1,8,8,8,8,8,14,3,4,6,17,1,8,14,17,1,8,1,8,8,8,3,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,[[5,[2,4]]]],[[],3],[[],[[6,[-1]]],7],[8,2],[8,2],[8,2],[[3,9],[[5,[2,10]]]],[[4,9],[[5,[2,10]]]],[[4,9],[[5,[2,10]]]],[[[6,[-1]],9],[[5,[2,10]]],[11,12]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,-1,[]],[-1,[[6,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[6,[-1]]],-1,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],-1,[]],[[[14,[-1]]],15,16],[17,15],[1,15],[8,15],[8,15],[[[6,[-1]]],15,12],[[[14,[-1]]],2,16],[17,2],[1,2],[8,2],[8,2],[8,2],[8,2],[[],3],[-1,[[6,[-1]]],[]],[[[6,[-1]]],[[18,[-1]]],12],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[14,[-1]]],15,16],[17,15],[1,15],[8,15],[8,15],[8,15],[8,15],[8,15],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[[14,[-1]]],2,16],[17,2],[1,2],[8,2],[1,2],[8,2],[8,2],[8,2],[3,15],[-1,-2,20,[]]],"c":[],"p":[[3,"RawTicketMutex",0],[15,"tuple"],[3,"CallOnce",0],[3,"CallOnceError",0],[4,"Result",125],[3,"ExclusiveCell",0],[8,"Default",126],[3,"RawRwSpinLock",0],[3,"Formatter",127],[3,"Error",127],[8,"Debug",127],[8,"Sized",128],[15,"never"],[3,"RawInterruptMutex",0],[15,"bool"],[8,"RawMutex",129],[3,"RawSpinMutex",0],[4,"Option",130],[3,"TypeId",131],[8,"FnOnce",132]],"b":[[49,"impl-Display-for-CallOnceError"],[50,"impl-Debug-for-CallOnceError"]]},\
"interrupts":{"doc":"Cross-architecture utilities for temporarily disabling …","t":"DLLFLLLLLLF","n":["Guard","borrow","borrow_mut","disable","drop","from","into","try_from","try_into","type_id","without"],"q":[[0,"interrupts"],[11,"core::result"],[12,"core::any"],[13,"core::ops::function"]],"d":["An interrupt guard.","","","Temporarily disable interrupts.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Run a closure with disabled interrupts."],"i":[0,1,1,0,1,1,1,1,1,1,0],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[1,2],[-1,-1,[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,4,[]],[-1,-2,5,[]]],"c":[],"p":[[3,"Guard",0],[15,"tuple"],[4,"Result",11],[3,"TypeId",12],[8,"FnOnce",13]],"b":[]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","make_guard_unchecked","make_guard_unchecked","make_read_guard_unchecked","make_upgradable_guard_unchecked","make_write_guard_unchecked","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"],[372,"core::marker"],[373,"core::default"],[374,"core::fmt"],[375,"core::fmt"],[376,"core::num::nonzero"],[377,"core::result"],[378,"core::option"],[379,"core::any"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Creates a new <code>MutexGuard</code> without checking if the mutex is …","Creates a new <code>ReentrantMutexGuard</code> without checking if the …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Creates a new <code>RwLockUpgradableReadGuard</code> without checking …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[37,38,0,16,17,0,0,16,4,2,17,37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,3,3,2,5,7,8,10,11,9,9,9,9,12,12,13,14,15,13,14,15,13,14,15,5,19,7,20,8,10,11,22,23,5,19,10,23,24,10,11,25,10,25,5,19,7,20,8,10,11,22,23,13,14,15,5,5,19,19,7,7,20,20,8,8,10,10,11,11,22,22,23,23,13,14,13,14,15,15,15,15,42,43,13,13,13,2,14,14,14,15,15,15,5,19,7,20,8,10,11,22,23,13,14,15,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,13,14,15,16,16,13,2,14,17,17,15,17,17,15,2,14,5,16,13,2,14,17,17,34,21,13,14,15,15,15,5,19,7,20,8,10,22,23,5,13,14,15,4,13,14,15,15,15,7,8,10,11,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,16,13,2,14,17,38,38,37,13,2,14,17,38,34,39,39,38,37,13,2,14,21,40,40,5,19,7,20,8,10,22,23,15,15,15,15,15,15,15,15,15,21,11,40,11,40,11,11,11,11,15,15,15,42,43,13,2,14,15,5,19,7,20,8,10,11,22,23,16,2,17,9,3,2,5,19,7,20,8,10,11,22,23,17,9,21,12,5,7,8,10,11,5,7,8,10,11,15,21,11,11,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,1,[]],[-1,1,[]],[[[2,[-1,-2]]],1,3,4],[[[5,[-1,-2]]],1,3,6],[[[7,[-1,-2,-3]]],1,3,4,6],[[[8,[-1,-2]]],1,9,6],[[[10,[-1,-2]]],1,9,6],[[[11,[-1,-2]]],1,12,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[-1,-2],[[13,[-1,-2]]],[],[]],[[-1,-2,-3],[[14,[-1,-2,-3]]],[],[],[]],[[-1,-2],[[15,[-1,-2]]],[],[]],[[[13,[-1,-2]]],[],16,6],[[[14,[-1,-2,-3]]],[],16,4,6],[[[15,[-1,-2]]],[],17,6],[[],[[13,[-1,-2]]],16,[6,18]],[[],[[14,[-1,-2,-3]]],16,4,[6,18]],[[],[[15,[-1,-2]]],17,[6,18]],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[7,[-1,-2,-3]]],-3,16,4,6],[[[20,[-1,-2,-3]]],-3,16,4,6],[[[8,[-1,-2]]],-2,17,6],[[[10,[-1,-2]]],-2,17,6],[[[11,[-1,-2]]],-2,21,6],[[[22,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[[[5,[-1,-2]]],-2,16,6],[[[19,[-1,-2]]],-2,16,6],[[[10,[-1,-2]]],-2,17,6],[[[23,[-1,-2]]],-2,17,6],[-1,1,[]],[[[10,[-1,-2]]],[[8,[-1,-2]]],24,6],[[[11,[-1,-2]]],[[8,[-1,-2]]],25,6],[-1,1,[]],[[[10,[-1,-2]]],[[11,[-1,-2]]],25,6],[-1,1,[]],[[[5,[-1,-2]]],1,16,6],[[[19,[-1,-2]]],1,16,6],[[[7,[-1,-2,-3]]],1,16,4,6],[[[20,[-1,-2,-3]]],1,16,4,6],[[[8,[-1,-2]]],1,17,6],[[[10,[-1,-2]]],1,17,6],[[[11,[-1,-2]]],1,21,6],[[[22,[-1,-2]]],1,17,6],[[[23,[-1,-2]]],1,17,6],[[[13,[-1,-2]],26],27,16,[6,28]],[[[14,[-1,-2,-3]],26],27,16,4,[6,28]],[[[15,[-1,-2]],26],27,17,[6,28]],[[[5,[-1,-2]],26],27,16,[28,6]],[[[5,[-1,-2]],26],27,16,[29,6]],[[[19,[-1,-2]],26],27,16,[28,6]],[[[19,[-1,-2]],26],27,16,[29,6]],[[[7,[-1,-2,-3]],26],27,16,4,[28,6]],[[[7,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[29,6]],[[[20,[-1,-2,-3]],26],27,16,4,[28,6]],[[[8,[-1,-2]],26],27,17,[29,6]],[[[8,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[28,6]],[[[10,[-1,-2]],26],27,17,[29,6]],[[[11,[-1,-2]],26],27,21,[28,6]],[[[11,[-1,-2]],26],27,21,[29,6]],[[[22,[-1,-2]],26],27,17,[28,6]],[[[22,[-1,-2]],26],27,17,[29,6]],[[[23,[-1,-2]],26],27,17,[28,6]],[[[23,[-1,-2]],26],27,17,[29,6]],[[[13,[-1,-2]]],1,16,6],[[[14,[-1,-2,-3]]],1,16,4,6],[[[13,[-1,-2]]],1,3,6],[[[14,[-1,-2,-3]]],1,3,4,6],[[[15,[-1,-2]]],1,17,6],[[[15,[-1,-2]]],1,9,6],[[[15,[-1,-2]]],1,17,6],[[[15,[-1,-2]]],1,9,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[13,[-2,-1]]],[],16],[30,-1,[]],[-1,-1,[]],[30,-1,[]],[-1,[[14,[-2,-3,-1]]],[],16,4],[-1,-1,[]],[-1,[[15,[-2,-1]]],[],17],[30,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1,-2]]],-2,16,6],[[[14,[-1,-2,-3]]],-3,16,4,6],[[[15,[-1,-2]]],-2,17,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],-2,16,[]],[[[14,[-1,-2,-3]]],-3,16,4,[]],[[[15,[-1,-2]]],-2,17,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],31,16,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],31,16,4,6],[-1,31,[]],[-1,31,[]],[[[15,[-1,-2]]],31,17,6],[-1,31,[]],[-1,31,[]],[[[15,[-1,-2]]],31,17,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],31,16,4,6],[[[5,[-1,-2]]],-2,16,6],[-1,1,[]],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[2,[-1,-2]]],1,16,4],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[13,[-1,-2]]],[[5,[-1,-2]]],16,6],[[[14,[-1,-2,-3]]],[[7,[-1,-2,-3]]],16,4,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6],[[[5,[-1,-2]],-3],[[19,[-1,-4]]],16,6,32,6],[[[19,[-1,-2]],-3],[[19,[-1,-4]]],16,6,32,6],[[[7,[-1,-2,-3]],-4],[[20,[-1,-2,-5]]],16,4,6,32,6],[[[20,[-1,-2,-3]],-4],[[20,[-1,-2,-5]]],16,4,6,32,6],[[[8,[-1,-2]],-3],[[22,[-1,-4]]],17,6,32,6],[[[10,[-1,-2]],-3],[[23,[-1,-4]]],17,6,32,6],[[[22,[-1,-2]],-3],[[22,[-1,-4]]],17,6,32,6],[[[23,[-1,-2]],-3],[[23,[-1,-4]]],17,6,32,6],[[[5,[-1,-2]]],[[13,[-1,-2]]],16,6],[-1,[[13,[-2,-1]]],[],16],[-1,[[14,[-2,-3,-1]]],[],16,4],[-1,[[15,[-2,-1]]],[],17],[-1,33,[]],[[[13,[-1,-2]]],-1,16,6],[[[14,[-1,-2,-3]]],-1,16,4,6],[[[15,[-1,-2]]],-1,17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],17,6],[[[15,[-1,-2]]],[[8,[-1,-2]]],34,6],[[[7,[-1,-2,-3]]],[[14,[-1,-2,-3]]],16,4,6],[[[8,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[10,[-1,-2]]],[[15,[-1,-2]]],17,6],[[[11,[-1,-2]]],[[15,[-1,-2]]],21,6],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,[[35,[-2]]],[],[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],16,6],[[[2,[-1,-2]]],31,16,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],16,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],37,6],[[[2,[-1,-2]]],31,37,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],37,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[13,[-1,-2]]],[[36,[[5,[-1,-2]]]]],37,6],[[[2,[-1,-2]]],31,37,4],[[[14,[-1,-2,-3]]],[[36,[[7,[-1,-2,-3]]]]],37,4,6],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[5,[-1,-2]],-3],[[35,[[19,[-1,-4]],[5,[-1,-2]]]]],16,6,32,6],[[[19,[-1,-2]],-3],[[35,[[19,[-1,-4]],[19,[-1,-2]]]]],16,6,32,6],[[[7,[-1,-2,-3]],-4],[[35,[[20,[-1,-2,-5]],[7,[-1,-2,-3]]]]],16,4,6,32,6],[[[20,[-1,-2,-3]],-4],[[35,[[20,[-1,-2,-5]],[20,[-1,-2,-3]]]]],16,4,6,32,6],[[[8,[-1,-2]],-3],[[35,[[22,[-1,-4]],[8,[-1,-2]]]]],17,6,32,6],[[[10,[-1,-2]],-3],[[35,[[23,[-1,-4]],[10,[-1,-2]]]]],17,6,32,6],[[[22,[-1,-2]],-3],[[35,[[22,[-1,-4]],[22,[-1,-2]]]]],17,6,32,6],[[[23,[-1,-2]],-3],[[35,[[23,[-1,-4]],[23,[-1,-2]]]]],17,6,32,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],34,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],39,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],39,6],[[[15,[-1,-2]]],[[36,[[8,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],21,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],40,6],[[[15,[-1,-2]]],[[36,[[11,[-1,-2]]]]],40,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],21,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],40,6],[-1,31,[]],[[[11,[-1,-2]]],[[35,[[10,[-1,-2]],[11,[-1,-2]]]]],40,6],[[[11,[-1,-2]],-3],[[36,[-4]]],25,6,32,[]],[[[11,[-1,-2]],-3],[[36,[-4]]],[40,25],6,32,[]],[[[11,[-1,-2]],-3],[[36,[-4]]],[40,25],6,32,[]],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],17,6],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],38,6],[[[15,[-1,-2]]],[[36,[[10,[-1,-2]]]]],38,6],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,1,[]],[[[2,[-1,-2]]],1,16,4],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[2,[-1,-2]]],1,3,4],[[[5,[-1,-2]]],1,3,6],[[[19,[-1,-2]]],1,3,6],[[[7,[-1,-2,-3]]],1,3,4,6],[[[20,[-1,-2,-3]]],1,3,4,6],[[[8,[-1,-2]]],1,9,6],[[[10,[-1,-2]]],1,9,6],[[[11,[-1,-2]]],1,12,6],[[[22,[-1,-2]]],1,9,6],[[[23,[-1,-2]]],1,9,6],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[[5,[-1,-2]],-3],-4,16,6,32,[]],[[[7,[-1,-2,-3]],-4],-5,16,4,6,32,[]],[[[8,[-1,-2]],-3],-4,17,6,32,[]],[[[10,[-1,-2]],-3],-4,17,6,32,[]],[[[11,[-1,-2]],-3],-4,21,6,32,[]],[[[5,[-1,-2]],-3],-4,3,6,32,[]],[[[7,[-1,-2,-3]],-4],-5,3,4,6,32,[]],[[[8,[-1,-2]],-3],-4,9,6,32,[]],[[[10,[-1,-2]],-3],-4,9,6,32,[]],[[[11,[-1,-2]],-3],-4,12,6,32,[]],[[[15,[-1,-2]]],[[11,[-1,-2]]],21,6],[-1,1,[]],[[[11,[-1,-2]]],[[10,[-1,-2]]],21,6],[[[11,[-1,-2]],-3],-4,25,6,32,[]],[[[15,[-1,-2]]],[[10,[-1,-2]]],17,6]],"c":[],"p":[[15,"tuple"],[3,"RawReentrantMutex",0],[8,"RawMutexFair",0],[8,"GetThreadId",0],[3,"MutexGuard",0],[8,"Sized",372],[3,"ReentrantMutexGuard",0],[3,"RwLockReadGuard",0],[8,"RawRwLockFair",0],[3,"RwLockWriteGuard",0],[3,"RwLockUpgradableReadGuard",0],[8,"RawRwLockUpgradeFair",0],[3,"Mutex",0],[3,"ReentrantMutex",0],[3,"RwLock",0],[8,"RawMutex",0],[8,"RawRwLock",0],[8,"Default",373],[3,"MappedMutexGuard",0],[3,"MappedReentrantMutexGuard",0],[8,"RawRwLockUpgrade",0],[3,"MappedRwLockReadGuard",0],[3,"MappedRwLockWriteGuard",0],[8,"RawRwLockDowngrade",0],[8,"RawRwLockUpgradeDowngrade",0],[3,"Formatter",374],[6,"Result",374],[8,"Debug",374],[8,"Display",374],[15,"never"],[15,"bool"],[8,"FnOnce",375],[3,"NonZeroUsize",376],[8,"RawRwLockRecursive",0],[4,"Result",377],[4,"Option",378],[8,"RawMutexTimed",0],[8,"RawRwLockTimed",0],[8,"RawRwLockRecursiveTimed",0],[8,"RawRwLockUpgradeTimed",0],[3,"TypeId",379],[3,"GuardSend",0],[3,"GuardNoSend",0]],"b":[[123,"impl-Debug-for-MutexGuard%3C\'a,+R,+T%3E"],[124,"impl-Display-for-MutexGuard%3C\'a,+R,+T%3E"],[125,"impl-Debug-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[126,"impl-Display-for-MappedMutexGuard%3C\'a,+R,+T%3E"],[127,"impl-Debug-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[128,"impl-Display-for-ReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[129,"impl-Display-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[130,"impl-Debug-for-MappedReentrantMutexGuard%3C\'a,+R,+G,+T%3E"],[131,"impl-Display-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[132,"impl-Debug-for-RwLockReadGuard%3C\'a,+R,+T%3E"],[133,"impl-Debug-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[134,"impl-Display-for-RwLockWriteGuard%3C\'a,+R,+T%3E"],[135,"impl-Debug-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[136,"impl-Display-for-RwLockUpgradableReadGuard%3C\'a,+R,+T%3E"],[137,"impl-Debug-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[138,"impl-Display-for-MappedRwLockReadGuard%3C\'a,+R,+T%3E"],[139,"impl-Debug-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"],[140,"impl-Display-for-MappedRwLockWriteGuard%3C\'a,+R,+T%3E"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,21,4,4,6,6,8,7,11,0,1,3,1,3,21,4,4,6,6,1,3,8,7,16,16,11,11,4,6,1,3,8,7,16,11,4,6,4,6,8,7,0,4,6,1,3,8,7,16,11,4,6,1,3,8,7,1,3,21,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,4,6,1,3,8,7,16,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[[-1,8],10,[]],[[4,4],10],[[4,6],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[-1,13,[]],[[4,14],15],[[4,14],15],[[6,14],15],[[6,14],15],[[1,14],15],[[3,14],15],[[8,14],15],[[7,14],15],[[16,14],15],[[16,14],15],[[11,14],15],[[11,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[17,[4]]]],[5,[[17,[6]]]],[[4,-1],13,18],[[6,-1],13,18],[[8,-1],13,18],[[7,-1],13,18],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[19]]]],[[],[[0,[19]]]],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[20]]]],[[3,[12,[20]]],3],[[-1,1],13,[]],0,0,[[],21],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[21,[[17,[13,16]]]],[21,[[17,[13,16]]]],[6,13],[6,13],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],0],"c":[],"p":[[3,"Record",0],[3,"Arguments",170],[3,"RecordBuilder",0],[4,"Level",0],[15,"str"],[4,"LevelFilter",0],[3,"MetadataBuilder",0],[3,"Metadata",0],[4,"Ordering",171],[15,"bool"],[3,"ParseLevelError",0],[4,"Option",172],[15,"tuple"],[3,"Formatter",170],[6,"Result",170],[3,"SetLoggerError",0],[4,"Result",173],[8,"Hasher",174],[8,"Iterator",175],[15,"u32"],[8,"Log",0],[3,"TypeId",176]],"b":[[57,"impl-PartialEq-for-Level"],[58,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[59,"impl-PartialEq-for-LevelFilter"],[60,"impl-PartialEq%3CLevel%3E-for-LevelFilter"],[70,"impl-Display-for-Level"],[71,"impl-Debug-for-Level"],[72,"impl-Debug-for-LevelFilter"],[73,"impl-Display-for-LevelFilter"],[78,"impl-Debug-for-SetLoggerError"],[79,"impl-Display-for-SetLoggerError"],[80,"impl-Debug-for-ParseLevelError"],[81,"impl-Display-for-ParseLevelError"],[128,"impl-PartialOrd%3CLevelFilter%3E-for-Level"],[129,"impl-PartialOrd-for-Level"],[130,"impl-PartialOrd%3CLevel%3E-for-LevelFilter"],[131,"impl-PartialOrd-for-LevelFilter"]]},\
"managed":{"doc":"A library that provides a way to logically own objects, …","t":"NNNNNEEEEENNNNNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Borrowed","Borrowed","Borrowed","Borrowed","Borrowed","Managed","ManagedMap","ManagedMapIter","ManagedMapIterMut","ManagedSlice","Owned","Owned","Owned","Owned","Owned","SlotIndex","SlotKey","SlotMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_mut","get_mut","hash","hash","insert","insert","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","iter_mut","len","new","next","next","range","remove","remove","reserve","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"managed"],[156,"core::cmp"],[157,"core::marker"],[158,"core::fmt"],[159,"core::fmt"],[160,"alloc::boxed"],[161,"alloc::collections::btree::map"],[162,"core::option"],[163,"core::borrow"],[164,"core::hash"],[165,"core::result"],[166,"core::ops::range"],[167,"core::any"]],"d":["Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","Borrowed variant.","A managed object.","A managed map.","","","A managed slice.","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Owned variant, only available with the <code>std</code> or <code>alloc</code> …","Provides links between slots and elements.","An index into a slotmap.","Provides a slotmap based on external memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a value by index.","","Retrieve a mutable value by index.","","","","Try to insert a value into the map.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","ManagedMap contains no elements?","","","Returns the number of elements in the ManagedMap.","Create a slot map.","","","","Remove an element.","","Reserve a new entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,8,1,23,24,0,0,0,0,0,6,8,1,23,24,0,0,0,6,8,19,1,23,24,4,5,6,8,19,1,23,24,4,5,1,4,5,4,5,4,5,6,8,6,8,4,5,6,8,1,4,5,6,6,6,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,19,1,1,1,23,24,4,5,19,1,19,1,4,5,19,1,6,8,19,1,23,24,4,5,23,24,1,1,1,1,19,23,24,1,19,1,19,23,24,4,5,6,8,19,1,23,24,4,5,6,8,19,1,23,24,4,5,6,8,19,1,23,24,4,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],2,3,[]],[4,4],[5,5],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],4],[[],5],[[[6,[-1]]],[],7],[[[8,[-1]]],[],[]],[[[6,[-1]]],[],7],[[[8,[-1]]],[],[]],[[4,4],9],[[5,5],9],[[[6,[-1]],10],11,[12,7]],[[[8,[-1]],10],11,12],[[[1,[-1,-2]],10],11,12,12],[[4,10],11],[[5,10],11],[[[13,[-1]]],[[6,[[14,[-1]]]]],[]],[-1,-1,[]],[[[15,[-1]]],[[6,[-1]]],7],[-1,[[6,[-1]]],7],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[-1,-1,[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[13,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[14,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[[[16,[-1]]],[[8,[-1]]],[]],[-1,-1,[]],[[[17,[-1,-2]]],[[1,[-1,-2]]],[],[]],[[[14,[[18,[[2,[-1,-2]]]]]]],[[1,[-1,-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[19,[-1]],5],[[18,[-1]]],[]],[[[1,[-2,-3]],-1],[[18,[-3]]],[3,7],[[20,[-1]],3],[]],[[[19,[-1]],5],[[18,[-1]]],[]],[[[1,[-2,-3]],-1],[[18,[-3]]],[3,7],[[20,[-1]],3],[]],[[4,-1],2,21],[[5,-1],2,21],[[[19,[-1]],-1],[[18,[5]]],[]],[[[1,[-1,-2]],-1,-2],[[22,[[18,[-2]],[2,[-1,-2]]]]],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],9,3,[]],[[[1,[-1,-2]]],[[23,[-1,-2]]],3,[]],[[[1,[-1,-2]]],[[24,[-1,-2]]],3,[]],[[[1,[-1,-2]]],25,3,[]],[[[8,[-1]],[8,[4]]],[[19,[-1]]],[]],[[[23,[-1,-2]]],18,3,[]],[[[24,[-1,-2]]],18,3,[]],[[[1,[-2,-3]],-4],[[0,[-2,-3]]],[3,7],[[20,[-1]],3],[],[[26,[-1]]]],[[[19,[-1]],5],[[18,[-1]]],[]],[[[1,[-2,-3]],-1],[[18,[-3]]],[3,7],[[20,[-1]],3],[]],[[[19,[-1]]],[[18,[[2,[5,-1]]]]],[]],[[[23,[-1,-2]]],[[2,[25,[18,[25]]]]],3,[]],[[[24,[-1,-2]]],[[2,[25,[18,[25]]]]],3,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]]],"c":[],"p":[[4,"ManagedMap",0],[15,"tuple"],[8,"Ord",156],[3,"SlotIndex",0],[3,"SlotKey",0],[4,"Managed",0],[8,"Sized",157],[4,"ManagedSlice",0],[15,"bool"],[3,"Formatter",158],[6,"Result",158],[8,"Debug",158],[3,"Vec",159],[15,"slice"],[3,"Box",160],[15,"array"],[3,"BTreeMap",161],[4,"Option",162],[3,"SlotMap",0],[8,"Borrow",163],[8,"Hasher",164],[4,"Result",165],[4,"ManagedMapIter",0],[4,"ManagedMapIterMut",0],[15,"usize"],[8,"RangeBounds",166],[3,"TypeId",167]],"b":[[52,"impl-From%3CVec%3CT%3E%3E-for-Managed%3C\'a,+%5BT%5D%3E"],[54,"impl-From%3CBox%3CT%3E%3E-for-Managed%3C\'a,+T%3E"],[55,"impl-From%3C%26mut+T%3E-for-Managed%3C\'a,+T%3E"],[56,"impl-From%3C%5BT;+10%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[57,"impl-From%3C%5BT;+5%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[58,"impl-From%3C%5BT;+29%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[59,"impl-From%3C%5BT;+1%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[60,"impl-From%3C%5BT;+16%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[61,"impl-From%3C%5BT;+3%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[62,"impl-From%3C%5BT;+15%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[63,"impl-From%3C%5BT;+2%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[64,"impl-From%3C%5BT;+8%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[66,"impl-From%3C%5BT;+26%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[67,"impl-From%3C%5BT;+0%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[68,"impl-From%3CVec%3CT%3E%3E-for-ManagedSlice%3C\'a,+T%3E"],[69,"impl-From%3C%5BT;+17%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[70,"impl-From%3C%5BT;+11%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[71,"impl-From%3C%5BT;+30%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[72,"impl-From%3C%5BT;+21%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[73,"impl-From%3C%5BT;+22%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[74,"impl-From%3C%5BT;+9%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[75,"impl-From%3C%5BT;+13%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[76,"impl-From%3C%26mut+%5BT%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[77,"impl-From%3C%5BT;+4%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[78,"impl-From%3C%5BT;+19%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[79,"impl-From%3C%5BT;+24%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[80,"impl-From%3C%5BT;+27%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[81,"impl-From%3C%5BT;+14%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[82,"impl-From%3C%5BT;+18%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[83,"impl-From%3C%5BT;+7%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[84,"impl-From%3C%5BT;+28%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[85,"impl-From%3C%5BT;+25%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[86,"impl-From%3C%5BT;+6%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[87,"impl-From%3C%5BT;+12%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[88,"impl-From%3C%5BT;+31%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[89,"impl-From%3C%5BT;+23%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[90,"impl-From%3C%5BT;+20%5D%3E-for-ManagedSlice%3C\'a,+T%3E"],[92,"impl-From%3CBTreeMap%3CK,+V%3E%3E-for-ManagedMap%3C\'a,+K,+V%3E"],[93,"impl-From%3C%26mut+%5BOption%3C(K,+V)%3E%5D%3E-for-ManagedMap%3C\'a,+K,+V%3E"]]},\
"multiboot":{"doc":"Multiboot v1 library","t":"AADNRDDNELLLLLLLLMLLLLLLMLLLLLLLLLLLLLLMMMLLLLMMLLLLLLLLLLLLLLLLLLLMNNDNDDDENNDDDIDEDDDDNGNNNRENMKLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLKLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLKMLMLMLMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["header","information","Header","LinearGraphics","MULTIBOOT_HEADER_MAGIC","MultibootAddresses","MultibootVideoMode","TextMode","VideoModeType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bss_end_address","clone","clone","clone","clone","compute_load_offset","depth","entry_address","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_slice","get_addresses","get_preferred_video_mode","has_multiboot_addresses","has_video_mode","header_address","header_start","height","into","into","into","into","load_address","load_end_address","mode_type","set_has_multiboot_addresses","set_has_video_mode","set_wants_memory_information","set_wants_modules_page_aligned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wants_memory_information","wants_modules_page_aligned","width","ACPI","AOut","AOutSymbols","Available","BootDevice","ColorInfoPalette","ColorInfoRgb","ColorInfoType","Defect","Elf","ElfSymbols","FramebufferTable","MemoryEntry","MemoryManagement","MemoryMapIter","MemoryType","Module","ModuleIter","Multiboot","MultibootInfo","NVS","PAddr","Palette","Reserved","Rgb","SIGNATURE_EAX","SymbolType","Text","addr","allocate","base_address","blue_field_position","blue_mask_size","boot_device","boot_loader_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","clone","clone","clone","clone","clone","clone","clone","color_info","command_line","deallocate","default","default","default","default","default","default","drive","end","eq","find_highest_address","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer_table","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_addr","from_ptr","from_ref","green_field_position","green_mask_size","has_aout_symbols","has_apm_table","has_boot_device","has_boot_loader_name","has_cmdline","has_config_table","has_drives","has_elf_symbols","has_framebuffer_table","has_memory_bounds","has_memory_map","has_modules","has_vbe","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","length","lower_memory_bound","memory_regions","memory_type","modules","new","new","new","next","next","paddr_to_slice","partition1","partition1_is_valid","partition2","partition2_is_valid","partition3","partition3_is_valid","pitch","red_field_position","red_mask_size","set_boot_loader_name","set_command_line","set_framebuffer_table","set_has_aout_symbols","set_has_apm_table","set_has_boot_device","set_has_boot_loader_name","set_has_cmdline","set_has_config_table","set_has_drives","set_has_elf_symbols","set_has_framebuffer_table","set_has_memory_bounds","set_has_memory_map","set_has_modules","set_has_vbe","set_memory_bounds","set_memory_regions","set_modules","set_symbols","start","string","symbols","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper_memory_bound","width"],"q":[[0,"multiboot"],[2,"multiboot::header"],[68,"multiboot::information"],[307,"core::option"],[308,"core::fmt"],[309,"core::fmt"],[310,"core::any"]],"d":["This module contains the pieces for parsing Multiboot …","This modules contains the pieces for parsing and creating …","Multiboot struct bootloaders mainly interact with","","","Addresses specified in the Multiboot header","Preferred video mode specified in the Multiboot header","","Preferred video mode type","","","","","","","","","","","","","","Compute the offset of the load address into the binary.","Get the preferred depth, if possible.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the header by parsing it from a slice.","Get the load addresses specified in the Multiboot header.","Get the preferred video mode specified in the Multiboot …","If true, then the <code>header_addr</code>, <code>load_addr</code>, <code>load_end_addr</code>, …","If true, then the <code>mode_type</code>, <code>width</code>, <code>height</code> and <code>depth</code> …","","the index at which the header starts","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Get the preferred video mode type","If true, then the <code>header_addr</code>, <code>load_addr</code>, <code>load_end_addr</code>, …","If true, then the <code>mode_type</code>, <code>width</code>, <code>height</code> and <code>depth</code> …","If true, memory information must be passed.","If true, then the modules have to be page aligned.","","","","","","","","","","","","","If true, memory information must be passed.","If true, then the modules have to be page aligned.","","ACPI Reclaim Memory","","Multiboot format for AOut Symbols","memory, available to OS","The ‘boot_device’ field.","Information for indexed color mode","Information for direct RGB color mode","Safe wrapper for <code>ColorInfo</code>","defective RAM modules","","Multiboot format for ELF Symbols","Contains the information about the framebuffer","Multiboot format of the MMAP buffer.","Implement this trait to be able to get or set fields …","Used to iterate over all memory regions provided by …","Types that define if the memory is usable or not.","Information about a module in multiboot.","Used to iterate over all modules in multiboot.","Multiboot struct clients mainly interact with","Representation of Multiboot Information according to …","ACPI NVS Memory","","","reserved, not available (rom, mem map dev)","","Value found in %eax after multiboot jumps to our entry …","Safe wrapper for either <code>AOutSymbols</code> or <code>ElfSymbols</code>","","","Allocates <code>length</code> bytes.","Get base of memory region.","","","Indicates which bios disk device the boot loader loaded …","Get the name of the bootloader.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the color info from this table.","Command line passed to the kernel.","Free the previously allocated memory.","","","Get the “default” memory entry. (It’s 0 bytes and …","","","","Contains the bios drive number as understood by the bios …","End address of module in physic memory.","","Return end address of multiboot image.","","","","","","","","","","","","Return the framebuffer table, if it exists.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Uses a passed address for the symbols.","Initializes the multiboot structure from a passed address.","Initializes this struct from an already existing …","","","If true, then the <code>syms</code> field is valid and contains AOut …","If true, then the <code>apm_table</code> field is valid.","If true, then the <code>boot_device</code> field is valid.","If true, then the <code>boot_loader_name</code> field is valid.","If true, then the <code>cmdline</code> field is valid.","If true, then the <code>config_table</code> field is valid.","If true, then the <code>drives_addr</code> and <code>drives_length</code> fields are …","If true, then the <code>syms</code> field is valid and containts ELF …","If true, then the framebuffer table is valid.","If true, then the <code>mem_upper</code> and <code>mem_lower</code> fields are valid.","If true, then the <code>mmap_addr</code> and <code>mmap_length</code> fields are …","If true, then the <code>mods_addr</code> and <code>mods_count</code> fields are …","If true, then the <code>vbe_*</code> fields are valid.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Get size of the memory region.","Indicate the amount of lower memory in kilobytes.","Discover all memory regions in the multiboot memory map.","Is the region type valid RAM?","Discover all additional modules in multiboot.","Create a new entry from the given data.","","Create this table from a color info.","","","Translates physical addr + size into a kernel accessible …","Specifies the top-level partition number.","Is partition1 a valid partition?","Specifies a sub-partition in the top-level partition","Is partition2 a valid partition?","Specifies a sub-partition in the 2nd-level partition","Is partition3 a valid partition?","","","","Set the name of the bootloader.","Command line to be passed to the kernel.","Set the framebuffer table, if it exists.","If true, then the <code>syms</code> field is valid and contains AOut …","If true, then the <code>apm_table</code> field is valid.","If true, then the <code>boot_device</code> field is valid.","If true, then the <code>boot_loader_name</code> field is valid.","If true, then the <code>cmdline</code> field is valid.","If true, then the <code>config_table</code> field is valid.","If true, then the <code>drives_addr</code> and <code>drives_length</code> fields are …","If true, then the <code>syms</code> field is valid and containts ELF …","If true, then the framebuffer table is valid.","If true, then the <code>mem_upper</code> and <code>mem_lower</code> fields are valid.","If true, then the <code>mmap_addr</code> and <code>mmap_length</code> fields are …","If true, then the <code>mods_addr</code> and <code>mods_count</code> fields are …","If true, then the <code>vbe_*</code> fields are valid.","Sets the memory bounds (lower, upper).","Publish the memory regions to the kernel.","Publish modules to the kernel.","Set the symbols.","Start address of module in physical memory.","Name of the module.","Get the symbols.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate the amount of upper memory in kilobytes.",""],"i":[0,0,0,4,0,0,0,4,0,1,2,3,4,1,2,3,4,2,1,2,3,4,2,3,2,4,1,2,3,4,1,2,3,4,1,1,1,1,1,2,1,3,1,2,3,4,2,2,3,1,1,1,1,1,2,3,4,1,2,3,4,1,2,3,4,1,1,3,29,21,0,29,0,0,0,0,29,21,0,0,0,0,0,0,0,0,0,0,29,0,27,29,27,0,0,27,26,31,17,25,25,18,18,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,26,19,17,21,22,23,24,25,26,18,31,28,19,17,22,23,26,19,30,29,18,19,29,17,30,21,22,23,26,27,24,25,18,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,23,18,18,25,25,18,18,18,18,18,18,18,18,18,18,18,18,18,26,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,33,34,17,18,18,17,18,17,30,26,33,34,31,19,19,19,19,19,19,26,25,25,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,30,30,18,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,18,33,34,28,19,29,17,30,21,22,23,26,27,24,25,18,26],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[2,2],[3,3],[4,4],[[2,5],5],[3,[[6,[5]]]],0,[[4,4],7],[[1,8],9],[[2,8],9],[[3,8],9],[[4,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[11,[10]]],[[6,[1]]]],[1,[[6,[2]]]],[1,[[6,[3]]]],[1,7],[1,7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[3,[[6,[4]]]],[[1,7],12],[[1,7],12],[[1,7],12],[[1,7],12],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[1,7],[1,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,15],[[6,[[12,[16,[11,[10]]]]]]],[]],[17,16],0,0,[18,[[6,[19]]]],[18,[[6,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[19,19],[17,17],[21,21],[22,22],[23,23],[24,24],[25,25],[26,[[6,[27]]]],[18,[[6,[20]]]],[[-1,16],12,[]],[[],28],[[],19],[[],17],[[],22],[[],23],[[],26],0,0,[[29,29],7],[18,16],[[19,8],9],[[29,8],9],[[17,8],9],[[30,8],9],[[21,8],9],[[22,8],9],[[23,8],9],[[26,8],9],[[27,8],9],[[24,8],9],[[25,8],9],[18,[[6,[26]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[5,5,16,5],23],[[16,31],[[6,[18]]]],[[28,31],18],0,0,[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],[18,7],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,32],[18,[[6,[5]]]],[18,[[6,[33]]]],[17,29],[18,[[6,[34]]]],[[16,16,29],17],[[16,16,[6,[20]]],30],[[32,5,5,5,10,27],26],[33,[[6,[17]]]],[34,[[6,[30]]]],[[-1,16,15],[[6,[[11,[10]]]]],[]],0,[19,7],0,[19,7],0,[19,7],0,0,0,[[18,[6,[20]]],12],[[18,[6,[20]]],12],[[18,[6,[26]]],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,7],12],[[18,[6,[[12,[5,5]]]]],12],[[18,[6,[[12,[16,15]]]]],12],[[18,[6,[[11,[30]]]]],12],[[18,[6,[21]]],12],0,0,[18,[[6,[21]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[18,[[6,[5]]]],0],"c":[],"p":[[3,"Header",2],[3,"MultibootAddresses",2],[3,"MultibootVideoMode",2],[4,"VideoModeType",2],[15,"u32"],[4,"Option",307],[15,"bool"],[3,"Formatter",308],[6,"Result",308],[15,"u8"],[15,"slice"],[15,"tuple"],[4,"Result",309],[3,"TypeId",310],[15,"usize"],[6,"PAddr",68],[3,"MemoryEntry",68],[3,"Multiboot",68],[3,"BootDevice",68],[15,"str"],[4,"SymbolType",68],[3,"AOutSymbols",68],[3,"ElfSymbols",68],[3,"ColorInfoPalette",68],[3,"ColorInfoRgb",68],[3,"FramebufferTable",68],[4,"ColorInfoType",68],[3,"MultibootInfo",68],[4,"MemoryType",68],[3,"Module",68],[8,"MemoryManagement",68],[15,"u64"],[3,"MemoryMapIter",68],[3,"ModuleIter",68]],"b":[]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":"IIIIIDIQIIIIIGGGIIIIIFKFKLLLLLLLLLLLLLLLAFKKKFKFLALKKLLLLLLLLLLLLLLKLKKLLLLLLLLLLLKLLLLKLLLLLLLLLLKLLLLLKLKLLLLLLLKLLLLLKLLLMALLLLKLLKLKLKLLKKLALKLKKKKLLLLLLLLLLLLLLLLLLLLLFKLAFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFAMLLLLLLLLLLLLLKKKKLLLLLKKFKLLLLLLLLLLLLLLKKLLLLLLLLLLKLLLLLKLLLLLLKLLLLLLKALLLLKKFKLIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLDGGDLLLLLLMMMLMMMLLLIDIDIFKFKFLLLLFLLFLFKFLFKKLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLQIFFKDDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIQQIIIIIIIIIKNIKKKKKKKKKIEIIQINKKLKLKIIIIIIIIIIQQQKDIIIKIIIIILIIIIIIIIIIFKFKKLLLLAAFKKKKKFKKKKKFFFKKKALLLKLLKKLLLLLKLLKKLKLLLKLLAALLKKLKKMLKKKKKFKAAFKKKLKKKKKKKLLAKKFKKKKLLLLLKLLKKLLLLKLLLKLLLLLLKKKKKKKKFKIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIKKLKLKKKLLLKKLLKKLLLLLLLLKLKKKKKLLLLKKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIIFKFKKKFK","n":["Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedSub","Complex","FromPrimitive","FromStrRadixErr","Integer","Num","NumCast","One","PrimInt","Rational","Rational32","Rational64","Saturating","Signed","ToPrimitive","Unsigned","Zero","abs","abs","abs_sub","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow_mut","cast","cast","checked_add","checked_div","checked_mul","checked_pow","checked_sub","clamp","clone","complex","conj","count_ones","count_zeros","default","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_ceil","div_floor","div_mod_floor","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_be","from_f32","from_f32","from_f64","from_f64","from_i128","from_i128","from_i16","from_i16","from_i32","from_i32","from_i64","from_i64","from_i8","from_i8","from_isize","from_isize","from_le","from_str","from_str_radix","from_str_radix","from_u128","from_u128","from_u16","from_u16","from_u32","from_u32","from_u64","from_u64","from_u8","from_u8","from_usize","from_usize","gcd","gcd_lcm","hash","i","im","integer","into","inv","inv","inv","is_even","is_finite","is_infinite","is_multiple_of","is_nan","is_negative","is_normal","is_odd","is_one","is_one","is_positive","is_zero","is_zero","iter","l1_norm","lcm","leading_ones","leading_zeros","max_value","min_value","mod_floor","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","next_multiple_of","norm_sqr","one","one","one","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powi","powu","prev_multiple_of","product","product","range","range_inclusive","range_step","range_step_inclusive","rational","re","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","reverse_bits","rotate_left","rotate_right","saturating_add","saturating_sub","scale","set_one","set_one","set_zero","set_zero","signed_shl","signed_shr","signum","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","swap_bytes","to_be","to_f32","to_f32","to_f64","to_f64","to_i128","to_i128","to_i16","to_i16","to_i32","to_i32","to_i64","to_i64","to_i8","to_i8","to_isize","to_isize","to_le","to_u128","to_u128","to_u16","to_u16","to_u32","to_u32","to_u64","to_u64","to_u8","to_u8","to_usize","to_usize","trailing_ones","trailing_zeros","traits","try_from","try_into","type_id","unscale","unsigned_shl","unsigned_shr","zero","zero","zero","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","Complex","Complex32","Complex64","ParseComplexError","borrow","borrow_mut","eq","fmt","fmt","from","im","im","im","into","re","re","re","try_from","try_into","type_id","Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","clone","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","try_from","try_from","try_into","try_into","type_id","type_id","x","y","Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Output","Pow","checked_pow","pow","pow","ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","cmp","default","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero","AsPrimitive","Bounded","Bytes","Bytes","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","Euclid","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs_sub","abs_sub","as_","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_add","checked_div","checked_div_euclid","checked_mul","checked_neg","checked_pow","checked_rem","checked_rem_euclid","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","count_ones","count_zeros","div_euclid","float","fmt","fmt","fmt","from","from","from","from_be","from_be_bytes","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_le_bytes","from_ne_bytes","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","identities","int","into","into","inv","is_negative","is_one","is_positive","is_zero","kind","leading_ones","leading_zeros","max_value","min_value","mul_add","mul_add_assign","one","one","ops","pow","pow","pow","pow","rem_euclid","reverse_bits","rotate_left","rotate_right","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","swap_bytes","to_be","to_be_bytes","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_le_bytes","to_ne_bytes","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_ones","trailing_zeros","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","is_subnormal","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num"],[296,"num::cast"],[331,"num::complex"],[351,"num::integer"],[415,"num::iter"],[499,"num::pow"],[504,"num::rational"],[815,"num::traits"],[1021,"num::traits::bounds"],[1028,"num::traits::cast"],[1063,"num::traits::float"],[1114,"num::traits::identities"],[1124,"num::traits::int"],[1144,"num::traits::ops"],[1152,"num::traits::ops::bytes"],[1163,"num::traits::ops::checked"],[1179,"num::traits::ops::euclid"],[1185,"num::traits::ops::inv"],[1188,"num::traits::ops::mul_add"],[1193,"num::traits::ops::overflowing"],[1199,"num::traits::ops::saturating"],[1208,"num::traits::ops::wrapping"],[1220,"num::traits::pow"],[1225,"num::traits::sign"],[1235,"core::clone"],[1236,"core::marker"],[1237,"core::option"],[1238,"core::cmp"],[1239,"core::ops::arith"],[1240,"core::default"],[1241,"core::cmp"],[1242,"core::fmt"],[1243,"core::fmt"],[1244,"core::hash"],[1245,"core::hash"],[1246,"core::ops::arith"],[1247,"core::ops::range"],[1248,"core::ops::arith"]],"d":["Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs subtraction that returns <code>None</code> instead of wrapping …","A complex number in Cartesian form.","A generic trait for converting a number to a value.","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","An interface for casting between machine scalars.","Defines a multiplicative identity element for <code>Self</code>.","Generic trait for primitive integers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Useful functions for signed numbers (i.e. numbers that can …","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","","","","","","","","","","","","","","","","","Cast from one machine scalar to another.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Raises a value to the power of exp, returning <code>None</code> if an …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","","","Returns the complex conjugate. i.e. <code>re - i im</code>","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","","","","","","","","","","","","","","Ceiled integer division.","Floored integer division.","Simultaneous floored integer division and modulus. Returns …","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","","","","","","","","Creates a number from another value that can be converted …","","","Returns the argument unchanged.","","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","","Converts a <code>f64</code> to return an optional value of this type. …","","Converts an <code>i128</code> to return an optional value of this type. …","","Converts an <code>i16</code> to return an optional value of this type. …","","Converts an <code>i32</code> to return an optional value of this type. …","","Converts an <code>i64</code> to return an optional value of this type. …","","Converts an <code>i8</code> to return an optional value of this type. …","","Converts an <code>isize</code> to return an optional value of this …","","Convert an integer from little endian to the target’s …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Convert from a string and radix (typically <code>2..=36</code>).","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Converts an <code>u128</code> to return an optional value of this type. …","","Converts an <code>u16</code> to return an optional value of this type. …","","Converts an <code>u32</code> to return an optional value of this type. …","","Converts an <code>u64</code> to return an optional value of this type. …","","Converts an <code>u8</code> to return an optional value of this type. …","","Converts a <code>usize</code> to return an optional value of this type. …","","Greatest Common Divisor (GCD).","Greatest Common Divisor (GCD) and Lowest Common Multiple …","","Returns imaginary unit","Imaginary portion of the complex number","","Calls <code>U::from(self)</code>.","Returns <code>1/self</code>","","","Returns <code>true</code> if the number is even.","Checks if the given complex number is finite","Checks if the given complex number is infinite","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Checks if the given complex number is NaN","Returns true if the number is negative and false if the …","Checks if the given complex number is normal","Returns <code>true</code> if the number is odd.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Lowest Common Multiple (LCM).","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Floored integer modulo, satisfying:","","","","","","","","","","","","","","","","","","","Create a new Complex","Rounds up to nearest multiple of argument.","Returns the square of the norm (since <code>T</code> doesn’t …","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","Rounds down to nearest multiple of argument.","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","","Real portion of the complex number","","","","","","","","","","","","","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Multiplies <code>self</code> by the scalar <code>t</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","","","","","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","","Convert <code>self</code> to little endian from the target’s …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","A complex number in Cartesian form.","","","","","","","","","Returns the argument unchanged.","Imaginary portion of the complex number","Imaginary portion of the complex number","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Real portion of the complex number","Real portion of the complex number","Real portion of the complex number","","","","Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","","An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","Returns zero","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for <code>Num</code> references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Convert a value to another, using the <code>as</code> operator.","","","","","","","Cast from one machine scalar to another.","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Performs euclid division that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Finds the euclid remainder of dividing two numbers, …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Calculates Euclidean division, the matching method for …","","","","","Creates a number from another value that can be converted …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Create a number from its representation as a byte array in …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the multiplicative inverse of <code>self</code>.","Returns true if the number is negative and false if the …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns the sign of the number.","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Return the memory representation of this number as a byte …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,59,84,13,0,75,0,2,0,2,85,85,2,2,2,2,2,2,2,2,2,2,2,2,2,65,65,65,65,65,2,65,65,2,2,2,2,2,2,2,2,10,2,2,2,2,85,34,2,34,2,34,2,34,2,34,2,34,2,34,2,34,2,85,2,4,2,34,2,34,2,34,2,34,2,34,2,34,2,65,65,2,2,2,0,2,2,2,2,65,2,2,65,2,1,2,65,12,2,1,60,2,0,2,65,85,85,74,74,65,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,65,2,0,12,2,0,0,85,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,65,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,85,85,85,86,86,2,12,2,60,2,85,85,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,85,85,32,2,32,2,32,2,32,2,32,2,32,2,32,2,32,2,85,32,2,32,2,32,2,32,2,32,2,32,2,85,85,0,2,2,2,2,85,85,0,60,2,0,0,0,0,8,0,10,34,34,34,34,34,34,34,34,34,34,34,34,34,34,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,63,63,63,63,63,63,87,88,2,63,87,88,2,63,63,63,0,0,0,0,0,0,64,0,64,0,68,20,68,20,0,66,20,0,65,0,65,0,65,0,65,65,20,65,65,20,68,20,0,65,20,0,65,68,20,68,65,65,65,0,65,0,65,0,68,68,65,0,66,65,0,66,68,20,68,20,68,20,20,20,0,0,0,0,0,0,55,57,58,61,69,70,55,57,58,61,69,70,55,57,58,61,69,70,55,57,69,55,57,58,61,69,70,55,57,58,61,69,70,55,57,58,61,69,70,55,57,58,61,69,70,55,57,0,0,0,0,0,0,55,57,69,70,55,57,69,55,57,58,61,69,70,55,57,58,61,69,70,55,57,58,61,69,70,78,0,0,0,78,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,76,73,76,73,73,73,73,73,73,76,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,76,73,73,73,73,73,73,73,73,73,76,76,73,73,73,73,76,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,76,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,76,73,76,73,76,73,0,0,89,90,0,0,0,0,0,0,0,0,0,91,81,0,91,91,91,91,91,91,91,91,91,0,0,0,0,4,0,81,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,92,51,78,91,0,0,0,0,91,0,0,0,0,0,91,0,0,0,0,0,0,0,0,0,0,0,1,0,1,8,81,82,81,82,0,0,0,59,84,93,13,94,0,95,93,96,97,75,0,0,0,85,85,98,0,81,82,82,10,81,82,85,90,34,34,34,34,34,34,34,34,85,90,90,4,34,34,34,34,34,34,0,0,81,82,92,1,12,1,60,82,85,85,74,74,51,52,0,12,0,0,0,85,78,98,85,85,85,86,99,100,86,101,12,60,0,85,85,0,1,85,85,89,32,32,32,32,32,32,32,32,85,89,89,32,32,32,32,32,32,85,85,81,82,81,82,81,82,85,85,102,103,104,105,106,107,0,60,0,0,0,74,108,74,109,0,0,0,0,8,0,10,34,34,34,34,34,34,34,34,34,34,34,34,34,34,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,91,91,91,91,91,91,91,91,91,0,0,91,91,91,91,91,91,91,91,91,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,12,60,0,12,12,60,0,60,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,89,90,0,0,0,90,90,90,89,89,89,0,0,0,0,0,0,0,0,59,84,13,94,95,96,97,75,0,0,93,93,98,98,0,92,92,0,0,51,51,52,0,0,0,110,111,112,0,0,0,0,86,99,100,86,101,0,0,0,0,0,0,102,103,104,105,106,107,78,0,0,0,78,0,0,0,1,0,1,1,1,0,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,1],[-1,-1,[]],[[-1,-1],-1,1],[[-1,-1],-1,[]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-2]]],-1,7,[[8,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[9,[-2]]],10,10],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,11],[[9,[-1]]],[3,12,13]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1,-1],-1,14],[[[2,[-1]]],[[2,[-1]]],3],0,[[[2,[-1]]],[[2,[-1]]],[3,4,15]],[-1,16,[]],[-1,16,[]],[[],[[2,[-1]]],17],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],[[5,[-1,-1]]],[]],[[-1,-1],[[5,[-1,-1]]],[]],[[-1,-1],18,[]],[[[2,[-1]],[2,[-1]]],18,19],[[-1,-1],[[20,[-1]]],3],[[-1,-1],[[5,[[20,[-1]],-1]]],[3,1]],[[[2,[-1]],21],[[23,[5,22]]],[24,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],[25,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],[26,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],[27,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],28],[[[2,[-1]],21],[[23,[5,22]]],[29,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],[30,4,14,3]],[[[2,[-1]],21],[[23,[5,22]]],[31,4,14,3]],[-1,[[9,[-2]]],32,[]],[-1,[[2,[-1]]],[3,4]],[-1,[[2,[-1]]],[3,4]],[-1,-1,[]],[-1,[[9,[[2,[-2]]]]],32,[10,4]],[-1,-1,[]],[33,[[9,[-1]]],[]],[33,[[9,[[2,[-1]]]]],[34,4]],[35,[[9,[-1]]],[]],[35,[[9,[[2,[-1]]]]],[34,4]],[36,[[9,[-1]]],[]],[36,[[9,[[2,[-1]]]]],[34,4]],[37,[[9,[-1]]],[]],[37,[[9,[[2,[-1]]]]],[34,4]],[38,[[9,[-1]]],[]],[38,[[9,[[2,[-1]]]]],[34,4]],[39,[[9,[-1]]],[]],[39,[[9,[[2,[-1]]]]],[34,4]],[40,[[9,[-1]]],[]],[40,[[9,[[2,[-1]]]]],[34,4]],[41,[[9,[-1]]],[]],[41,[[9,[[2,[-1]]]]],[34,4]],[-1,-1,[]],[42,[[23,[[2,[-1]]]]],[43,4,3]],[[42,16],[[23,[-1]]],[]],[[42,16],[[23,[[2,[-1]]]]],[4,3]],[44,[[9,[-1]]],[]],[44,[[9,[[2,[-1]]]]],[34,4]],[45,[[9,[-1]]],[]],[45,[[9,[[2,[-1]]]]],[34,4]],[16,[[9,[-1]]],[]],[16,[[9,[[2,[-1]]]]],[34,4]],[46,[[9,[-1]]],[]],[46,[[9,[[2,[-1]]]]],[34,4]],[47,[[9,[-1]]],[]],[47,[[9,[[2,[-1]]]]],[34,4]],[11,[[9,[-1]]],[]],[11,[[9,[[2,[-1]]]]],[34,4]],[[-1,-1],-1,[]],[[-1,-1],[[5,[-1,-1]]],[]],[[[2,[-1]],-2],5,48,49],[[],[[2,[-1]]],[3,4]],0,0,[-1,-2,[],[]],[[[2,[-1]]],[[2,[-1]]],[3,4,15]],[[[2,[-1]]],[],[3,4,15]],[[[2,[-1]]],[],[3,4,15]],[-1,18,[]],[[[2,[-1]]],18,50],[[[2,[-1]]],18,50],[[-1,-1],18,[]],[[[2,[-1]]],18,50],[-1,18,[]],[[[2,[-1]]],18,50],[-1,18,[]],[-1,18,19],[[[2,[-1]]],18,[3,4]],[-1,18,[]],[-1,18,[]],[[[2,[-1]]],18,[3,4]],0,[[[2,[-1]]],-1,[3,1]],[[-1,-1],-1,[]],[-1,16,[]],[-1,16,[]],[[],-1,[]],[[],-1,[]],[[-1,-1],-1,[]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]],[2,[-1]]],[[2,[-1]]],[3,4,51]],[[[2,[-1]],[2,[-1]],[2,[-1]]],[[2,[-1]]],[3,4,51]],[[[2,[-1]],[2,[-1]],[2,[-1]]],5,[3,6,52]],[[[2,[-1]],[2,[-1]],[2,[-1]]],5,[3,6,52]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]]],[],[3,4,15]],[[[2,[-1]]],[],[3,4,15]],[[-1,-1],[[2,[-1]]],[]],[[-1,-1],-1,3],[[[2,[-1]]],-1,[3,4]],[[],-1,12],[[],-1,[]],[[],[[2,[-1]]],[3,4]],0,[[-1,11],-1,[3,12,53]],[[-1,16],-1,[]],[[[2,[-1]],40],[],[3,4,15]],[[[2,[-1]],46],[],[3,4]],[[[2,[-1]],47],[],[3,4]],[[[2,[-1]],44],[],[3,4]],[[[2,[-1]],47],[],[3,4]],[[[2,[-1]],38],[],[3,4,15]],[[[2,[-1]],39],[],[3,4,15]],[[[2,[-1]],44],[],[3,4]],[[[2,[-1]],40],[],[3,4,15]],[[[2,[-1]],36],[],[3,4,15]],[[[2,[-1]],41],[],[3,4,15]],[[[2,[-1]],16],[],[3,4]],[[[2,[-1]],39],[],[3,4,15]],[[[2,[-1]],37],[],[3,4,15]],[[[2,[-1]],37],[],[3,4,15]],[[[2,[-1]],11],[],[3,4]],[[[2,[-1]],16],[],[3,4]],[[[2,[-1]],36],[],[3,4,15]],[[[2,[-1]],41],[],[3,4,15]],[[[2,[-1]],45],[],[3,4]],[[[2,[-1]],11],[],[3,4]],[[[2,[-1]],38],[],[3,4,15]],[[[2,[-1]],46],[],[3,4]],[[[2,[-1]],45],[],[3,4]],[[[2,[-1]],38],[[2,[-1]]],[3,4,15]],[[[2,[-1]],16],[[2,[-1]]],[3,4]],[[-1,-1],-1,3],[-1,[[2,[-2]]],54,[4,3]],[-1,[[2,[-2]]],54,[4,3]],[[-1,-1],[[55,[-1]]],[56,14,3,12]],[[-1,-1],[[57,[-1]]],[56,14,3,12]],[[-1,-1,-1],[[58,[-1]]],[59,14,3,60]],[[-1,-1,-1],[[61,[-1]]],[59,14,3,60]],0,0,[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[-1,-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[[2,[-1]],-1],[[2,[-1]]],[3,4]],[-1,5,[]],[[[2,[-1]]],5,[3,4]],[-1,5,[]],[[[2,[-1]]],5,[3,4]],[[-1,16],-1,[]],[[-1,16],-1,[]],[-1,-1,1],[-1,-1,[]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],-1],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],[],[3,4]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[[[2,[-1]],[2,[-1]]],5,[3,6]],[[[2,[-1]],-1],5,[3,6]],[-1,[[2,[-2]]],54,[4,3]],[-1,[[2,[-2]]],54,[4,3]],[-1,-1,[]],[-1,-1,[]],[-1,[[9,[33]]],[]],[[[2,[-1]]],[[9,[33]]],[32,4]],[-1,[[9,[35]]],[]],[[[2,[-1]]],[[9,[35]]],[32,4]],[-1,[[9,[36]]],[]],[[[2,[-1]]],[[9,[36]]],[32,4]],[-1,[[9,[37]]],[]],[[[2,[-1]]],[[9,[37]]],[32,4]],[-1,[[9,[38]]],[]],[[[2,[-1]]],[[9,[38]]],[32,4]],[-1,[[9,[39]]],[]],[[[2,[-1]]],[[9,[39]]],[32,4]],[-1,[[9,[40]]],[]],[[[2,[-1]]],[[9,[40]]],[32,4]],[-1,[[9,[41]]],[]],[[[2,[-1]]],[[9,[41]]],[32,4]],[-1,-1,[]],[-1,[[9,[44]]],[]],[[[2,[-1]]],[[9,[44]]],[32,4]],[-1,[[9,[45]]],[]],[[[2,[-1]]],[[9,[45]]],[32,4]],[-1,[[9,[16]]],[]],[[[2,[-1]]],[[9,[16]]],[32,4]],[-1,[[9,[46]]],[]],[[[2,[-1]]],[[9,[46]]],[32,4]],[-1,[[9,[47]]],[]],[[[2,[-1]]],[[9,[47]]],[32,4]],[-1,[[9,[11]]],[]],[[[2,[-1]]],[[9,[11]]],[32,4]],[-1,16,[]],[-1,16,[]],0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],[[[2,[-1]],-1],[[2,[-1]]],[3,4]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[],-1,60],[[],-1,[]],[[],[[2,[-1]]],[3,4]],0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],10,10],[-1,[[9,[-2]]],32,[]],[33,[[9,[-1]]],[]],[35,[[9,[-1]]],[]],[36,[[9,[-1]]],[]],[37,[[9,[-1]]],[]],[38,[[9,[-1]]],[]],[39,[[9,[-1]]],[]],[40,[[9,[-1]]],[]],[41,[[9,[-1]]],[]],[44,[[9,[-1]]],[]],[45,[[9,[-1]]],[]],[16,[[9,[-1]]],[]],[46,[[9,[-1]]],[]],[47,[[9,[-1]]],[]],[11,[[9,[-1]]],[]],[-1,[[9,[33]]],[]],[-1,[[9,[35]]],[]],[-1,[[9,[36]]],[]],[-1,[[9,[37]]],[]],[-1,[[9,[38]]],[]],[-1,[[9,[39]]],[]],[-1,[[9,[40]]],[]],[-1,[[9,[41]]],[]],[-1,[[9,[44]]],[]],[-1,[[9,[45]]],[]],[-1,[[9,[16]]],[]],[-1,[[9,[46]]],[]],[-1,[[9,[47]]],[]],[-1,[[9,[11]]],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[63,[-1]],[63,[-1]]],18,19],[[[63,[-1]],21],[[23,[5,22]]],28],[[[63,[-1]],21],[[23,[5,22]]],25],[-1,-1,[]],0,0,0,[-1,-2,[],[]],0,0,0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],0,0,0,0,0,[[-1,-1],-1,64],[[-1,-1],-1,[]],[[-1,-1],-1,64],[[-1,-1],-1,[]],[[-1,-1],-1,[65,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,66],[-1,-1,[]],[[[20,[-1]]],[[20,[-1]]],3],[[-1,-1],-1,65],[[-1,-1],-1,[]],[[-1,-1],-1,65],[[-1,-1],-1,[]],[[-1,-1],[[5,[-1,-1]]],65],[[-1,-1],[[5,[-1,-1]]],[]],[[-1,-1],[[5,[-1,-1]]],65],[[-1,-1],[[5,[-1,-1]]],[]],[[-1,-1],18,[]],[[[20,[-1]],[20,[-1]]],18,19],[[-1,-1],[[20,[-1]]],3],[[-1,-1],[[5,[[20,[-1]],-1]]],[3,1]],[[[20,[-1]],21],[[23,[5,22]]],28],[-1,-1,[]],[-1,-1,[]],[[-1,-1],-1,65],[[-1,-1],-1,[]],0,[[-1,-1],[[5,[-1,-1]]],65],[[-1,-1],[[5,[-1,-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,18,[]],[[-1,-1],18,[]],[-1,18,[]],[[-1,-1],-1,65],[[-1,-1],-1,[]],[[-1,-1],-1,65],[[-1,-1],-1,[]],[[[67,[-1]]],-1,[]],[-1,[[68,[-1]]],65],[[[68,[-1]]],[[9,[-1]]],[65,3]],[[-1,-1],-1,3],[[-1,16],-1,66],[[-1,16],-1,[]],[[-1,-1],-1,3],[-1,-1,66],[-1,-1,[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[-1]]],3],[[[57,[-1]]],[[57,[-1]]],3],[[[58,[-1]]],[[58,[-1]]],3],[[[61,[-1]]],[[61,[-1]]],3],[[[69,[-1]]],[[69,[-1]]],3],[[[70,[-1]]],[[70,[-1]]],3],[[[55,[-1]]],[[71,[-1]]],[]],[[[57,[-1]]],[[71,[-1]]],[]],[[[69,[-1]]],[[71,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[9,[-1]]],[56,14,3,32]],[[[57,[-1]]],[[9,[-1]]],[56,14,3,32]],[[[58,[-1]]],[[9,[-1]]],[59,14,3]],[[[61,[-1]]],[[9,[-1]]],[59,14,3,19]],[[[69,[-1]]],[[9,[-1]]],[56,3]],[[[70,[-1]]],[[9,[-1]]],[56,3]],[[[55,[-1]]],[[9,[-1]]],[65,3,32]],[[[57,[-1]]],[[9,[-1]]],[72,65,3,32]],[[-1,-1],[[55,[-1]]],[56,14,3,12]],[-1,[[69,[-1]]],[56,3,12]],[[-1,-1],[[57,[-1]]],[56,14,3,12]],[[-1,-1,-1],[[58,[-1]]],[59,14,3,60]],[[-1,-1],[[70,[-1]]],[56,3]],[[-1,-1,-1],[[61,[-1]]],[59,14,3,60]],[[[55,[-1]]],[[5,[11,[9,[11]]]]],[56,14,3,32]],[[[57,[-1]]],[[5,[11,[9,[11]]]]],[56,14,3,32]],[[[69,[-1]]],[[5,[11,[9,[11]]]]],[56,3]],[[[70,[-1]]],[[5,[11,[9,[11]]]]],[56,3]],[[[55,[-1]]],[[71,[-1]]],[]],[[[57,[-1]]],[[71,[-1]]],[]],[[[69,[-1]]],[[71,[-1]]],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,[[-1,11],[[9,[-1]]],[3,12,13]],[[-1,11],-1,[3,12,53]],[[-1,-2],[],[],[]],0,0,0,0,0,[[[73,[-1]]],[[73,[-1]]],[3,65,1]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65,1]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[-1,[[9,[[73,[-2]]]]],[50,10],[65,1,74,10,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[9,[[73,[-1]]]]],[3,65,13,59]],[[[73,[-1]],[73,[-1]]],[[9,[[73,[-1]]]]],[3,65,13]],[[[73,[-1]],[73,[-1]]],[[9,[[73,[-1]]]]],[3,65,13]],[[[73,[-1]],[73,[-1]]],[[9,[[73,[-1]]]]],[3,65,13,75]],[[[73,[-1]]],[[73,[-1]]],3],[76,76],[[[73,[-1]],[73,[-1]]],77,[3,65]],[[],[[73,[-1]]],[3,65]],[[[73,[-1]]],-1,[]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],18,[3,65]],[[76,76],18],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],21],[[23,[5,22]]],[30,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[31,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[29,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[26,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[25,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[27,3,65]],[[[73,[-1]],21],[[23,[5,22]]],[24,3,65]],[[[73,[-1]],21],[[23,[5,22]]],28],[[76,21],[[23,[5,22]]]],[[76,21],[[23,[5,22]]]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[-1,[[73,[-1]]],[3,65]],[[[5,[-1,-1]]],[[73,[-1]]],[3,65]],[-1,-1,[]],[-1,-1,[]],[33,[[9,[[73,[44]]]]]],[33,[[9,[[73,[38]]]]]],[33,[[9,[[73,[36]]]]]],[33,[[9,[[73,[16]]]]]],[33,[[9,[[73,[39]]]]]],[33,[[9,[[73,[40]]]]]],[33,[[9,[[73,[37]]]]]],[33,[[9,[[73,[11]]]]]],[33,[[9,[[73,[41]]]]]],[33,[[9,[[73,[46]]]]]],[33,[[9,[[73,[45]]]]]],[33,[[9,[[73,[47]]]]]],[35,[[9,[[73,[38]]]]]],[35,[[9,[[73,[45]]]]]],[35,[[9,[[73,[47]]]]]],[35,[[9,[[73,[16]]]]]],[35,[[9,[[73,[46]]]]]],[35,[[9,[[73,[11]]]]]],[35,[[9,[[73,[41]]]]]],[35,[[9,[[73,[40]]]]]],[35,[[9,[[73,[37]]]]]],[35,[[9,[[73,[39]]]]]],[35,[[9,[[73,[44]]]]]],[35,[[9,[[73,[36]]]]]],[36,[[9,[[73,[36]]]]]],[36,[[9,[[73,[46]]]]]],[36,[[9,[[73,[40]]]]]],[36,[[9,[[73,[44]]]]]],[36,[[9,[[73,[39]]]]]],[36,[[9,[[73,[16]]]]]],[36,[[9,[[73,[37]]]]]],[36,[[9,[[73,[11]]]]]],[36,[[9,[[73,[38]]]]]],[36,[[9,[[73,[41]]]]]],[36,[[9,[[73,[47]]]]]],[36,[[9,[[73,[45]]]]]],[39,[[9,[[73,[16]]]]]],[39,[[9,[[73,[45]]]]]],[39,[[9,[[73,[46]]]]]],[39,[[9,[[73,[40]]]]]],[39,[[9,[[73,[39]]]]]],[39,[[9,[[73,[41]]]]]],[39,[[9,[[73,[36]]]]]],[39,[[9,[[73,[44]]]]]],[39,[[9,[[73,[37]]]]]],[39,[[9,[[73,[11]]]]]],[39,[[9,[[73,[38]]]]]],[39,[[9,[[73,[47]]]]]],[-1,[[73,[-1]]],[3,65]],[42,[[23,[[73,[-1]],76]]],[43,3,65]],[[42,16],[[23,[[73,[-1]],76]]],[3,65]],[44,[[9,[[73,[44]]]]]],[44,[[9,[[73,[46]]]]]],[44,[[9,[[73,[40]]]]]],[44,[[9,[[73,[37]]]]]],[44,[[9,[[73,[41]]]]]],[44,[[9,[[73,[36]]]]]],[44,[[9,[[73,[38]]]]]],[44,[[9,[[73,[16]]]]]],[44,[[9,[[73,[39]]]]]],[44,[[9,[[73,[47]]]]]],[44,[[9,[[73,[11]]]]]],[44,[[9,[[73,[45]]]]]],[46,[[9,[[73,[38]]]]]],[46,[[9,[[73,[47]]]]]],[46,[[9,[[73,[40]]]]]],[46,[[9,[[73,[44]]]]]],[46,[[9,[[73,[41]]]]]],[46,[[9,[[73,[11]]]]]],[46,[[9,[[73,[16]]]]]],[46,[[9,[[73,[45]]]]]],[46,[[9,[[73,[37]]]]]],[46,[[9,[[73,[46]]]]]],[46,[[9,[[73,[39]]]]]],[46,[[9,[[73,[36]]]]]],[[[73,[-1]],-2],5,[3,65,48],49],[-1,-2,[],[]],[[[73,[-1]]],[[5,[-1,-1]]],[]],[-1,-2,[],[]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]]],18,[3,65]],[[[73,[-1]]],18,[3,65,1]],[[[73,[-1]]],18,[3,65]],[[[73,[-1]]],18,[3,65,1]],[[[73,[-1]]],18,[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]]],[[73,[-1]]],[3,65,15]],[[[73,[-1]]],[[73,[-1]]],[3,65,15]],[[-1,-1],[[73,[-1]]],[3,65]],[[-1,-1],[[73,[-1]]],[]],[[[73,[-1]]],-1,[]],[[],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[9,[77]]],[3,65]],[[[73,[-1]],40],[[73,[-1]]],[3,65,[78,[47]]]],[[[73,[-1]],41],[[73,[-1]]],[3,65,[78,[11]]]],[[[73,[-1]],47],[[73,[-1]]],[3,65]],[[[73,[-1]],40],[[73,[-1]]],[3,65,[78,[47]]]],[[[73,[-1]],45],[[73,[-1]]],[3,65,[78,[45]]]],[[[73,[-1]],39],[[73,[-1]]],[3,65]],[[[73,[-1]],16],[[73,[-1]]],[3,65,[78,[16]]]],[[[73,[-1]],16],[[73,[-1]]],[3,65]],[[[73,[-1]],37],[[73,[-1]]],[3,65,[78,[45]]]],[[[73,[-1]],16],[[73,[-1]]],[3,65]],[[[73,[-1]],40],[[73,[-1]]],[3,65]],[[[73,[-1]],38],[[73,[-1]]],[3,65]],[[[73,[-1]],40],[[73,[-1]]],[3,65]],[[[73,[-1]],44],[[73,[-1]]],[3,65]],[[[73,[-1]],11],[[73,[-1]]],[3,65,[78,[11]]]],[[[73,[-1]],47],[[73,[-1]]],[3,65,[78,[47]]]],[[[73,[-1]],37],[[73,[-1]]],[3,65]],[[[73,[-1]],47],[[73,[-1]]],[3,65,[78,[47]]]],[[[73,[-1]],11],[[73,[-1]]],[3,65]],[[[73,[-1]],41],[[73,[-1]]],[3,65]],[[[73,[-1]],39],[[73,[-1]]],[3,65,[78,[46]]]],[[[73,[-1]],44],[[73,[-1]]],[3,65,[78,[44]]]],[[[73,[-1]],11],[[73,[-1]]],[3,65,[78,[11]]]],[[[73,[-1]],36],[[73,[-1]]],[3,65,[78,[44]]]],[[[73,[-1]],38],[[73,[-1]]],[3,65,[78,[16]]]],[[[73,[-1]],16],[[73,[-1]]],[3,65,[78,[16]]]],[[[73,[-1]],46],[[73,[-1]]],[3,65]],[[[73,[-1]],11],[[73,[-1]]],[3,65]],[[[73,[-1]],38],[[73,[-1]]],[3,65]],[[[73,[-1]],46],[[73,[-1]]],[3,65,[78,[46]]]],[[[73,[-1]],45],[[73,[-1]]],[3,65,[78,[45]]]],[[[73,[-1]],45],[[73,[-1]]],[3,65]],[[[73,[-1]],46],[[73,[-1]]],[3,65]],[[[73,[-1]],47],[[73,[-1]]],[3,65]],[[[73,[-1]],37],[[73,[-1]]],[3,65]],[[[73,[-1]],38],[[73,[-1]]],[3,65,[78,[16]]]],[[[73,[-1]],39],[[73,[-1]]],[3,65]],[[[73,[-1]],36],[[73,[-1]]],[3,65]],[[[73,[-1]],44],[[73,[-1]]],[3,65,[78,[44]]]],[[[73,[-1]],36],[[73,[-1]]],[3,65]],[[[73,[-1]],38],[[73,[-1]]],[3,65]],[[[73,[-1]],46],[[73,[-1]]],[3,65,[78,[46]]]],[[[73,[-1]],36],[[73,[-1]]],[3,65,[78,[44]]]],[[[73,[-1]],41],[[73,[-1]]],[3,65]],[[[73,[-1]],37],[[73,[-1]]],[3,65,[78,[45]]]],[[[73,[-1]],44],[[73,[-1]]],[3,65]],[[[73,[-1]],45],[[73,[-1]]],[3,65]],[[[73,[-1]],41],[[73,[-1]]],[3,65,[78,[11]]]],[[[73,[-1]],39],[[73,[-1]]],[3,65,[78,[46]]]],[-1,[[73,[-2]]],54,[65,3]],[-1,[[73,[-2]]],54,[65,3]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]]],5,[3,65]],[[[73,[-1]]],5,[3,65]],[[[73,[-1]]],[[73,[-1]]],[3,65,1]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],[73,[-1]]],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],[[73,[-1]]],[3,65]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[[[73,[-1]],-1],5,[3,65,6]],[[[73,[-1]],[73,[-1]]],5,[3,65,6]],[-1,[[73,[-2]]],54,[65,3]],[-1,[[73,[-2]]],54,[65,3]],[[[73,[41]]],[[9,[35]]]],[[[73,[11]]],[[9,[35]]]],[[[73,[16]]],[[9,[35]]]],[[[73,[47]]],[[9,[35]]]],[[[73,[38]]],[[9,[35]]]],[[[73,[45]]],[[9,[35]]]],[[[73,[37]]],[[9,[35]]]],[[[73,[40]]],[[9,[35]]]],[[[73,[46]]],[[9,[35]]]],[[[73,[39]]],[[9,[35]]]],[[[73,[38]]],[[9,[36]]]],[[[73,[41]]],[[9,[36]]]],[[[73,[39]]],[[9,[36]]]],[[[73,[40]]],[[9,[36]]]],[[[73,[11]]],[[9,[36]]]],[[[73,[45]]],[[9,[36]]]],[[[73,[46]]],[[9,[36]]]],[[[73,[16]]],[[9,[36]]]],[[[73,[37]]],[[9,[36]]]],[[[73,[47]]],[[9,[36]]]],[[[73,[46]]],[[9,[39]]]],[[[73,[11]]],[[9,[39]]]],[[[73,[16]]],[[9,[39]]]],[[[73,[47]]],[[9,[39]]]],[[[73,[37]]],[[9,[39]]]],[[[73,[45]]],[[9,[39]]]],[[[73,[38]]],[[9,[39]]]],[[[73,[40]]],[[9,[39]]]],[[[73,[39]]],[[9,[39]]]],[[[73,[41]]],[[9,[39]]]],[[[73,[-1]]],-1,[3,65]],[[[73,[45]]],[[9,[44]]]],[[[73,[46]]],[[9,[44]]]],[[[73,[16]]],[[9,[44]]]],[[[73,[37]]],[[9,[44]]]],[[[73,[39]]],[[9,[44]]]],[[[73,[11]]],[[9,[44]]]],[[[73,[40]]],[[9,[44]]]],[[[73,[41]]],[[9,[44]]]],[[[73,[47]]],[[9,[44]]]],[[[73,[38]]],[[9,[44]]]],[[[73,[40]]],[[9,[46]]]],[[[73,[47]]],[[9,[46]]]],[[[73,[16]]],[[9,[46]]]],[[[73,[39]]],[[9,[46]]]],[[[73,[45]]],[[9,[46]]]],[[[73,[46]]],[[9,[46]]]],[[[73,[41]]],[[9,[46]]]],[[[73,[38]]],[[9,[46]]]],[[[73,[37]]],[[9,[46]]]],[[[73,[11]]],[[9,[46]]]],[[[73,[-1]]],[[73,[-1]]],[3,65]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[[],[[73,[-1]]],[3,65]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[79,80]],[[],-1,[]],[[],-1,[79,80]],[[],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],0,0,0,0,[[],-1,[]],0,0,0,0,0,[[],-1,[79,56]],0,0,0,0,0,0,0,0,0,0,[-1,-1,1],[-1,-1,[]],[[-1,-1],-1,1],[[-1,-1],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[9,[-2]]],10,10],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[-1,[[9,[-1]]],[]],[[-1,11],[[9,[-1]]],[3,12,13]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,16],[[9,[-1]]],[]],[[-1,16],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1,-1],-1,14],[[-1,-1],-1,14],[[-1,-1],-1,14],[-1,16,[]],[-1,16,[]],[[-1,-1],-1,[]],0,[[81,21],[[23,[5,22]]]],[[82,21],[[23,[5,22]]]],[[82,21],[[23,[5,22]]]],[-1,[[9,[-2]]],32,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[33,[[9,[-1]]],[]],[35,[[9,[-1]]],[]],[36,[[9,[-1]]],[]],[37,[[9,[-1]]],[]],[38,[[9,[-1]]],[]],[39,[[9,[-1]]],[]],[40,[[9,[-1]]],[]],[41,[[9,[-1]]],[]],[-1,-1,[]],[[],-1,[]],[[],-1,[]],[[42,16],[[23,[-1]]],[]],[44,[[9,[-1]]],[]],[45,[[9,[-1]]],[]],[16,[[9,[-1]]],[]],[46,[[9,[-1]]],[]],[47,[[9,[-1]]],[]],[11,[[9,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,18,[]],[-1,18,19],[-1,18,[]],[-1,18,[]],0,[-1,16,[]],[-1,16,[]],[[],-1,[]],[[],-1,[]],[[-1,-2,-3],[],[],[],[]],[[-1,-2,-3],5,[],[],[]],[[],-1,12],[[],-1,[]],0,0,[[-1,11],-1,[3,12,53]],[[-1,16],-1,[]],[[-1,-2],[],[],[]],[[-1,-1],-1,[]],[-1,-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[-1,5,[]],[-1,5,[]],0,[[-1,16],-1,[]],[[-1,16],-1,[]],[-1,-1,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[-1,[[9,[33]]],[]],[-1,[[9,[35]]],[]],[-1,[[9,[36]]],[]],[-1,[[9,[37]]],[]],[-1,[[9,[38]]],[]],[-1,[[9,[39]]],[]],[-1,[[9,[40]]],[]],[-1,[[9,[41]]],[]],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,[[9,[44]]],[]],[-1,[[9,[45]]],[]],[-1,[[9,[16]]],[]],[-1,[[9,[46]]],[]],[-1,[[9,[47]]],[]],[-1,[[9,[11]]],[]],[-1,16,[]],[-1,16,[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[-1,-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,-1],-1,[]],[[],-1,60],[[],-1,[]],0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[9,[-2]]],10,10],[-1,[[9,[-2]]],32,[]],[33,[[9,[-1]]],[]],[35,[[9,[-1]]],[]],[36,[[9,[-1]]],[]],[37,[[9,[-1]]],[]],[38,[[9,[-1]]],[]],[39,[[9,[-1]]],[]],[40,[[9,[-1]]],[]],[41,[[9,[-1]]],[]],[44,[[9,[-1]]],[]],[45,[[9,[-1]]],[]],[16,[[9,[-1]]],[]],[46,[[9,[-1]]],[]],[47,[[9,[-1]]],[]],[11,[[9,[-1]]],[]],[-1,[[9,[33]]],[]],[-1,[[9,[35]]],[]],[-1,[[9,[36]]],[]],[-1,[[9,[37]]],[]],[-1,[[9,[38]]],[]],[-1,[[9,[39]]],[]],[-1,[[9,[40]]],[]],[-1,[[9,[41]]],[]],[-1,[[9,[44]]],[]],[-1,[[9,[45]]],[]],[-1,[[9,[16]]],[]],[-1,[[9,[46]]],[]],[-1,[[9,[47]]],[]],[-1,[[9,[11]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[[],-1,[]],[[],-1,[]],[[],-1,[79,80]],[[],-1,[]],[[],-1,[79,80]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[79,56]],[-1,-1,[]],[-1,-1,[]],[-1,83,[]],[[],-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[-1,[[5,[46,37,40]]],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[-1,-1],-1,[]],[[],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[-1,38],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,18,19],[-1,18,[]],[[],-1,12],[[],-1,[]],[-1,5,[]],[-1,5,[]],[[],-1,60],[[],-1,[]],0,[-1,16,[]],[-1,16,[]],[-1,-1,[]],[-1,-1,[]],[-1,16,[]],[-1,16,[]],[[-1,16],-1,[]],[-1,-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,16,[]],[-1,16,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],0,0,0,0,0,0,0,0,[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[-1,[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,16],[[9,[-1]]],[]],[[-1,16],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],0,0,[[-1,-1],[[9,[-1]]],[]],[[-1,-1],[[9,[-1]]],[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,[-1,[],[]],0,0,0,[[-1,-2,-3],[],[],[],[]],[[-1,-2,-3],5,[],[],[]],0,0,0,[[-1,-1],[[5,[-1,18]]],[]],[[-1,-1],[[5,[-1,18]]],[]],[[-1,-1],[[5,[-1,18]]],[]],0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[-1,-1,[]],[[-1,16],-1,[]],[[-1,16],-1,[]],[[-1,-1],-1,[]],0,0,[[-1,11],[[9,[-1]]],[3,12,13]],[[-1,11],-1,[3,12,53]],[[-1,-2],[],[],[]],0,0,[-1,-1,1],[-1,-1,[]],[[-1,-1],-1,1],[[-1,-1],-1,[]],[-1,18,[]],[-1,18,[]],[-1,-1,1],[-1,-1,[]]],"c":[13,506],"p":[[8,"Signed",0],[3,"Complex",0],[8,"Clone",1235],[8,"Num",0],[15,"tuple"],[8,"NumAssign",815],[8,"Copy",1236],[8,"AsPrimitive",296],[4,"Option",1237],[8,"NumCast",0],[15,"usize"],[8,"One",0],[8,"CheckedMul",0],[8,"PartialOrd",1238],[8,"Neg",1239],[15,"u32"],[8,"Default",1240],[15,"bool"],[8,"PartialEq",1238],[3,"ExtendedGcd",351],[3,"Formatter",1241],[3,"Error",1241],[4,"Result",1242],[8,"UpperExp",1241],[8,"Display",1241],[8,"LowerHex",1241],[8,"LowerExp",1241],[8,"Debug",1241],[8,"Binary",1241],[8,"Octal",1241],[8,"UpperHex",1241],[8,"ToPrimitive",0],[15,"f32"],[8,"FromPrimitive",0],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[8,"FromStr",1243],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[8,"Hash",1244],[8,"Hasher",1244],[8,"FloatCore",1063],[8,"MulAdd",815],[8,"MulAddAssign",815],[8,"Mul",1239],[8,"Iterator",1245],[3,"Range",415],[8,"Add",1239],[3,"RangeInclusive",415],[3,"RangeStep",415],[8,"CheckedAdd",0],[8,"Zero",0],[3,"RangeStepInclusive",415],[3,"TypeId",1246],[3,"ParseComplexError",331],[8,"Average",351],[8,"Integer",0],[8,"Roots",351],[15,"slice"],[3,"IterBinomial",351],[3,"RangeFrom",415],[3,"RangeStepFrom",415],[4,"Bound",1247],[8,"Sub",1239],[3,"Ratio",504],[8,"Bounded",0],[8,"CheckedSub",0],[3,"ParseRatioError",504],[4,"Ordering",1238],[8,"Pow",499],[8,"Sized",1236],[8,"Div",1239],[4,"FloatErrorKind",815],[3,"ParseFloatError",815],[4,"FpCategory",1248],[8,"CheckedDiv",0],[8,"PrimInt",0],[8,"Saturating",0],[6,"Complex32",331],[6,"Complex64",331],[8,"ToBytes",815],[8,"FromBytes",815],[8,"FloatConst",815],[8,"Inv",815],[8,"CheckedEuclid",815],[8,"CheckedNeg",815],[8,"CheckedRem",815],[8,"CheckedShl",815],[8,"CheckedShr",815],[8,"Euclid",815],[8,"SaturatingAdd",815],[8,"SaturatingMul",815],[8,"SaturatingSub",815],[8,"WrappingAdd",815],[8,"WrappingMul",815],[8,"WrappingNeg",815],[8,"WrappingShl",815],[8,"WrappingShr",815],[8,"WrappingSub",815],[8,"UpperBounded",1021],[8,"LowerBounded",1021],[8,"OverflowingAdd",1193],[8,"OverflowingMul",1193],[8,"OverflowingSub",1193]],"b":[[25,"impl-Add%3CT%3E-for-Complex%3CT%3E"],[26,"impl-Add%3CT%3E-for-%26Complex%3CT%3E"],[27,"impl-Add%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[28,"impl-Add%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[29,"impl-Add%3C%26T%3E-for-Complex%3CT%3E"],[30,"impl-Add%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[31,"impl-Add-for-Complex%3CT%3E"],[32,"impl-Add%3C%26T%3E-for-%26Complex%3CT%3E"],[33,"impl-AddAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[34,"impl-AddAssign%3C%26T%3E-for-Complex%3CT%3E"],[35,"impl-AddAssign-for-Complex%3CT%3E"],[36,"impl-AddAssign%3CT%3E-for-Complex%3CT%3E"],[54,"impl-Div%3CT%3E-for-%26Complex%3CT%3E"],[55,"impl-Div%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[56,"impl-Div%3C%26T%3E-for-%26Complex%3CT%3E"],[57,"impl-Div%3CT%3E-for-Complex%3CT%3E"],[58,"impl-Div%3C%26T%3E-for-Complex%3CT%3E"],[59,"impl-Div%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[60,"impl-Div%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[61,"impl-Div-for-Complex%3CT%3E"],[62,"impl-DivAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[63,"impl-DivAssign%3C%26T%3E-for-Complex%3CT%3E"],[64,"impl-DivAssign%3CT%3E-for-Complex%3CT%3E"],[65,"impl-DivAssign-for-Complex%3CT%3E"],[74,"impl-UpperExp-for-Complex%3CT%3E"],[75,"impl-Display-for-Complex%3CT%3E"],[76,"impl-LowerHex-for-Complex%3CT%3E"],[77,"impl-LowerExp-for-Complex%3CT%3E"],[78,"impl-Debug-for-Complex%3CT%3E"],[79,"impl-Binary-for-Complex%3CT%3E"],[80,"impl-Octal-for-Complex%3CT%3E"],[81,"impl-UpperHex-for-Complex%3CT%3E"],[83,"impl-From%3C%26T%3E-for-Complex%3CT%3E"],[84,"impl-From%3CT%3E-for-Complex%3CT%3E"],[86,"impl-NumCast-for-Complex%3CT%3E"],[127,"impl-Complex%3CT%3E"],[128,"impl-Inv-for-Complex%3CT%3E"],[129,"impl-Inv-for-%26Complex%3CT%3E"],[151,"impl-Mul%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[152,"impl-Mul%3C%26T%3E-for-Complex%3CT%3E"],[153,"impl-Mul%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[154,"impl-Mul%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[155,"impl-Mul%3CT%3E-for-Complex%3CT%3E"],[156,"impl-Mul%3C%26T%3E-for-%26Complex%3CT%3E"],[157,"impl-Mul%3CT%3E-for-%26Complex%3CT%3E"],[158,"impl-Mul-for-Complex%3CT%3E"],[159,"impl-MulAdd%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[160,"impl-MulAdd-for-Complex%3CT%3E"],[161,"impl-MulAddAssign-for-Complex%3CT%3E"],[162,"impl-MulAddAssign%3C%26Complex%3CT%3E,+%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[163,"impl-MulAssign%3C%26T%3E-for-Complex%3CT%3E"],[164,"impl-MulAssign-for-Complex%3CT%3E"],[165,"impl-MulAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[166,"impl-MulAssign%3CT%3E-for-Complex%3CT%3E"],[167,"impl-Neg-for-Complex%3CT%3E"],[168,"impl-Neg-for-%26Complex%3CT%3E"],[178,"impl-Pow%3Ci8%3E-for-%26Complex%3CT%3E"],[179,"impl-Pow%3C%26u64%3E-for-%26Complex%3CT%3E"],[180,"impl-Pow%3C%26u8%3E-for-%26Complex%3CT%3E"],[181,"impl-Pow%3C%26u128%3E-for-%26Complex%3CT%3E"],[182,"impl-Pow%3Cu8%3E-for-%26Complex%3CT%3E"],[183,"impl-Pow%3Ci32%3E-for-%26Complex%3CT%3E"],[184,"impl-Pow%3C%26i64%3E-for-%26Complex%3CT%3E"],[185,"impl-Pow%3Cu128%3E-for-%26Complex%3CT%3E"],[186,"impl-Pow%3C%26i8%3E-for-%26Complex%3CT%3E"],[187,"impl-Pow%3C%26i128%3E-for-%26Complex%3CT%3E"],[188,"impl-Pow%3C%26isize%3E-for-%26Complex%3CT%3E"],[189,"impl-Pow%3Cu32%3E-for-%26Complex%3CT%3E"],[190,"impl-Pow%3Ci64%3E-for-%26Complex%3CT%3E"],[191,"impl-Pow%3C%26i16%3E-for-%26Complex%3CT%3E"],[192,"impl-Pow%3Ci16%3E-for-%26Complex%3CT%3E"],[193,"impl-Pow%3Cusize%3E-for-%26Complex%3CT%3E"],[194,"impl-Pow%3C%26u32%3E-for-%26Complex%3CT%3E"],[195,"impl-Pow%3Ci128%3E-for-%26Complex%3CT%3E"],[196,"impl-Pow%3Cisize%3E-for-%26Complex%3CT%3E"],[197,"impl-Pow%3Cu16%3E-for-%26Complex%3CT%3E"],[198,"impl-Pow%3C%26usize%3E-for-%26Complex%3CT%3E"],[199,"impl-Pow%3C%26i32%3E-for-%26Complex%3CT%3E"],[200,"impl-Pow%3Cu64%3E-for-%26Complex%3CT%3E"],[201,"impl-Pow%3C%26u16%3E-for-%26Complex%3CT%3E"],[205,"impl-Product-for-Complex%3CT%3E"],[206,"impl-Product%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[213,"impl-Rem-for-Complex%3CT%3E"],[214,"impl-Rem%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[215,"impl-Rem%3CT%3E-for-%26Complex%3CT%3E"],[216,"impl-Rem%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[217,"impl-Rem%3C%26T%3E-for-%26Complex%3CT%3E"],[218,"impl-Rem%3CT%3E-for-Complex%3CT%3E"],[219,"impl-Rem%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[220,"impl-Rem%3C%26T%3E-for-Complex%3CT%3E"],[221,"impl-RemAssign%3C%26T%3E-for-Complex%3CT%3E"],[222,"impl-RemAssign-for-Complex%3CT%3E"],[223,"impl-RemAssign%3CT%3E-for-Complex%3CT%3E"],[224,"impl-RemAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[239,"impl-Sub%3C%26T%3E-for-%26Complex%3CT%3E"],[240,"impl-Sub%3CT%3E-for-Complex%3CT%3E"],[241,"impl-Sub%3CT%3E-for-%26Complex%3CT%3E"],[242,"impl-Sub%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[243,"impl-Sub%3C%26T%3E-for-Complex%3CT%3E"],[244,"impl-Sub-for-Complex%3CT%3E"],[245,"impl-Sub%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[246,"impl-Sub%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[247,"impl-SubAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[248,"impl-SubAssign%3C%26T%3E-for-Complex%3CT%3E"],[249,"impl-SubAssign-for-Complex%3CT%3E"],[250,"impl-SubAssign%3CT%3E-for-Complex%3CT%3E"],[251,"impl-Sum-for-Complex%3CT%3E"],[252,"impl-Sum%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[338,"impl-Debug-for-ParseComplexError%3CE%3E"],[339,"impl-Display-for-ParseComplexError%3CE%3E"],[511,"impl-Add%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[512,"impl-Add%3CT%3E-for-%26Ratio%3CT%3E"],[513,"impl-Add%3C%26T%3E-for-Ratio%3CT%3E"],[514,"impl-Add%3C%26T%3E-for-%26Ratio%3CT%3E"],[515,"impl-Add%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[516,"impl-Add-for-Ratio%3CT%3E"],[517,"impl-Add%3CT%3E-for-Ratio%3CT%3E"],[518,"impl-Add%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[519,"impl-AddAssign%3C%26T%3E-for-Ratio%3CT%3E"],[520,"impl-AddAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[521,"impl-AddAssign%3CT%3E-for-Ratio%3CT%3E"],[522,"impl-AddAssign-for-Ratio%3CT%3E"],[538,"impl-Div%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[539,"impl-Div%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[540,"impl-Div%3C%26T%3E-for-%26Ratio%3CT%3E"],[541,"impl-Div-for-Ratio%3CT%3E"],[542,"impl-Div%3C%26T%3E-for-Ratio%3CT%3E"],[543,"impl-Div%3CT%3E-for-%26Ratio%3CT%3E"],[544,"impl-Div%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[545,"impl-Div%3CT%3E-for-Ratio%3CT%3E"],[546,"impl-DivAssign-for-Ratio%3CT%3E"],[547,"impl-DivAssign%3C%26T%3E-for-Ratio%3CT%3E"],[548,"impl-DivAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[549,"impl-DivAssign%3CT%3E-for-Ratio%3CT%3E"],[553,"impl-Octal-for-Ratio%3CT%3E"],[554,"impl-UpperHex-for-Ratio%3CT%3E"],[555,"impl-Binary-for-Ratio%3CT%3E"],[556,"impl-LowerHex-for-Ratio%3CT%3E"],[557,"impl-Display-for-Ratio%3CT%3E"],[558,"impl-LowerExp-for-Ratio%3CT%3E"],[559,"impl-UpperExp-for-Ratio%3CT%3E"],[560,"impl-Debug-for-Ratio%3CT%3E"],[561,"impl-Debug-for-ParseRatioError"],[562,"impl-Display-for-ParseRatioError"],[564,"impl-From%3CT%3E-for-Ratio%3CT%3E"],[565,"impl-From%3C(T,+T)%3E-for-Ratio%3CT%3E"],[568,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[569,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[570,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[571,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[572,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[573,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[574,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[575,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[576,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[577,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[578,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[579,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[580,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[581,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[582,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[583,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[584,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[585,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[586,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[587,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[588,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[589,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[590,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[591,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[592,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[593,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[594,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[595,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[596,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[597,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[598,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[599,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[600,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[601,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[602,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[603,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[604,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[605,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[606,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[607,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[608,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[609,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[610,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[611,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[612,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[613,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[614,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[615,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[619,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[620,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[621,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[622,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[623,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[624,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[625,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[626,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[627,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[628,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[629,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[630,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[631,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[632,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[633,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[634,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[635,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[636,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[637,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[638,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[639,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[640,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[641,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[642,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[647,"impl-Inv-for-%26Ratio%3CT%3E"],[648,"impl-Inv-for-Ratio%3CT%3E"],[654,"impl-Mul%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[655,"impl-Mul%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[656,"impl-Mul%3CT%3E-for-Ratio%3CT%3E"],[657,"impl-Mul-for-Ratio%3CT%3E"],[658,"impl-Mul%3CT%3E-for-%26Ratio%3CT%3E"],[659,"impl-Mul%3C%26T%3E-for-%26Ratio%3CT%3E"],[660,"impl-Mul%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[661,"impl-Mul%3C%26T%3E-for-Ratio%3CT%3E"],[662,"impl-MulAssign-for-Ratio%3CT%3E"],[663,"impl-MulAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[664,"impl-MulAssign%3C%26T%3E-for-Ratio%3CT%3E"],[665,"impl-MulAssign%3CT%3E-for-Ratio%3CT%3E"],[666,"impl-Neg-for-%26Ratio%3CT%3E"],[667,"impl-Neg-for-Ratio%3CT%3E"],[673,"impl-Pow%3Ci8%3E-for-Ratio%3CT%3E"],[674,"impl-Pow%3C%26isize%3E-for-Ratio%3CT%3E"],[675,"impl-Pow%3Cu8%3E-for-%26Ratio%3CT%3E"],[676,"impl-Pow%3C%26i8%3E-for-Ratio%3CT%3E"],[677,"impl-Pow%3C%26u16%3E-for-Ratio%3CT%3E"],[678,"impl-Pow%3C%26i64%3E-for-%26Ratio%3CT%3E"],[679,"impl-Pow%3C%26u32%3E-for-Ratio%3CT%3E"],[680,"impl-Pow%3Cu32%3E-for-%26Ratio%3CT%3E"],[681,"impl-Pow%3Ci16%3E-for-Ratio%3CT%3E"],[682,"impl-Pow%3C%26u32%3E-for-%26Ratio%3CT%3E"],[683,"impl-Pow%3C%26i8%3E-for-%26Ratio%3CT%3E"],[684,"impl-Ratio%3CT%3E"],[685,"impl-Pow%3Ci8%3E-for-%26Ratio%3CT%3E"],[686,"impl-Pow%3C%26u128%3E-for-%26Ratio%3CT%3E"],[687,"impl-Pow%3Cusize%3E-for-Ratio%3CT%3E"],[688,"impl-Pow%3C%26u8%3E-for-Ratio%3CT%3E"],[689,"impl-Pow%3C%26i16%3E-for-%26Ratio%3CT%3E"],[690,"impl-Pow%3Cu8%3E-for-Ratio%3CT%3E"],[691,"impl-Pow%3C%26usize%3E-for-%26Ratio%3CT%3E"],[692,"impl-Pow%3Cisize%3E-for-%26Ratio%3CT%3E"],[693,"impl-Pow%3Ci64%3E-for-Ratio%3CT%3E"],[694,"impl-Pow%3C%26u128%3E-for-Ratio%3CT%3E"],[695,"impl-Pow%3C%26usize%3E-for-Ratio%3CT%3E"],[696,"impl-Pow%3Ci128%3E-for-Ratio%3CT%3E"],[697,"impl-Pow%3C%26i32%3E-for-Ratio%3CT%3E"],[698,"impl-Pow%3Cu32%3E-for-Ratio%3CT%3E"],[699,"impl-Pow%3Cu64%3E-for-%26Ratio%3CT%3E"],[700,"impl-Pow%3Cusize%3E-for-%26Ratio%3CT%3E"],[701,"impl-Pow%3C%26i32%3E-for-%26Ratio%3CT%3E"],[702,"impl-Pow%3Cu64%3E-for-Ratio%3CT%3E"],[703,"impl-Pow%3Cu16%3E-for-Ratio%3CT%3E"],[704,"impl-Pow%3C%26u16%3E-for-%26Ratio%3CT%3E"],[705,"impl-Pow%3C%26u64%3E-for-%26Ratio%3CT%3E"],[706,"impl-Pow%3C%26u8%3E-for-%26Ratio%3CT%3E"],[707,"impl-Pow%3Ci16%3E-for-%26Ratio%3CT%3E"],[708,"impl-Pow%3Ci32%3E-for-Ratio%3CT%3E"],[709,"impl-Pow%3Ci64%3E-for-%26Ratio%3CT%3E"],[710,"impl-Pow%3C%26i128%3E-for-%26Ratio%3CT%3E"],[711,"impl-Pow%3Cu128%3E-for-Ratio%3CT%3E"],[712,"impl-Pow%3Ci128%3E-for-%26Ratio%3CT%3E"],[713,"impl-Pow%3Ci32%3E-for-%26Ratio%3CT%3E"],[714,"impl-Pow%3C%26u64%3E-for-Ratio%3CT%3E"],[715,"impl-Pow%3C%26i128%3E-for-Ratio%3CT%3E"],[716,"impl-Pow%3C%26isize%3E-for-%26Ratio%3CT%3E"],[717,"impl-Pow%3C%26i16%3E-for-Ratio%3CT%3E"],[718,"impl-Pow%3Cu128%3E-for-%26Ratio%3CT%3E"],[719,"impl-Pow%3Cu16%3E-for-%26Ratio%3CT%3E"],[720,"impl-Pow%3Cisize%3E-for-Ratio%3CT%3E"],[721,"impl-Pow%3C%26i64%3E-for-Ratio%3CT%3E"],[722,"impl-Product-for-Ratio%3CT%3E"],[723,"impl-Product%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[726,"impl-Rem-for-Ratio%3CT%3E"],[727,"impl-Rem%3C%26T%3E-for-Ratio%3CT%3E"],[728,"impl-Rem%3C%26T%3E-for-%26Ratio%3CT%3E"],[729,"impl-Rem%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[730,"impl-Rem%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[731,"impl-Rem%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[732,"impl-Rem%3CT%3E-for-Ratio%3CT%3E"],[733,"impl-Rem%3CT%3E-for-%26Ratio%3CT%3E"],[734,"impl-RemAssign%3CT%3E-for-Ratio%3CT%3E"],[735,"impl-RemAssign-for-Ratio%3CT%3E"],[736,"impl-RemAssign%3C%26T%3E-for-Ratio%3CT%3E"],[737,"impl-RemAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[742,"impl-Sub%3C%26T%3E-for-%26Ratio%3CT%3E"],[743,"impl-Sub%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[744,"impl-Sub%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[745,"impl-Sub%3CT%3E-for-%26Ratio%3CT%3E"],[746,"impl-Sub-for-Ratio%3CT%3E"],[747,"impl-Sub%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[748,"impl-Sub%3CT%3E-for-Ratio%3CT%3E"],[749,"impl-Sub%3C%26T%3E-for-Ratio%3CT%3E"],[750,"impl-SubAssign%3C%26T%3E-for-Ratio%3CT%3E"],[751,"impl-SubAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[752,"impl-SubAssign%3CT%3E-for-Ratio%3CT%3E"],[753,"impl-SubAssign-for-Ratio%3CT%3E"],[754,"impl-Sum-for-Ratio%3CT%3E"],[755,"impl-Sum%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[756,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[757,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[758,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[759,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[760,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[761,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[762,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[763,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[764,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[765,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[766,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[767,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[768,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[769,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[770,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[771,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[772,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[773,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[774,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[775,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[776,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[777,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[778,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[779,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[780,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[781,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[782,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[783,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[784,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[785,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[787,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[788,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[789,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[790,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[791,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[792,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[793,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[794,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[795,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[796,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[797,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[798,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[799,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[800,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[801,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[802,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[803,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[804,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[805,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[806,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[919,"impl-Debug-for-ParseFloatError"],[920,"impl-Display-for-ParseFloatError"]]},\
"num_complex":{"doc":"Complex numbers.","t":"DGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Complex","Complex32","Complex64","ParseComplexError","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","as_","borrow","borrow","borrow_mut","borrow_mut","clone","conj","default","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","im","im","im","into","into","inv","inv","inv","is_finite","is_infinite","is_nan","is_normal","is_one","is_zero","l1_norm","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","norm_sqr","one","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powi","powu","product","product","re","re","re","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","scale","set_one","set_zero","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unscale","zero"],"q":[[0,"num_complex"],[189,"core::clone"],[190,"num_traits"],[191,"num_traits"],[192,"num_traits::cast"],[193,"core::ops::arith"],[194,"core::default"],[195,"core::cmp"],[196,"core::fmt"],[197,"core::fmt"],[198,"num_traits::cast"],[199,"core::str::traits"],[200,"core::hash"],[201,"core::hash"],[202,"num_traits::sign"],[203,"num_traits::ops::mul_add"],[204,"num_traits::ops::mul_add"],[205,"core::any"]],"d":["A complex number in Cartesian form.","","","","","","","","","","","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","Imaginary portion of the complex number","Imaginary portion of the complex number","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>1/self</code>","","Checks if the given complex number is finite","Checks if the given complex number is infinite","Checks if the given complex number is NaN","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","","","","","","","","","","","","","","","","","","Create a new Complex","Returns the square of the norm (since <code>T</code> doesn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Real portion of the complex number","Real portion of the complex number","Real portion of the complex number","","","","","","","","","","","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,1,1,1,1,1,1,1,1,12,12,1,1,1,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,53,54,1,1,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,53,54,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,12,1,12,1,12,1,1],"f":[0,0,0,0,[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-2]]],-1,6,[[7,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[[1,[-1]]],[[1,[-1]]],[2,3,8]],[[],[[1,[-1]]],9],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],[1,[-1]]],10,11],[[[12,[-1]],[12,[-1]]],10,11],[[[1,[-1]],13],14,[15,3,16,2]],[[[1,[-1]],13],14,[17,3,16,2]],[[[1,[-1]],13],14,[18,3,16,2]],[[[1,[-1]],13],14,[19,3,16,2]],[[[1,[-1]],13],14,20],[[[1,[-1]],13],14,[21,3,16,2]],[[[1,[-1]],13],14,[22,3,16,2]],[[[1,[-1]],13],14,[23,3,16,2]],[[[12,[-1]],13],14,20],[[[12,[-1]],13],14,21],[-1,[[1,[-1]]],[2,3]],[-1,-1,[]],[-1,[[24,[[1,[-2]]]]],25,[26,3]],[-1,[[1,[-1]]],[2,3]],[-1,-1,[]],[27,[[24,[[1,[-1]]]]],[28,3]],[29,[[24,[[1,[-1]]]]],[28,3]],[30,[[24,[[1,[-1]]]]],[28,3]],[31,[[24,[[1,[-1]]]]],[28,3]],[32,[[24,[[1,[-1]]]]],[28,3]],[33,[[24,[[1,[-1]]]]],[28,3]],[34,[[24,[[1,[-1]]]]],[28,3]],[35,[[24,[[1,[-1]]]]],[28,3]],[36,[[37,[[1,[-1]]]]],[38,3,2]],[[36,39],[[37,[[1,[-1]]]]],[3,2]],[40,[[24,[[1,[-1]]]]],[28,3]],[41,[[24,[[1,[-1]]]]],[28,3]],[39,[[24,[[1,[-1]]]]],[28,3]],[42,[[24,[[1,[-1]]]]],[28,3]],[43,[[24,[[1,[-1]]]]],[28,3]],[44,[[24,[[1,[-1]]]]],[28,3]],[[[1,[-1]],-2],4,45,46],[[],[[1,[-1]]],[2,3]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[],[2,3,8]],[[[1,[-1]]],[[1,[-1]]],[2,3,8]],[[[1,[-1]]],[],[2,3,8]],[[[1,[-1]]],10,47],[[[1,[-1]]],10,47],[[[1,[-1]]],10,47],[[[1,[-1]]],10,47],[[[1,[-1]]],10,[2,3]],[[[1,[-1]]],10,[2,3]],[[[1,[-1]]],-1,[2,48]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3,49]],[[[1,[-1]],[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3,49]],[[[1,[-1]],[1,[-1]],[1,[-1]]],4,[2,5,50]],[[[1,[-1]],[1,[-1]],[1,[-1]]],4,[2,5,50]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]]],[],[2,3,8]],[[[1,[-1]]],[],[2,3,8]],[[-1,-1],[[1,[-1]]],[]],[[[1,[-1]]],-1,[2,3]],[[],[[1,[-1]]],[2,3]],[[[1,[-1]],32],[],[2,3,8]],[[[1,[-1]],32],[],[2,3,8]],[[[1,[-1]],42],[],[2,3]],[[[1,[-1]],30],[],[2,3,8]],[[[1,[-1]],34],[],[2,3,8]],[[[1,[-1]],35],[],[2,3,8]],[[[1,[-1]],35],[],[2,3,8]],[[[1,[-1]],30],[],[2,3,8]],[[[1,[-1]],34],[],[2,3,8]],[[[1,[-1]],31],[],[2,3,8]],[[[1,[-1]],39],[],[2,3]],[[[1,[-1]],40],[],[2,3]],[[[1,[-1]],33],[],[2,3,8]],[[[1,[-1]],41],[],[2,3]],[[[1,[-1]],41],[],[2,3]],[[[1,[-1]],43],[],[2,3]],[[[1,[-1]],33],[],[2,3,8]],[[[1,[-1]],40],[],[2,3]],[[[1,[-1]],43],[],[2,3]],[[[1,[-1]],44],[],[2,3]],[[[1,[-1]],44],[],[2,3]],[[[1,[-1]],42],[],[2,3]],[[[1,[-1]],39],[],[2,3]],[[[1,[-1]],31],[],[2,3,8]],[[[1,[-1]],32],[[1,[-1]]],[2,3,8]],[[[1,[-1]],39],[[1,[-1]]],[2,3]],[-1,[[1,[-2]]],51,[3,2]],[-1,[[1,[-2]]],51,[3,2]],0,0,0,[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]]],4,[2,3]],[[[1,[-1]]],4,[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],-1],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],[],[2,3]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[[[1,[-1]],[1,[-1]]],4,[2,5]],[[[1,[-1]],-1],4,[2,5]],[-1,[[1,[-2]]],51,[3,2]],[-1,[[1,[-2]]],51,[3,2]],[[[1,[-1]]],[[24,[27]]],[25,3]],[[[1,[-1]]],[[24,[29]]],[25,3]],[[[1,[-1]]],[[24,[30]]],[25,3]],[[[1,[-1]]],[[24,[31]]],[25,3]],[[[1,[-1]]],[[24,[32]]],[25,3]],[[[1,[-1]]],[[24,[33]]],[25,3]],[[[1,[-1]]],[[24,[34]]],[25,3]],[[[1,[-1]]],[[24,[35]]],[25,3]],[[[1,[-1]]],[[24,[40]]],[25,3]],[[[1,[-1]]],[[24,[41]]],[25,3]],[[[1,[-1]]],[[24,[39]]],[25,3]],[[[1,[-1]]],[[24,[42]]],[25,3]],[[[1,[-1]]],[[24,[43]]],[25,3]],[[[1,[-1]]],[[24,[44]]],[25,3]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,[[37,[-2]]],[],[]],[-1,52,[]],[-1,52,[]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[],[[1,[-1]]],[2,3]]],"c":[],"p":[[3,"Complex",0],[8,"Clone",189],[8,"Num",190],[15,"tuple"],[8,"NumAssign",190],[8,"Copy",191],[8,"AsPrimitive",192],[8,"Neg",193],[8,"Default",194],[15,"bool"],[8,"PartialEq",195],[3,"ParseComplexError",0],[3,"Formatter",196],[6,"Result",196],[8,"Binary",196],[8,"PartialOrd",195],[8,"UpperHex",196],[8,"LowerHex",196],[8,"LowerExp",196],[8,"Debug",196],[8,"Display",196],[8,"Octal",196],[8,"UpperExp",196],[4,"Option",197],[8,"ToPrimitive",192],[8,"NumCast",192],[15,"f32"],[8,"FromPrimitive",192],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[4,"Result",198],[8,"FromStr",199],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Hash",200],[8,"Hasher",200],[8,"FloatCore",201],[8,"Signed",202],[8,"MulAdd",203],[8,"MulAddAssign",203],[8,"Iterator",204],[3,"TypeId",205],[6,"Complex32",0],[6,"Complex64",0]],"b":[[4,"impl-Add%3CT%3E-for-Complex%3CT%3E"],[5,"impl-Add%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[6,"impl-Add%3CT%3E-for-%26Complex%3CT%3E"],[7,"impl-Add%3C%26T%3E-for-%26Complex%3CT%3E"],[8,"impl-Add%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[9,"impl-Add-for-Complex%3CT%3E"],[10,"impl-Add%3C%26T%3E-for-Complex%3CT%3E"],[11,"impl-Add%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[12,"impl-AddAssign%3C%26T%3E-for-Complex%3CT%3E"],[13,"impl-AddAssign%3CT%3E-for-Complex%3CT%3E"],[14,"impl-AddAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[15,"impl-AddAssign-for-Complex%3CT%3E"],[24,"impl-Div%3C%26T%3E-for-%26Complex%3CT%3E"],[25,"impl-Div-for-Complex%3CT%3E"],[26,"impl-Div%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[27,"impl-Div%3CT%3E-for-%26Complex%3CT%3E"],[28,"impl-Div%3C%26T%3E-for-Complex%3CT%3E"],[29,"impl-Div%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[30,"impl-Div%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[31,"impl-Div%3CT%3E-for-Complex%3CT%3E"],[32,"impl-DivAssign-for-Complex%3CT%3E"],[33,"impl-DivAssign%3C%26T%3E-for-Complex%3CT%3E"],[34,"impl-DivAssign%3CT%3E-for-Complex%3CT%3E"],[35,"impl-DivAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[38,"impl-Binary-for-Complex%3CT%3E"],[39,"impl-UpperHex-for-Complex%3CT%3E"],[40,"impl-LowerHex-for-Complex%3CT%3E"],[41,"impl-LowerExp-for-Complex%3CT%3E"],[42,"impl-Debug-for-Complex%3CT%3E"],[43,"impl-Display-for-Complex%3CT%3E"],[44,"impl-Octal-for-Complex%3CT%3E"],[45,"impl-UpperExp-for-Complex%3CT%3E"],[46,"impl-Debug-for-ParseComplexError%3CE%3E"],[47,"impl-Display-for-ParseComplexError%3CE%3E"],[48,"impl-From%3CT%3E-for-Complex%3CT%3E"],[50,"impl-NumCast-for-Complex%3CT%3E"],[51,"impl-From%3C%26T%3E-for-Complex%3CT%3E"],[76,"impl-Inv-for-%26Complex%3CT%3E"],[77,"impl-Complex%3CT%3E"],[78,"impl-Inv-for-Complex%3CT%3E"],[86,"impl-Mul%3CT%3E-for-%26Complex%3CT%3E"],[87,"impl-Mul%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[88,"impl-Mul-for-Complex%3CT%3E"],[89,"impl-Mul%3CT%3E-for-Complex%3CT%3E"],[90,"impl-Mul%3C%26T%3E-for-%26Complex%3CT%3E"],[91,"impl-Mul%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[92,"impl-Mul%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[93,"impl-Mul%3C%26T%3E-for-Complex%3CT%3E"],[94,"impl-MulAdd-for-Complex%3CT%3E"],[95,"impl-MulAdd%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[96,"impl-MulAddAssign%3C%26Complex%3CT%3E,+%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[97,"impl-MulAddAssign-for-Complex%3CT%3E"],[98,"impl-MulAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[99,"impl-MulAssign%3C%26T%3E-for-Complex%3CT%3E"],[100,"impl-MulAssign-for-Complex%3CT%3E"],[101,"impl-MulAssign%3CT%3E-for-Complex%3CT%3E"],[102,"impl-Neg-for-Complex%3CT%3E"],[103,"impl-Neg-for-%26Complex%3CT%3E"],[107,"impl-Pow%3Ci32%3E-for-%26Complex%3CT%3E"],[108,"impl-Pow%3C%26i32%3E-for-%26Complex%3CT%3E"],[109,"impl-Pow%3Cu64%3E-for-%26Complex%3CT%3E"],[110,"impl-Pow%3Ci128%3E-for-%26Complex%3CT%3E"],[111,"impl-Pow%3Ci8%3E-for-%26Complex%3CT%3E"],[112,"impl-Pow%3Cisize%3E-for-%26Complex%3CT%3E"],[113,"impl-Pow%3C%26isize%3E-for-%26Complex%3CT%3E"],[114,"impl-Pow%3C%26i128%3E-for-%26Complex%3CT%3E"],[115,"impl-Pow%3C%26i8%3E-for-%26Complex%3CT%3E"],[116,"impl-Pow%3Ci16%3E-for-%26Complex%3CT%3E"],[117,"impl-Pow%3C%26u32%3E-for-%26Complex%3CT%3E"],[118,"impl-Pow%3Cu128%3E-for-%26Complex%3CT%3E"],[119,"impl-Pow%3Ci64%3E-for-%26Complex%3CT%3E"],[120,"impl-Pow%3Cu16%3E-for-%26Complex%3CT%3E"],[121,"impl-Pow%3C%26u16%3E-for-%26Complex%3CT%3E"],[122,"impl-Pow%3C%26u8%3E-for-%26Complex%3CT%3E"],[123,"impl-Pow%3C%26i64%3E-for-%26Complex%3CT%3E"],[124,"impl-Pow%3C%26u128%3E-for-%26Complex%3CT%3E"],[125,"impl-Pow%3Cu8%3E-for-%26Complex%3CT%3E"],[126,"impl-Pow%3C%26usize%3E-for-%26Complex%3CT%3E"],[127,"impl-Pow%3Cusize%3E-for-%26Complex%3CT%3E"],[128,"impl-Pow%3C%26u64%3E-for-%26Complex%3CT%3E"],[129,"impl-Pow%3Cu32%3E-for-%26Complex%3CT%3E"],[130,"impl-Pow%3C%26i16%3E-for-%26Complex%3CT%3E"],[133,"impl-Product-for-Complex%3CT%3E"],[134,"impl-Product%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[138,"impl-Rem%3CT%3E-for-%26Complex%3CT%3E"],[139,"impl-Rem%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[140,"impl-Rem%3C%26T%3E-for-Complex%3CT%3E"],[141,"impl-Rem%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[142,"impl-Rem%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[143,"impl-Rem%3CT%3E-for-Complex%3CT%3E"],[144,"impl-Rem-for-Complex%3CT%3E"],[145,"impl-Rem%3C%26T%3E-for-%26Complex%3CT%3E"],[146,"impl-RemAssign%3CT%3E-for-Complex%3CT%3E"],[147,"impl-RemAssign%3C%26T%3E-for-Complex%3CT%3E"],[148,"impl-RemAssign-for-Complex%3CT%3E"],[149,"impl-RemAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[153,"impl-Sub%3C%26Complex%3CT%3E%3E-for-%26Complex%3CT%3E"],[154,"impl-Sub%3CT%3E-for-Complex%3CT%3E"],[155,"impl-Sub%3C%26T%3E-for-Complex%3CT%3E"],[156,"impl-Sub%3C%26T%3E-for-%26Complex%3CT%3E"],[157,"impl-Sub%3CT%3E-for-%26Complex%3CT%3E"],[158,"impl-Sub-for-Complex%3CT%3E"],[159,"impl-Sub%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[160,"impl-Sub%3CComplex%3CT%3E%3E-for-%26Complex%3CT%3E"],[161,"impl-SubAssign-for-Complex%3CT%3E"],[162,"impl-SubAssign%3CT%3E-for-Complex%3CT%3E"],[163,"impl-SubAssign%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"],[164,"impl-SubAssign%3C%26T%3E-for-Complex%3CT%3E"],[165,"impl-Sum-for-Complex%3CT%3E"],[166,"impl-Sum%3C%26Complex%3CT%3E%3E-for-Complex%3CT%3E"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":"IDIDIFKFKFLLLLFLLLFLFKFLFKKLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLLMM","n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"num_integer"],[66,"core::clone"],[67,"core::cmp"],[68,"num_traits::sign"],[69,"core::fmt"],[70,"core::fmt"],[71,"core::result"],[72,"core::any"]],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,14,5,14,5,0,4,4,5,0,2,0,2,0,2,0,2,2,5,2,2,5,14,5,0,2,5,0,2,14,5,14,2,2,2,0,2,0,2,0,14,14,2,0,4,2,0,4,4,14,5,14,5,14,5,5,5],"f":[0,0,0,0,0,[[-1,-1],-1,1],[[-1,-1],-1,[]],[[-1,-1],-1,1],[[-1,-1],-1,[]],[[-1,-1],-1,[2,3]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,4],[-1,-1,[]],[-1,-1,[]],[[[5,[-1]]],[[5,[-1]]],3],[[-1,-1],-1,2],[[-1,-1],-1,[]],[[-1,-1],-1,2],[[-1,-1],-1,[]],[[-1,-1],[[6,[-1,-1]]],2],[[-1,-1],[[6,[-1,-1]]],[]],[[-1,-1],[[6,[-1,-1]]],2],[[-1,-1],[[6,[-1,-1]]],[]],[[-1,-1],7,[]],[[[5,[-1]],[5,[-1]]],7,8],[[-1,-1],[[5,[-1]]],3],[[-1,-1],[[6,[[5,[-1]],-1]]],[3,9]],[[[5,[-1]],10],11,12],[-1,-1,[]],[-1,-1,[]],[[-1,-1],-1,2],[[-1,-1],-1,[]],0,[[-1,-1],[[6,[-1,-1]]],2],[[-1,-1],[[6,[-1,-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,7,[]],[[-1,-1],7,[]],[-1,7,[]],[[-1,-1],-1,2],[[-1,-1],-1,[]],[[-1,-1],-1,2],[[-1,-1],-1,[]],[[[13,[-1]]],-1,[]],[-1,[[14,[-1]]],2],[[[14,[-1]]],[[15,[-1]]],[2,3]],[[-1,-1],-1,3],[[-1,16],-1,4],[[-1,16],-1,[]],[[-1,-1],-1,3],[-1,-1,4],[-1,-1,[]],[-1,-1,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],0,0],"c":[],"p":[[8,"Average",0],[8,"Integer",0],[8,"Clone",66],[8,"Roots",0],[3,"ExtendedGcd",0],[15,"tuple"],[15,"bool"],[8,"PartialEq",67],[8,"Signed",68],[3,"Formatter",69],[6,"Result",69],[8,"Debug",69],[15,"slice"],[3,"IterBinomial",0],[4,"Option",70],[15,"u32"],[4,"Result",71],[3,"TypeId",72]],"b":[]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"num_iter"],[84,"core::clone"],[85,"core::ops::range"],[86,"core::option"],[87,"num_traits::ops::checked"],[88,"core::cmp"],[89,"core::cmp"],[90,"num_traits::cast"],[91,"core::ops::arith"],[92,"num_traits::identities"],[93,"num_traits::identities"],[94,"core::any"]],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,3,4,5,6,7,1,3,4,5,6,7,1,3,4,5,6,7,1,3,6,1,3,4,5,6,7,1,3,4,5,6,7,1,3,4,5,6,7,1,3,4,5,6,7,1,3,0,0,0,0,0,0,1,3,6,7,1,3,6,1,3,4,5,6,7,1,3,4,5,6,7,1,3,4,5,6,7],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[[3,[-1]]],[[3,[-1]]],2],[[[4,[-1]]],[[4,[-1]]],2],[[[5,[-1]]],[[5,[-1]]],2],[[[6,[-1]]],[[6,[-1]]],2],[[[7,[-1]]],[[7,[-1]]],2],[[[1,[-1]]],[[8,[-1]]],[]],[[[3,[-1]]],[[8,[-1]]],[]],[[[6,[-1]]],[[8,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[9,[-1]]],[]],[[[3,[-1]]],[[9,[-1]]],[]],[[[4,[-1]]],[[9,[-1]]],[10,11,2]],[[[5,[-1]]],[[9,[-1]]],[10,11,2,12]],[[[6,[-1]]],[[9,[-1]]],[]],[[[7,[-1]]],[[9,[-1]]],[]],[[[1,[-1]]],[[9,[-1]]],[13,2,14]],[[[3,[-1]]],[[9,[-1]]],[]],[[-1,-1],[[1,[-1]]],[15,11,2,16]],[-1,[[6,[-1]]],[15,2,16]],[[-1,-1],[[3,[-1]]],[15,11,2,16]],[[-1,-1,-1],[[4,[-1]]],[10,11,2,17]],[[-1,-1],[[7,[-1]]],[15,2]],[[-1,-1,-1],[[5,[-1]]],[10,11,2,17]],[[[1,[-1]]],[[19,[18,[9,[18]]]]],[]],[[[3,[-1]]],[[19,[18,[9,[18]]]]],[]],[[[6,[-1]]],[[19,[18,[9,[18]]]]],[]],[[[7,[-1]]],[[19,[18,[9,[18]]]]],[]],[[[1,[-1]]],[[8,[-1]]],[]],[[[3,[-1]]],[[8,[-1]]],[]],[[[6,[-1]]],[[8,[-1]]],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]]],"c":[],"p":[[3,"Range",0],[8,"Clone",84],[3,"RangeInclusive",0],[3,"RangeStep",0],[3,"RangeStepInclusive",0],[3,"RangeFrom",0],[3,"RangeStepFrom",0],[4,"Bound",85],[4,"Option",86],[8,"CheckedAdd",87],[8,"PartialOrd",88],[8,"PartialEq",88],[8,"Integer",89],[8,"ToPrimitive",90],[8,"Add",91],[8,"One",92],[8,"Zero",92],[15,"usize"],[15,"tuple"],[4,"Result",93],[3,"TypeId",94]],"b":[]},\
"num_rational":{"doc":"Rational numbers","t":"DDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","cmp","default","denom","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i128","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_i64","to_integer","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u128","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":[[0,"num_rational"],[311,"core::clone"],[312,"num_integer"],[313,"num_traits::sign"],[314,"num_traits"],[315,"core::option"],[316,"num_traits::float"],[317,"num_traits::cast"],[318,"num_traits::bounds"],[319,"num_traits::ops::checked"],[320,"num_traits::ops::checked"],[321,"core::fmt"],[322,"core::fmt"],[323,"core::str::traits"],[324,"core::hash"],[325,"core::hash"],[326,"num_traits::pow"],[327,"core::iter::traits::iterator"],[328,"core::any"]],"d":["","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","Returns zero","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","","","","","","","","","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,1,14,1,1,1,1,1,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,1,1,1,1,1,1,1,1,1,14,14,1,1,1,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,1,14,1,14,1],"f":[0,0,0,0,0,[[[1,[-1]]],[[1,[-1]]],[2,3,4]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3,4]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[-1,[[7,[[1,[-2]]]]],[8,9],[3,4,10,9,2]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[7,[[1,[-1]]]]],[2,3,11,12]],[[[1,[-1]],[1,[-1]]],[[7,[[1,[-1]]]]],[2,3,11]],[[[1,[-1]],[1,[-1]]],[[7,[[1,[-1]]]]],[2,3,11]],[[[1,[-1]],[1,[-1]]],[[7,[[1,[-1]]]]],[2,3,11,13]],[[[1,[-1]]],[[1,[-1]]],2],[14,14],[[[1,[-1]],[1,[-1]]],15,[2,3]],[[],[[1,[-1]]],[2,3]],[[[1,[-1]]],-1,[]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],16,[2,3]],[[14,14],16],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],17],18,[19,2,3]],[[[1,[-1]],17],18,[20,2,3]],[[[1,[-1]],17],18,[21,2,3]],[[[1,[-1]],17],18,[22,2,3]],[[[1,[-1]],17],18,[23,2,3]],[[[1,[-1]],17],18,24],[[[1,[-1]],17],18,[25,2,3]],[[[1,[-1]],17],18,[26,2,3]],[[14,17],18],[[14,17],18],[[[1,[-1]]],[[1,[-1]]],[2,3]],[-1,-1,[]],[-1,[[1,[-1]]],[2,3]],[[[5,[-1,-1]]],[[1,[-1]]],[2,3]],[-1,-1,[]],[27,[[7,[[1,[28]]]]]],[27,[[7,[[1,[29]]]]]],[27,[[7,[[1,[30]]]]]],[27,[[7,[[1,[31]]]]]],[27,[[7,[[1,[32]]]]]],[27,[[7,[[1,[33]]]]]],[27,[[7,[[1,[34]]]]]],[27,[[7,[[1,[35]]]]]],[27,[[7,[[1,[36]]]]]],[27,[[7,[[1,[37]]]]]],[27,[[7,[[1,[38]]]]]],[27,[[7,[[1,[39]]]]]],[40,[[7,[[1,[37]]]]]],[40,[[7,[[1,[30]]]]]],[40,[[7,[[1,[31]]]]]],[40,[[7,[[1,[38]]]]]],[40,[[7,[[1,[29]]]]]],[40,[[7,[[1,[33]]]]]],[40,[[7,[[1,[35]]]]]],[40,[[7,[[1,[39]]]]]],[40,[[7,[[1,[28]]]]]],[40,[[7,[[1,[34]]]]]],[40,[[7,[[1,[36]]]]]],[40,[[7,[[1,[32]]]]]],[38,[[7,[[1,[34]]]]]],[38,[[7,[[1,[31]]]]]],[38,[[7,[[1,[32]]]]]],[38,[[7,[[1,[35]]]]]],[38,[[7,[[1,[36]]]]]],[38,[[7,[[1,[37]]]]]],[38,[[7,[[1,[30]]]]]],[38,[[7,[[1,[39]]]]]],[38,[[7,[[1,[28]]]]]],[38,[[7,[[1,[38]]]]]],[38,[[7,[[1,[29]]]]]],[38,[[7,[[1,[33]]]]]],[28,[[7,[[1,[33]]]]]],[28,[[7,[[1,[31]]]]]],[28,[[7,[[1,[38]]]]]],[28,[[7,[[1,[28]]]]]],[28,[[7,[[1,[37]]]]]],[28,[[7,[[1,[35]]]]]],[28,[[7,[[1,[34]]]]]],[28,[[7,[[1,[39]]]]]],[28,[[7,[[1,[29]]]]]],[28,[[7,[[1,[30]]]]]],[28,[[7,[[1,[36]]]]]],[28,[[7,[[1,[32]]]]]],[-1,[[1,[-1]]],[2,3]],[41,[[42,[[1,[-1]],14]]],[43,2,3]],[[41,30],[[42,[[1,[-1]],14]]],[2,3]],[37,[[7,[[1,[32]]]]]],[37,[[7,[[1,[36]]]]]],[37,[[7,[[1,[33]]]]]],[37,[[7,[[1,[30]]]]]],[37,[[7,[[1,[39]]]]]],[37,[[7,[[1,[28]]]]]],[37,[[7,[[1,[37]]]]]],[37,[[7,[[1,[31]]]]]],[37,[[7,[[1,[34]]]]]],[37,[[7,[[1,[35]]]]]],[37,[[7,[[1,[29]]]]]],[37,[[7,[[1,[38]]]]]],[32,[[7,[[1,[31]]]]]],[32,[[7,[[1,[36]]]]]],[32,[[7,[[1,[35]]]]]],[32,[[7,[[1,[34]]]]]],[32,[[7,[[1,[29]]]]]],[32,[[7,[[1,[38]]]]]],[32,[[7,[[1,[30]]]]]],[32,[[7,[[1,[33]]]]]],[32,[[7,[[1,[39]]]]]],[32,[[7,[[1,[37]]]]]],[32,[[7,[[1,[32]]]]]],[32,[[7,[[1,[28]]]]]],[[[1,[-1]],-2],5,[2,3,44],45],[-1,-2,[],[]],[[[1,[-1]]],[[5,[-1,-1]]],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]]],16,[2,3]],[[[1,[-1]]],16,[2,3,4]],[[[1,[-1]]],16,[2,3]],[[[1,[-1]]],16,[2,3,4]],[[[1,[-1]]],16,[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]]],[[1,[-1]]],[2,3,46]],[[[1,[-1]]],[[1,[-1]]],[2,3,46]],[[-1,-1],[[1,[-1]]],[2,3]],[[-1,-1],[[1,[-1]]],[]],[[[1,[-1]]],-1,[]],[[],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[7,[15]]],[2,3]],[[[1,[-1]],38],[[1,[-1]]],[2,3]],[[[1,[-1]],28],[[1,[-1]]],[2,3,[47,[32]]]],[[[1,[-1]],29],[[1,[-1]]],[2,3]],[[[1,[-1]],39],[[1,[-1]]],[2,3,[47,[39]]]],[[[1,[-1]],35],[[1,[-1]]],[2,3]],[[[1,[-1]],32],[[1,[-1]]],[2,3,[47,[32]]]],[[[1,[-1]],33],[[1,[-1]]],[2,3]],[[[1,[-1]],29],[[1,[-1]]],[2,3,[47,[29]]]],[[[1,[-1]],33],[[1,[-1]]],[2,3,[47,[30]]]],[[[1,[-1]],30],[[1,[-1]]],[2,3]],[[[1,[-1]],28],[[1,[-1]]],[2,3,[47,[32]]]],[[[1,[-1]],34],[[1,[-1]]],[2,3]],[[[1,[-1]],37],[[1,[-1]]],[2,3]],[[[1,[-1]],31],[[1,[-1]]],[2,3]],[[[1,[-1]],36],[[1,[-1]]],[2,3,[47,[29]]]],[[[1,[-1]],36],[[1,[-1]]],[2,3]],[[[1,[-1]],32],[[1,[-1]]],[2,3]],[[[1,[-1]],31],[[1,[-1]]],[2,3,[47,[31]]]],[[[1,[-1]],36],[[1,[-1]]],[2,3,[47,[29]]]],[[[1,[-1]],33],[[1,[-1]]],[2,3]],[[[1,[-1]],34],[[1,[-1]]],[2,3]],[[[1,[-1]],39],[[1,[-1]]],[2,3]],[[[1,[-1]],39],[[1,[-1]]],[2,3]],[[[1,[-1]],34],[[1,[-1]]],[2,3,[47,[31]]]],[[[1,[-1]],32],[[1,[-1]]],[2,3,[47,[32]]]],[[[1,[-1]],31],[[1,[-1]]],[2,3]],[[[1,[-1]],38],[[1,[-1]]],[2,3]],[[[1,[-1]],28],[[1,[-1]]],[2,3]],[[[1,[-1]],38],[[1,[-1]]],[2,3,[47,[37]]]],[[[1,[-1]],37],[[1,[-1]]],[2,3,[47,[37]]]],[[[1,[-1]],31],[[1,[-1]]],[2,3,[47,[31]]]],[[[1,[-1]],30],[[1,[-1]]],[2,3]],[[[1,[-1]],30],[[1,[-1]]],[2,3,[47,[30]]]],[[[1,[-1]],28],[[1,[-1]]],[2,3]],[[[1,[-1]],39],[[1,[-1]]],[2,3,[47,[39]]]],[[[1,[-1]],32],[[1,[-1]]],[2,3]],[[[1,[-1]],33],[[1,[-1]]],[2,3,[47,[30]]]],[[[1,[-1]],29],[[1,[-1]]],[2,3]],[[[1,[-1]],33],[[1,[-1]]],[2,3]],[[[1,[-1]],35],[[1,[-1]]],[2,3,[47,[39]]]],[[[1,[-1]],37],[[1,[-1]]],[2,3,[47,[37]]]],[[[1,[-1]],38],[[1,[-1]]],[2,3,[47,[37]]]],[[[1,[-1]],37],[[1,[-1]]],[2,3]],[[[1,[-1]],36],[[1,[-1]]],[2,3]],[[[1,[-1]],35],[[1,[-1]]],[2,3,[47,[39]]]],[[[1,[-1]],34],[[1,[-1]]],[2,3,[47,[31]]]],[[[1,[-1]],29],[[1,[-1]]],[2,3,[47,[29]]]],[[[1,[-1]],30],[[1,[-1]]],[2,3,[47,[30]]]],[[[1,[-1]],35],[[1,[-1]]],[2,3]],[-1,[[1,[-2]]],48,[3,2]],[-1,[[1,[-2]]],48,[3,2]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]]],5,[2,3]],[[[1,[-1]]],5,[2,3]],[[[1,[-1]]],[[1,[-1]]],[2,3,4]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],[[1,[-1]]],[2,3]],[[[1,[-1]],[1,[-1]]],[[1,[-1]]],[2,3]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],-1],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[[[1,[-1]],[1,[-1]]],5,[2,3,6]],[-1,[[1,[-2]]],48,[3,2]],[-1,[[1,[-2]]],48,[3,2]],[[[1,[30]]],[[7,[40]]]],[[[1,[31]]],[[7,[40]]]],[[[1,[34]]],[[7,[40]]]],[[[1,[36]]],[[7,[40]]]],[[[1,[28]]],[[7,[40]]]],[[[1,[32]]],[[7,[40]]]],[[[1,[39]]],[[7,[40]]]],[[[1,[29]]],[[7,[40]]]],[[[1,[33]]],[[7,[40]]]],[[[1,[35]]],[[7,[40]]]],[[[1,[31]]],[[7,[38]]]],[[[1,[34]]],[[7,[38]]]],[[[1,[32]]],[[7,[38]]]],[[[1,[30]]],[[7,[38]]]],[[[1,[29]]],[[7,[38]]]],[[[1,[36]]],[[7,[38]]]],[[[1,[35]]],[[7,[38]]]],[[[1,[33]]],[[7,[38]]]],[[[1,[28]]],[[7,[38]]]],[[[1,[39]]],[[7,[38]]]],[[[1,[39]]],[[7,[28]]]],[[[1,[34]]],[[7,[28]]]],[[[1,[32]]],[[7,[28]]]],[[[1,[29]]],[[7,[28]]]],[[[1,[30]]],[[7,[28]]]],[[[1,[31]]],[[7,[28]]]],[[[1,[33]]],[[7,[28]]]],[[[1,[35]]],[[7,[28]]]],[[[1,[28]]],[[7,[28]]]],[[[1,[36]]],[[7,[28]]]],[[[1,[-1]]],-1,[2,3]],[[[1,[28]]],[[7,[37]]]],[[[1,[34]]],[[7,[37]]]],[[[1,[32]]],[[7,[37]]]],[[[1,[35]]],[[7,[37]]]],[[[1,[39]]],[[7,[37]]]],[[[1,[33]]],[[7,[37]]]],[[[1,[36]]],[[7,[37]]]],[[[1,[31]]],[[7,[37]]]],[[[1,[30]]],[[7,[37]]]],[[[1,[29]]],[[7,[37]]]],[[[1,[30]]],[[7,[32]]]],[[[1,[33]]],[[7,[32]]]],[[[1,[29]]],[[7,[32]]]],[[[1,[39]]],[[7,[32]]]],[[[1,[28]]],[[7,[32]]]],[[[1,[34]]],[[7,[32]]]],[[[1,[31]]],[[7,[32]]]],[[[1,[36]]],[[7,[32]]]],[[[1,[35]]],[[7,[32]]]],[[[1,[32]]],[[7,[32]]]],[[[1,[-1]]],[[1,[-1]]],[2,3]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,[[42,[-2]]],[],[]],[-1,49,[]],[-1,49,[]],[[],[[1,[-1]]],[2,3]]],"c":[2],"p":[[3,"Ratio",0],[8,"Clone",311],[8,"Integer",312],[8,"Signed",313],[15,"tuple"],[8,"NumAssign",314],[4,"Option",315],[8,"FloatCore",316],[8,"NumCast",317],[8,"Bounded",318],[8,"CheckedMul",319],[8,"CheckedAdd",319],[8,"CheckedSub",319],[3,"ParseRatioError",0],[4,"Ordering",320],[15,"bool"],[3,"Formatter",321],[6,"Result",321],[8,"Octal",321],[8,"LowerHex",321],[8,"Display",321],[8,"LowerExp",321],[8,"UpperExp",321],[8,"Debug",321],[8,"UpperHex",321],[8,"Binary",321],[15,"f32"],[15,"i64"],[15,"u16"],[15,"u32"],[15,"usize"],[15,"u64"],[15,"i32"],[15,"isize"],[15,"i8"],[15,"i16"],[15,"u128"],[15,"i128"],[15,"u8"],[15,"f64"],[15,"str"],[4,"Result",322],[8,"FromStr",323],[8,"Hash",324],[8,"Hasher",324],[8,"Neg",325],[8,"Pow",326],[8,"Iterator",327],[3,"TypeId",328]],"b":[[7,"impl-Add%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[8,"impl-Add%3CT%3E-for-Ratio%3CT%3E"],[9,"impl-Add-for-Ratio%3CT%3E"],[10,"impl-Add%3CT%3E-for-%26Ratio%3CT%3E"],[11,"impl-Add%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[12,"impl-Add%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[13,"impl-Add%3C%26T%3E-for-%26Ratio%3CT%3E"],[14,"impl-Add%3C%26T%3E-for-Ratio%3CT%3E"],[15,"impl-AddAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[16,"impl-AddAssign%3CT%3E-for-Ratio%3CT%3E"],[17,"impl-AddAssign%3C%26T%3E-for-Ratio%3CT%3E"],[18,"impl-AddAssign-for-Ratio%3CT%3E"],[34,"impl-Div%3CT%3E-for-Ratio%3CT%3E"],[35,"impl-Div%3C%26T%3E-for-%26Ratio%3CT%3E"],[36,"impl-Div%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[37,"impl-Div-for-Ratio%3CT%3E"],[38,"impl-Div%3CT%3E-for-%26Ratio%3CT%3E"],[39,"impl-Div%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[40,"impl-Div%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[41,"impl-Div%3C%26T%3E-for-Ratio%3CT%3E"],[42,"impl-DivAssign%3CT%3E-for-Ratio%3CT%3E"],[43,"impl-DivAssign%3C%26T%3E-for-Ratio%3CT%3E"],[44,"impl-DivAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[45,"impl-DivAssign-for-Ratio%3CT%3E"],[49,"impl-Octal-for-Ratio%3CT%3E"],[50,"impl-LowerHex-for-Ratio%3CT%3E"],[51,"impl-Display-for-Ratio%3CT%3E"],[52,"impl-LowerExp-for-Ratio%3CT%3E"],[53,"impl-UpperExp-for-Ratio%3CT%3E"],[54,"impl-Debug-for-Ratio%3CT%3E"],[55,"impl-UpperHex-for-Ratio%3CT%3E"],[56,"impl-Binary-for-Ratio%3CT%3E"],[57,"impl-Debug-for-ParseRatioError"],[58,"impl-Display-for-ParseRatioError"],[61,"impl-From%3CT%3E-for-Ratio%3CT%3E"],[62,"impl-From%3C(T,+T)%3E-for-Ratio%3CT%3E"],[64,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[65,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[66,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[67,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[68,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[69,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[70,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[71,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[72,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[73,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[74,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[75,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[76,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[77,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[78,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[79,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[80,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[81,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[82,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[83,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[84,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[85,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[86,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[87,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[88,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[89,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[90,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[91,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[92,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[93,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[94,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[95,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[96,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[97,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[98,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[99,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[100,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[101,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[102,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[103,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[104,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[105,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[106,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[107,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[108,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[109,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[110,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[111,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[115,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[116,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[117,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[118,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[119,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[120,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[121,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[122,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[123,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[124,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[125,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[126,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[127,"impl-FromPrimitive-for-Ratio%3Cusize%3E"],[128,"impl-FromPrimitive-for-Ratio%3Ci16%3E"],[129,"impl-FromPrimitive-for-Ratio%3Ci8%3E"],[130,"impl-FromPrimitive-for-Ratio%3Cisize%3E"],[131,"impl-FromPrimitive-for-Ratio%3Cu16%3E"],[132,"impl-FromPrimitive-for-Ratio%3Ci128%3E"],[133,"impl-FromPrimitive-for-Ratio%3Cu32%3E"],[134,"impl-FromPrimitive-for-Ratio%3Ci32%3E"],[135,"impl-FromPrimitive-for-Ratio%3Cu8%3E"],[136,"impl-FromPrimitive-for-Ratio%3Cu128%3E"],[137,"impl-FromPrimitive-for-Ratio%3Cu64%3E"],[138,"impl-FromPrimitive-for-Ratio%3Ci64%3E"],[143,"impl-Inv-for-%26Ratio%3CT%3E"],[144,"impl-Inv-for-Ratio%3CT%3E"],[150,"impl-Mul%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[151,"impl-Mul%3CT%3E-for-%26Ratio%3CT%3E"],[152,"impl-Mul%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[153,"impl-Mul-for-Ratio%3CT%3E"],[154,"impl-Mul%3C%26T%3E-for-Ratio%3CT%3E"],[155,"impl-Mul%3C%26T%3E-for-%26Ratio%3CT%3E"],[156,"impl-Mul%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[157,"impl-Mul%3CT%3E-for-Ratio%3CT%3E"],[158,"impl-MulAssign%3C%26T%3E-for-Ratio%3CT%3E"],[159,"impl-MulAssign-for-Ratio%3CT%3E"],[160,"impl-MulAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[161,"impl-MulAssign%3CT%3E-for-Ratio%3CT%3E"],[162,"impl-Neg-for-%26Ratio%3CT%3E"],[163,"impl-Neg-for-Ratio%3CT%3E"],[169,"impl-Pow%3Ci128%3E-for-%26Ratio%3CT%3E"],[170,"impl-Pow%3Ci64%3E-for-Ratio%3CT%3E"],[171,"impl-Pow%3C%26u16%3E-for-%26Ratio%3CT%3E"],[172,"impl-Pow%3C%26u8%3E-for-Ratio%3CT%3E"],[173,"impl-Pow%3C%26i8%3E-for-%26Ratio%3CT%3E"],[174,"impl-Pow%3C%26u64%3E-for-Ratio%3CT%3E"],[175,"impl-Pow%3C%26i32%3E-for-%26Ratio%3CT%3E"],[176,"impl-Pow%3Cu16%3E-for-Ratio%3CT%3E"],[177,"impl-Pow%3Ci32%3E-for-Ratio%3CT%3E"],[178,"impl-Pow%3C%26u32%3E-for-%26Ratio%3CT%3E"],[179,"impl-Pow%3C%26i64%3E-for-Ratio%3CT%3E"],[180,"impl-Pow%3C%26isize%3E-for-%26Ratio%3CT%3E"],[181,"impl-Pow%3C%26u128%3E-for-%26Ratio%3CT%3E"],[182,"impl-Pow%3C%26usize%3E-for-%26Ratio%3CT%3E"],[183,"impl-Pow%3C%26i16%3E-for-Ratio%3CT%3E"],[184,"impl-Pow%3C%26i16%3E-for-%26Ratio%3CT%3E"],[185,"impl-Pow%3Cu64%3E-for-%26Ratio%3CT%3E"],[186,"impl-Pow%3Cusize%3E-for-Ratio%3CT%3E"],[187,"impl-Pow%3Ci16%3E-for-Ratio%3CT%3E"],[188,"impl-Pow%3Ci32%3E-for-%26Ratio%3CT%3E"],[189,"impl-Pow%3Cisize%3E-for-%26Ratio%3CT%3E"],[190,"impl-Pow%3C%26u8%3E-for-%26Ratio%3CT%3E"],[191,"impl-Pow%3Cu8%3E-for-%26Ratio%3CT%3E"],[192,"impl-Pow%3C%26isize%3E-for-Ratio%3CT%3E"],[193,"impl-Pow%3Cu64%3E-for-Ratio%3CT%3E"],[194,"impl-Pow%3Cusize%3E-for-%26Ratio%3CT%3E"],[195,"impl-Pow%3C%26i128%3E-for-%26Ratio%3CT%3E"],[196,"impl-Pow%3Ci64%3E-for-%26Ratio%3CT%3E"],[197,"impl-Pow%3Ci128%3E-for-Ratio%3CT%3E"],[198,"impl-Pow%3C%26u128%3E-for-Ratio%3CT%3E"],[199,"impl-Pow%3C%26usize%3E-for-Ratio%3CT%3E"],[200,"impl-Pow%3Cu32%3E-for-%26Ratio%3CT%3E"],[201,"impl-Pow%3C%26u32%3E-for-Ratio%3CT%3E"],[202,"impl-Pow%3C%26i64%3E-for-%26Ratio%3CT%3E"],[203,"impl-Pow%3Cu8%3E-for-Ratio%3CT%3E"],[204,"impl-Pow%3C%26u64%3E-for-%26Ratio%3CT%3E"],[205,"impl-Pow%3C%26i32%3E-for-Ratio%3CT%3E"],[206,"impl-Pow%3Cu16%3E-for-%26Ratio%3CT%3E"],[207,"impl-Ratio%3CT%3E"],[208,"impl-Pow%3Ci8%3E-for-Ratio%3CT%3E"],[209,"impl-Pow%3Cu128%3E-for-Ratio%3CT%3E"],[210,"impl-Pow%3C%26i128%3E-for-Ratio%3CT%3E"],[211,"impl-Pow%3Cu128%3E-for-%26Ratio%3CT%3E"],[212,"impl-Pow%3Ci16%3E-for-%26Ratio%3CT%3E"],[213,"impl-Pow%3C%26i8%3E-for-Ratio%3CT%3E"],[214,"impl-Pow%3Cisize%3E-for-Ratio%3CT%3E"],[215,"impl-Pow%3C%26u16%3E-for-Ratio%3CT%3E"],[216,"impl-Pow%3Cu32%3E-for-Ratio%3CT%3E"],[217,"impl-Pow%3Ci8%3E-for-%26Ratio%3CT%3E"],[218,"impl-Product-for-Ratio%3CT%3E"],[219,"impl-Product%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[222,"impl-Rem%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[223,"impl-Rem%3CT%3E-for-Ratio%3CT%3E"],[224,"impl-Rem%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[225,"impl-Rem%3CT%3E-for-%26Ratio%3CT%3E"],[226,"impl-Rem%3C%26T%3E-for-Ratio%3CT%3E"],[227,"impl-Rem%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[228,"impl-Rem-for-Ratio%3CT%3E"],[229,"impl-Rem%3C%26T%3E-for-%26Ratio%3CT%3E"],[230,"impl-RemAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[231,"impl-RemAssign%3C%26T%3E-for-Ratio%3CT%3E"],[232,"impl-RemAssign-for-Ratio%3CT%3E"],[233,"impl-RemAssign%3CT%3E-for-Ratio%3CT%3E"],[238,"impl-Sub%3C%26Ratio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[239,"impl-Sub%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[240,"impl-Sub%3C%26T%3E-for-Ratio%3CT%3E"],[241,"impl-Sub%3CT%3E-for-%26Ratio%3CT%3E"],[242,"impl-Sub%3CRatio%3CT%3E%3E-for-%26Ratio%3CT%3E"],[243,"impl-Sub%3CT%3E-for-Ratio%3CT%3E"],[244,"impl-Sub%3C%26T%3E-for-%26Ratio%3CT%3E"],[245,"impl-Sub-for-Ratio%3CT%3E"],[246,"impl-SubAssign%3CT%3E-for-Ratio%3CT%3E"],[247,"impl-SubAssign%3C%26T%3E-for-Ratio%3CT%3E"],[248,"impl-SubAssign%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[249,"impl-SubAssign-for-Ratio%3CT%3E"],[250,"impl-Sum-for-Ratio%3CT%3E"],[251,"impl-Sum%3C%26Ratio%3CT%3E%3E-for-Ratio%3CT%3E"],[252,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[253,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[254,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[255,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[256,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[257,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[258,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[259,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[260,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[261,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[262,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[263,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[264,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[265,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[266,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[267,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[268,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[269,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[270,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[271,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[272,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[273,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[274,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[275,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[276,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[277,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[278,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[279,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[280,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[281,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[283,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[284,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[285,"impl-ToPrimitive-for-Ratio%3Cu64%3E"],[286,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[287,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[288,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[289,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[290,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[291,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[292,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[293,"impl-ToPrimitive-for-Ratio%3Cu32%3E"],[294,"impl-ToPrimitive-for-Ratio%3Ci32%3E"],[295,"impl-ToPrimitive-for-Ratio%3Cu16%3E"],[296,"impl-ToPrimitive-for-Ratio%3Cu8%3E"],[297,"impl-ToPrimitive-for-Ratio%3Ci64%3E"],[298,"impl-ToPrimitive-for-Ratio%3Cisize%3E"],[299,"impl-ToPrimitive-for-Ratio%3Cusize%3E"],[300,"impl-ToPrimitive-for-Ratio%3Ci16%3E"],[301,"impl-ToPrimitive-for-Ratio%3Ci8%3E"],[302,"impl-ToPrimitive-for-Ratio%3Cu64%3E"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACACLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIKKLKLKKKLLLKKLLKKLLLLLLLLKLKKKKKLLLLKKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","sign","signum","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","ceil","classify","epsilon","floor","fract","infinity","integer_decode","is_finite","is_infinite","is_nan","is_normal","is_sign_negative","is_sign_positive","is_subnormal","max","max_value","min","min_positive_value","min_value","nan","neg_infinity","neg_zero","powi","recip","round","signum","to_degrees","to_radians","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[87,"num_traits::bounds"],[94,"num_traits::cast"],[129,"num_traits::float"],[180,"num_traits::identities"],[190,"num_traits::int"],[210,"num_traits::ops"],[218,"num_traits::ops::bytes"],[229,"num_traits::ops::checked"],[245,"num_traits::ops::euclid"],[251,"num_traits::ops::inv"],[254,"num_traits::ops::mul_add"],[259,"num_traits::ops::overflowing"],[265,"num_traits::ops::saturating"],[274,"num_traits::ops::wrapping"],[286,"num_traits::pow"],[291,"num_traits::sign"],[301,"core::cmp"],[302,"core::fmt"],[303,"core::fmt"],[304,"core::any"],[305,"core::option"],[306,"core::marker"],[307,"core::ops::arith"],[308,"core::ops::arith"],[309,"core::cmp"],[310,"core::ops::arith"]],"d":["","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns epsilon, a small positive value.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns positive infinity.","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns NaN.","Returns negative infinity.","Returns <code>-0.0</code>.","Raise a number to an integer power.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,12,12,12,12,12,12,12,12,12,12,12,12,12,12,45,45,45,45,45,45,45,45,45,45,0,0,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,33,34,0,33,33,34,0,34,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,0,0,48,49,0,0,0,49,49,49,48,48,48,0,0,0,0,0,0,0,0,50,51,36,52,53,54,55,56,0,0,57,57,58,58,0,59,59,0,0,60,60,61,0,0,0,62,63,64,0,0,0,0,65,66,67,65,68,0,0,0,0,0,0,69,70,71,72,73,74,75,0,0,0,75,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,-1,-1],-1,1],[[-1,-1],-1,1],[[-1,-1],-1,1],0,[[2,3],4],[[5,3],4],[[5,3],4],[-1,-1,[]],[-1,-1,[]],[[6,7],[[8,[-1]]],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[10,[-2]]],11,11],[-1,[[10,[-2]]],12,[]],[13,[[10,[-1]]],[]],[14,[[10,[-1]]],[]],[15,[[10,[-1]]],[]],[16,[[10,[-1]]],[]],[17,[[10,[-1]]],[]],[18,[[10,[-1]]],[]],[19,[[10,[-1]]],[]],[20,[[10,[-1]]],[]],[21,[[10,[-1]]],[]],[22,[[10,[-1]]],[]],[7,[[10,[-1]]],[]],[23,[[10,[-1]]],[]],[24,[[10,[-1]]],[]],[25,[[10,[-1]]],[]],[-1,[[10,[13]]],[]],[-1,[[10,[14]]],[]],[-1,[[10,[15]]],[]],[-1,[[10,[16]]],[]],[-1,[[10,[17]]],[]],[-1,[[10,[18]]],[]],[-1,[[10,[19]]],[]],[-1,[[10,[20]]],[]],[-1,[[10,[21]]],[]],[-1,[[10,[22]]],[]],[-1,[[10,[7]]],[]],[-1,[[10,[23]]],[]],[-1,[[10,[24]]],[]],[-1,[[10,[25]]],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[[],-1,[]],[[],-1,[]],[[],-1,[26,27]],[[],-1,[]],[[],-1,[26,27]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[26,28]],[-1,-1,[]],[-1,-1,[]],[-1,29,[]],[[],-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[-1,[[30,[23,16,19]]],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[-1,-1],-1,[]],[[],-1,[]],[[-1,-1],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[-1,17],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,31,32],[-1,31,[]],[[],-1,33],[[],-1,[]],[-1,30,[]],[-1,30,[]],[[],-1,34],[[],-1,[]],0,[-1,7,[]],[-1,7,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[]],[-1,7,[]],[[-1,7],-1,[]],[-1,-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,7,[]],[-1,7,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],-1,[]],[[],-1,[]],[[],-1,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],0,0,0,0,0,0,0,0,[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[-1,[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,7],[[10,[-1]]],[]],[[-1,7],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],0,0,[[-1,-1],[[10,[-1]]],[]],[[-1,-1],[[10,[-1]]],[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,[-1,[],[]],0,0,0,[[-1,-2,-3],[],[],[],[]],[[-1,-2,-3],30,[],[],[]],0,0,0,[[-1,-1],[[30,[-1,31]]],[]],[[-1,-1],[[30,[-1,31]]],[]],[[-1,-1],[[30,[-1,31]]],[]],0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],[[-1,-1],-1,[]],0,0,0,0,0,0,[[-1,-1],-1,[]],[[-1,-1],-1,[]],[-1,-1,[]],[[-1,7],-1,[]],[[-1,7],-1,[]],[[-1,-1],-1,[]],0,0,[[-1,25],[[10,[-1]]],[35,33,36]],[[-1,25],-1,[35,33,37]],[[-1,-2],[],[],[]],0,0,[-1,-1,38],[-1,-1,[]],[[-1,-1],-1,38],[[-1,-1],-1,[]],[-1,31,[]],[-1,31,[]],[-1,-1,38],[-1,-1,[]]],"c":[],"p":[[8,"PartialOrd",301],[4,"FloatErrorKind",0],[3,"Formatter",302],[6,"Result",302],[3,"ParseFloatError",0],[15,"str"],[15,"u32"],[4,"Result",303],[3,"TypeId",304],[4,"Option",305],[8,"NumCast",94],[8,"ToPrimitive",94],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized",306],[8,"Div",307],[8,"Add",307],[4,"FpCategory",308],[15,"tuple"],[15,"bool"],[8,"PartialEq",301],[8,"One",180],[8,"Zero",180],[8,"Clone",309],[8,"CheckedMul",229],[8,"Mul",307],[8,"Signed",291],[8,"Num",0],[8,"Bounded",87],[8,"UpperBounded",87],[8,"LowerBounded",87],[8,"AsPrimitive",94],[8,"FromPrimitive",94],[8,"FloatConst",129],[8,"FloatCore",129],[8,"PrimInt",190],[8,"ToBytes",218],[8,"FromBytes",218],[8,"CheckedAdd",229],[8,"CheckedDiv",229],[8,"CheckedNeg",229],[8,"CheckedRem",229],[8,"CheckedShl",229],[8,"CheckedShr",229],[8,"CheckedSub",229],[8,"CheckedEuclid",245],[8,"Euclid",245],[8,"Inv",251],[8,"MulAdd",254],[8,"MulAddAssign",254],[8,"OverflowingAdd",259],[8,"OverflowingMul",259],[8,"OverflowingSub",259],[8,"Saturating",265],[8,"SaturatingAdd",265],[8,"SaturatingMul",265],[8,"SaturatingSub",265],[8,"WrappingAdd",274],[8,"WrappingMul",274],[8,"WrappingNeg",274],[8,"WrappingShl",274],[8,"WrappingShr",274],[8,"WrappingSub",274],[8,"Pow",286]],"b":[[64,"impl-Display-for-ParseFloatError"],[65,"impl-Debug-for-ParseFloatError"]]},\
"once_cell":{"doc":"Overview","t":"AADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[2,"once_cell::race"],[63,"once_cell::unsync"],[108,"core::fmt"],[109,"core::fmt"],[110,"core::num::nonzero"],[111,"core::ops::function"],[112,"core::result"],[113,"alloc::boxed"],[114,"core::any"],[115,"core::clone"],[116,"core::default"],[117,"core::cmp"],[118,"core::fmt"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[]],[[],[[2,[-1]]],[]],[[],3],[[],4],[[[2,[-1]]],5,[]],[[[1,[-1]],6],7,[]],[[[2,[-1]],6],7,[]],[[3,6],7],[[4,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1,[-1]]],[[8,[-1]]],[]],[[[2,[-1]]],[[8,[-1]]],[]],[3,[[8,[9]]]],[4,[[8,[10]]]],[[[1,[-1]],-2],-1,[],11],[[[2,[-1]],-2],-1,[],11],[[3,-1],9,11],[[4,-1],10,11],[[[1,[-1]],-2],[[12,[-1,-3]]],[],11,[]],[[[2,[-1]],-2],[[12,[-1,-3]]],[],11,[]],[[3,-1],[[12,[9,-2]]],11,[]],[[4,-1],[[12,[10,-2]]],11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1]]],[]],[[],[[2,[-1]]],[]],[[],3],[[],4],[[[1,[-1]],-1],[[12,[5,5]]],[]],[[[2,[-1]],[13,[-1]]],[[12,[5,[13,[-1]]]]],[]],[[3,9],[[12,[5,5]]]],[[4,10],[[12,[5,5]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[15,[-1]]],16],[[[15,[-1]],[15,[-1]]],5,16],[[-1,-2],5,[],[]],[[],[[15,[-1]]],[]],[[],[[17,[-1]]],18],[[[17,[-1,-2]]],-1,[],11],[[[17,[-1,-2]]],-1,[],11],[[[15,[-1]],[15,[-1]]],10,19],[[[15,[-1]],6],7,20],[[[17,[-1,-2]],6],7,20,[]],[[[17,[-1,-2]]],-1,[],11],[[[17,[-1,-2]]],-1,[],11],[-1,-1,[]],[21,-1,[]],[-1,[[15,[-1]]],[]],[-1,-1,[]],[[[15,[-1]]],[[8,[-1]]],[]],[[[17,[-1,-2]]],[[8,[-1]]],[],11],[[[15,[-1]]],[[8,[-1]]],[]],[[[17,[-1,-2]]],[[8,[-1]]],[],11],[[[15,[-1]],-2],-1,[],11],[[[15,[-1]],-2],[[12,[-1,-3]]],[],11,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[8,[-1]]],[]],[[[17,[-1,-2]]],[[12,[-1,-2]]],[],[]],[[],[[15,[-1]]],[]],[-1,[[17,[-2,-1]]],[],[]],[[[15,[-1]],-1],[[12,[5,-1]]],[]],[[[15,[-1]]],[[8,[-1]]],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[15,[-1]],-1],[[12,[-1,[5,[-1,-1]]]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,[[15,[-1]]],[]]],"c":[],"p":[[3,"OnceRef",2],[3,"OnceBox",2],[3,"OnceNonZeroUsize",2],[3,"OnceBool",2],[15,"tuple"],[3,"Formatter",108],[6,"Result",108],[4,"Option",109],[3,"NonZeroUsize",110],[15,"bool"],[8,"FnOnce",111],[4,"Result",112],[3,"Box",113],[3,"TypeId",114],[3,"OnceCell",63],[8,"Clone",115],[3,"Lazy",63],[8,"Default",116],[8,"PartialEq",117],[8,"Debug",108],[15,"never"]],"b":[]},\
"pci_ids":{"doc":"Rust wrappers for the PCI ID Repository.","t":"DDDIDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Class","Classes","Device","FromId","ProgIf","SubSystem","Subclass","Vendor","Vendors","as_cid_sid","as_vid_pid","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone","devices","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_cid_sid","from_id","from_id","from_id","from_vid_pid","id","id","id","id","id","into","into","into","into","into","into","into","into","iter","iter","name","name","name","name","name","name","prog_ifs","subclasses","subdevice","subsystems","subvendor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vendor"],"q":[[0,"pci_ids"],[111,"core::iter::traits::iterator"],[112,"core::fmt"],[113,"core::fmt"],[114,"core::result"],[115,"core::any"]],"d":["Represents a PCI device class in the PCI database.","An abstraction for iterating over all classes in the PCI …","Represents a single device in the PCI database.","A convenience trait for retrieving a top-level entity …","Represents a programming interface to a PCI subclass in …","Represents an subsystem to a PCI device in the PCI …","Represents a PCI device subclass in the PCI database.","Represents a PCI device vendor in the PCI database.","An abstraction for iterating over all vendors in the PCI …","Returns a tuple of (class ID, subclass ID) for this …","Returns a tuple of (vendor ID, device/“product” ID) …","","","","","","","","","","","","","","","","","Returns the <code>Class</code> that this subclass belongs to.","","","","","","","Returns an iterator over the vendor’s devices.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the <code>Subclass</code> corresponding to the given class and …","Returns the entity corresponding to <code>id</code>, or <code>None</code> if none …","","","Returns the <code>Device</code> corresponding to the given vendor and …","Returns the vendor’s ID.","Returns the device’s ID.","Returns the class’ ID.","Returns the subclass’ ID.","Returns the programming interface’s ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over all vendors in the PCI database.","Returns an iterator over all classes in the PCI database.","Returns the vendor’s name.","Returns the device’s name.","Returns the subsystem’s name.","Returns the class’ name.","Returns the subclass’ name.","Returns the programming interface’s name.","Returns an iterator over the subclass’ programming …","Returns an iterator over the class’ devices.","Returns the subsystem’s subdevice.","Returns an iterator over the device’s subsystems.","Returns the subsystem’s ID.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>Vendor</code> that this device belongs to."],"i":[0,0,0,0,0,0,0,0,0,1,4,18,19,7,4,8,6,1,9,18,19,7,4,8,6,1,9,1,7,4,8,6,1,9,7,7,4,8,6,1,9,7,4,8,6,1,9,18,19,7,4,8,6,1,9,1,20,7,6,4,7,4,6,1,9,18,19,7,4,8,6,1,9,18,19,7,4,8,6,1,9,1,6,8,4,8,18,19,7,4,8,6,1,9,18,19,7,4,8,6,1,9,18,19,7,4,8,6,1,9,4],"f":[0,0,0,0,0,0,0,0,0,[1,[[3,[2,2]]]],[4,[[3,[5,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,6],[7,7],[4,4],[8,8],[6,6],[1,1],[9,9],[7,[[0,[10]]]],[[7,7],11],[[4,4],11],[[8,8],11],[[6,6],11],[[1,1],11],[[9,9],11],[[7,12],13],[[4,12],13],[[8,12],13],[[6,12],13],[[1,12],13],[[9,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[2,2],[[14,[1]]]],[-1,[[14,[-2]]],[],[]],[5,[[14,[7]]]],[2,[[14,[6]]]],[[5,5],[[14,[4]]]],[7,5],[4,5],[6,2],[1,2],[9,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[0,[10]]]],[[],[[0,[10]]]],[7,15],[4,15],[8,15],[6,15],[1,15],[9,15],[1,[[0,[10]]]],[6,[[0,[10]]]],[8,5],[4,[[0,[10]]]],[8,5],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[4,7]],"c":[],"p":[[3,"Subclass",0],[15,"u8"],[15,"tuple"],[3,"Device",0],[15,"u16"],[3,"Class",0],[3,"Vendor",0],[3,"SubSystem",0],[3,"ProgIf",0],[8,"Iterator",111],[15,"bool"],[3,"Formatter",112],[6,"Result",112],[4,"Option",113],[15,"str"],[4,"Result",114],[3,"TypeId",115],[3,"Vendors",0],[3,"Classes",0],[8,"FromId",0]],"b":[]},\
"pci_types":{"doc":"","t":"EGNIGGENDNEGGGNRNNNDDNDNDGGGNGLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMMMMNNNDNNNNNNNNNNNNNNDNEEDNNNNNENNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNLLLLLLLLLLLLLLLLLLLLLL","n":["Bar","BaseClass","CardBusBridge","ConfigRegionAccess","DeviceId","DeviceRevision","DevselTiming","Endpoint","EndpointHeader","Fast","HeaderType","Interface","InterruptLine","InterruptPin","Io","MAX_BARS","Medium","Memory32","Memory64","PciAddress","PciHeader","PciPciBridge","PciPciBridgeHeader","Slow","StatusRegister","SubClass","SubsystemId","SubsystemVendorId","Unknown","VendorId","bar","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","capabilities","capability","capability_pointer","capable_66mhz","clone","clone","clone","clone","clone","cmp","default","device","device_type","devsel_timing","eq","eq","eq","eq","fast_back_to_back_capable","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_header","from_header","function","function_exists","has_capability_list","has_multiple_functions","header","header","header_type","id","interrupt","interrupt_status","into","into","into","into","into","into","into","into","master_data_parity_error","new","new","new","parity_error_detected","partial_cmp","primary_bus_number","read","received_master_abort","received_target_abort","revision_and_class","secondary_bus_number","segment","signalled_system_error","signalled_target_abort","status","status","status","subordinate_bus_number","subsystem","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","address","address","port","prefetchable","prefetchable","size","size","AGP3","AcceleratedGraphicsPort","BridgeSubsystemVendorId","CapabilityIterator","CompactPCICentralResourceControl","CompactPCIHotswap","DebugPort","Edge","HyperTransport","Int1","Int16","Int2","Int32","Int4","Int8","LevelAssert","LevelDeassert","Msi","MsiCapability","MsiX","MultipleMessageSupport","PciCapability","PciCapabilityAddress","PciExpress","PciHotPlugControl","PciX","PowerManagement","SlotIdentification","TriggerMode","Unknown","Vendor","VitalProductData","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_message_mask","get_multiple_message_capable","get_multiple_message_enable","get_pending","has_per_vector_masking","into","into","into","into","into","into","into_iter","is_64bit","is_enabled","next","offset","partial_cmp","set_enabled","set_message_info","set_message_mask","set_multiple_message_enable","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","address","id","AccessBusController","AtaController","AtmController","AudioDevice","AudioSatelliteCommunicationsController","BluetoothController","BroadbandController","CanBusController","CardBusBridge","CoProcessor","CommunicationsSynchronizationController","ConsumerIrController","DataSatelliteCommunicationsController","Device","DeviceType","Digitizer","DmaController","DpioModule","Ehci","EisaBridge","EntertainmentCryptionController","Ethernet24GHzController","Ethernet5GHzController","EthernetController","FddiController","FibreChannelController","FirewireController","FlashController","FloppyController","GameportController","GenericDockingStation","GenericPciHotPlugController","GpibController","HostBridge","IdeController","InfiniBandController","InfinibandPciHostBridge","IntelligentIoController","InterruptController","IpiBusController","IpmiController","IrdaController","IsaBridge","IsdnController","KeyboardController","LegacyNotVgaCompatible","LegacyVgaCompatible","ManagementCard","McaBridge","Modem","MouseController","MultiportSerialController","NetworkCryptionController","NuBusBridge","NvmeController","Ohci","OtherBridgeDevice","OtherCommunicationsDevice","OtherCryptionController","OtherDisplayController","OtherDockingStation","OtherInputController","OtherInterface","OtherMassStorageController","OtherMemoryController","OtherMultimediaDevice","OtherNetworkController","OtherSignalProcessingController","OtherSystemPeripheral","OtherWirelessController","ParallelPort","PciPciBridge","PcmciaBridge","PerformanceCounter","PicmgController","Processor386","Processor486","ProcessorAlpha","ProcessorMips","ProcessorPentium","ProcessorPowerPc","RacewayBridge","RaidController","RamController","RfController","RtcController","SasController","SataController","ScannerController","ScsiBusController","SdHostController","SemiTransparentPciPciBridge","SercosController","SerialController","SmBusController","SmartCard","SsaBusController","SystemTimer","TelephonyDevice","ThreeDController","TokenRingController","TvSatelliteCommunicationsController","UfsController","Uhci","Unknown","UsbController","UsbType","VgaCompatibleController","VideoDevice","VoiceSatelliteCommunicationsController","WorldFipController","XgaController","Xhci","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","eq","fmt","fmt","from","from","from","into","into","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"pci_types"],[147,"pci_types::Bar"],[154,"pci_types::capability"],[256,"pci_types::capability::PciCapability"],[258,"pci_types::device_type"],[393,"core::option"],[394,"core::cmp"],[395,"core::result"],[396,"core::fmt"],[397,"core::fmt"]],"d":["","","","","","","Slowest time that a device will assert DEVSEL# for any bus …","","Endpoints have a Type-0 header, so the remainder of the …","","","","","","","","","","","PCIe supports 65536 segments, each with 256 buses, each …","Every PCI configuration region starts with a header made …","","PCI-PCI Bridges have a Type-1 header, so the remainder of …","","","","","","","","Get the contents of a BAR in a given slot. Empty bars will …","","","","","","","","","","","","","","","","","","","","","If returns <code>true</code> the device is capable of running at 66 …","","","","","","","","","","The slowest time that a device will assert DEVSEL# for any …","","","","","If returns <code>true</code> the device can accept fast back-to-back …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","If returns <code>true</code> the device implements the pointer for a …","","","","","","","Represents the state of the device’s INTx# signal. If …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This returns <code>true</code> only when the following conditions are …","","","","Will be <code>true</code> whenever the device detects a parity error, …","","","","Will return <code>true</code>, by a master device, whenever its …","Will return <code>true</code>, by a master device, whenever its …","","","","Will be <code>true</code> whenever the device asserts SERR#.","Will return <code>true</code> whenever a target device terminates a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AGP Target PCI-PCI bridge capability, Cap ID = <code>0x0E</code>","Accelerated graphics port capability, Cap ID = <code>0x02</code>","Bridge subsystem vendor/device ID capability, Cap ID = <code>0x0D</code>","","CompactPCI Central Resource Control capability, Cap ID = …","CompactPCI HotSwap capability, Cap ID = <code>0x06</code>","Debug port capability, Cap ID = <code>0x0A</code>","","HyperTransport capability, Cap ID = <code>0x08</code>","Device can send 1 interrupt. No interrupt vector …","Device can send 16 interrupts","Device can send 2 interrupts","Device can send 32 interrupts","Device can send 4 interrupts","Device can send 8 interrupts","","","Message signalling interrupts capability, Cap ID = <code>0x05</code>","","MSI-X capability, Cap ID = <code>0x11</code>","Specifies how many MSI interrupts one device can have. …","PCI capabilities","","PCI Express capability, Cap ID = <code>0x10</code>","PCI Standard Hot-Plug Controller capability, Cap ID = <code>0x0C</code>","PCI-X capability, Cap ID = <code>0x07</code>","Power management capability, Cap ID = <code>0x01</code>","Slot identification capability, Cap ID = <code>0x04</code>","When device should trigger the interrupt","Unknown capability","Vendor-specific capability, Cap ID = <code>0x09</code>","Vital product data capability, Cap ID = <code>0x3</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get interrupt mask","How many interrupts this device has?","Return how many interrupts the device is using","Get pending interrupts","Does device supports masking individual vectors?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is device using 64-bit addressing?","Is MSI capability enabled?","","","","Enable or disable MSI capability","Set where the interrupts will be sent to","Set interrupt mask","Set how many interrupts the device will use. If requested …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines the Base Class and the Sub-class of a device to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The different register-level programming interfaces …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,12,0,0,0,0,12,0,11,0,0,0,0,3,0,11,3,3,0,0,12,0,11,0,0,0,0,12,0,1,18,1,19,11,9,6,12,3,18,1,19,11,9,6,12,3,6,1,0,1,9,11,9,6,12,3,6,6,6,0,9,11,9,6,12,9,11,9,6,6,12,3,18,1,19,11,9,6,12,3,1,19,6,5,9,18,1,19,18,18,1,9,18,1,19,11,9,6,12,3,9,18,9,6,9,6,19,5,9,9,18,19,6,9,9,18,1,19,19,1,18,1,19,11,11,9,6,12,3,18,1,19,11,9,6,12,3,18,1,19,11,9,6,12,3,5,39,40,41,39,40,39,40,35,35,35,0,35,35,35,36,35,32,32,32,32,32,32,36,36,35,0,35,0,0,0,35,35,35,35,35,0,35,35,35,34,7,32,36,33,34,35,7,32,36,33,34,35,32,33,34,35,32,32,32,36,33,34,35,7,32,36,33,34,35,33,33,33,33,33,7,32,36,33,34,35,7,33,33,7,34,32,33,33,33,33,7,32,32,36,33,34,35,7,32,36,33,34,35,7,32,36,33,34,35,42,42,37,37,37,37,37,37,37,37,37,37,37,37,37,38,0,37,37,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,37,37,37,37,37,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,37,37,0,37,37,37,37,37,38,37,38,37,38,37,38,37,38,37,38,37,37,38,37,38,37,38,38,37,38,37,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,-1],[[4,[3]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,2],[[1,-1],[[7,[-1]]],5],0,[[1,-1],8,5],[9,10],[11,11],[9,9],[6,6],[12,12],[3,3],[[6,6],13],[[],6],[6,2],0,[9,[[15,[11,14]]]],[[11,11],10],[[9,9],10],[[6,6],10],[[12,12],10],[9,10],[[11,16],17],[[9,16],17],[[6,16],17],[[6,16],17],[[12,16],17],[[3,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[18,-1],[[4,[1]]],5],[[18,-1],[[4,[19]]],5],[6,2],[[-1,6],10,[]],[9,10],[[18,-1],10,5],[1,18],[19,18],[[18,-1],12,5],[[18,-1],[[14,[20,21]]],5],[[1,-1],[[14,[22,23]]],5],[9,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,10],[6,18],[8,9],[[8,2,2,2],6],[9,10],[[6,6],[[4,[13]]]],[[19,-1],2,5],[[-1,6,8],24,[]],[9,10],[9,10],[[18,-1],[[14,[25,26,27,28]]],5],[[19,-1],2,5],[6,8],[9,10],[9,10],[[18,-1],9,5],[[1,-1],9,5],[[19,-1],9,5],[[19,-1],2,5],[[1,-1],[[14,[29,30]]],5],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[2,[[15,[11]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[-1,6,8,24],14,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[33,33],[34,34],[35,35],[[32,32],13],[[32,32],10],[[32,16],17],[[36,16],17],[[33,16],17],[[34,16],17],[[35,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[33,-1],24,5],[33,32],[[33,-1],32,5],[[33,-1],24,5],[33,10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,10],[[33,-1],10,5],[[[7,[-1]]],4,5],0,[[32,32],[[4,[13]]]],[[33,10,-1],14,5],[[33,24,2,36,-1],14,5],[[33,-1,24],14,5],[[33,32,-1],14,5],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[2,[[15,[32]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[38,38],[[37,37],10],[[38,38],10],[[37,16],17],[[38,16],17],[[[14,[26,27]]],37],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[28,[[15,[38]]]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,31,[]],[-1,31,[]]],"c":[],"p":[[3,"EndpointHeader",0],[15,"u8"],[4,"Bar",0],[4,"Option",393],[8,"ConfigRegionAccess",0],[3,"PciAddress",0],[3,"CapabilityIterator",154],[15,"u16"],[3,"StatusRegister",0],[15,"bool"],[4,"DevselTiming",0],[4,"HeaderType",0],[4,"Ordering",394],[15,"tuple"],[4,"Result",395],[3,"Formatter",396],[6,"Result",396],[3,"PciHeader",0],[3,"PciPciBridgeHeader",0],[6,"VendorId",0],[6,"DeviceId",0],[6,"InterruptPin",0],[6,"InterruptLine",0],[15,"u32"],[6,"DeviceRevision",0],[6,"BaseClass",0],[6,"SubClass",0],[6,"Interface",0],[6,"SubsystemId",0],[6,"SubsystemVendorId",0],[3,"TypeId",397],[4,"MultipleMessageSupport",154],[3,"MsiCapability",154],[3,"PciCapabilityAddress",154],[4,"PciCapability",154],[4,"TriggerMode",154],[4,"DeviceType",258],[4,"UsbType",258],[13,"Memory32",147],[13,"Memory64",147],[13,"Io",147],[13,"Unknown",256]],"b":[[69,"impl-Display-for-PciAddress"],[70,"impl-Debug-for-PciAddress"]]},\
"pflock":{"doc":"This library provides a phase-fair reader-writer lock, as …","t":"GGDLLLLLLLLLLLLL","n":["PFLock","PFLockGuard","RawPFLock","borrow","borrow_mut","from","into","lock_exclusive","lock_shared","try_from","try_into","try_lock_exclusive","try_lock_shared","type_id","unlock_exclusive","unlock_shared"],"q":[[0,"pflock"],[16,"core::result"],[17,"core::any"]],"d":["A phase-fair reader-writer lock.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[1,2],[1,2],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[1,4],[1,4],[-1,5,[]],[1,2],[1,2]],"c":[],"p":[[3,"RawPFLock",0],[15,"tuple"],[4,"Result",16],[15,"bool"],[3,"TypeId",17]],"b":[]},\
"phf":{"doc":"Rust-PHF is a library to generate efficient lookup tables …","t":"DDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAKLALLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLL","n":["Map","OrderedMap","OrderedSet","PhfHash","Set","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","fmt","fmt","from","from","from","from","index","index","into","into","into","into","into_iter","into_iter","into_iter","into_iter","map","ordered_map","ordered_set","phf_hash","phf_hash_slice","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Entries","Keys","Map","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","contains_key","entries","fmt","fmt","fmt","from","from","from","get","get_entry","get_key","into","into","into","into_iter","into_iter","into_iter","is_empty","keys","len","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","Entries","Keys","OrderedMap","Values","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","contains_key","entries","fmt","fmt","fmt","from","from","from","get","get_entry","get_index","get_key","index","into","into","into","into_iter","into_iter","into_iter","is_empty","keys","len","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","Iter","OrderedSet","borrow","borrow_mut","clone","contains","fmt","from","get_index","get_key","index","into","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","next","next_back","size_hint","try_from","try_into","type_id","Iter","Set","borrow","borrow_mut","clone","contains","fmt","from","get_key","into","into_iter","is_disjoint","is_empty","is_subset","is_superset","iter","len","next","next_back","size_hint","try_from","try_into","type_id"],"q":[[0,"phf"],[50,"phf::map"],[103,"phf::ordered_map"],[157,"phf::ordered_set"],[182,"phf::set"],[205,"core::fmt"],[206,"core::fmt"],[207,"core::marker"],[208,"phf_shared"],[209,"core::hash"],[210,"core::result"],[211,"core::any"],[212,"core::option"]],"d":["An immutable map constructed at compile time.","An order-preserving immutable map constructed at compile …","An order-preserving immutable set constructed at compile …","A trait implemented by types which can be used in PHF data …","An immutable set constructed at compile time.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","An immutable map constructed at compile time.","An order-preserving immutable map constructed at compile …","An order-preserving immutable set constructed at compile …","Feeds the value into the state given, updating the hasher …","Feeds a slice of this type into the state provided.","An immutable set constructed at compile time.","","","","","","","","","","","","","An iterator over the key/value pairs in a <code>Map</code>.","An iterator over the keys in a <code>Map</code>.","An immutable map constructed at compile time.","An iterator over the values in a <code>Map</code>.","","","","","","","","","","Determines if <code>key</code> is in the <code>Map</code>.","Returns an iterator over the key/value pairs in the map.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value that <code>key</code> maps to.","Like <code>get</code>, but returns both the key and the value.","Returns a reference to the map’s internal static …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the <code>Map</code> is empty.","Returns an iterator over the keys in the map.","Returns the number of entries in the <code>Map</code>.","Create a new, empty, immutable map.","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","An iterator over the entries in a <code>OrderedMap</code>.","An iterator over the keys in a <code>OrderedMap</code>.","An order-preserving immutable map constructed at compile …","An iterator over the values in a <code>OrderedMap</code>.","","","","","","","","","","Determines if <code>key</code> is in the <code>OrderedMap</code>.","Returns an iterator over the key/value pairs in the map.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value that <code>key</code> maps to.","Like <code>get</code>, but returns both the key and the value.","Returns the index of the key within the list used to …","Returns a reference to the map’s internal static …","Returns references to both the key and values at an index …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if the <code>OrderedMap</code> is empty.","Returns an iterator over the keys in the map.","Returns the number of entries in the <code>OrderedMap</code>.","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","An iterator over the values in a <code>OrderedSet</code>.","An order-preserving immutable set constructed at compile …","","","","Returns true if <code>value</code> is in the <code>OrderedSet</code>.","","Returns the argument unchanged.","Returns the index of the key within the list used to …","Returns a reference to the set’s internal static …","Returns a reference to the key at an index within the list …","Calls <code>U::from(self)</code>.","","Returns true if <code>other</code> shares no elements with <code>self</code>.","Returns true if the <code>OrderedSet</code> contains no elements.","Returns true if <code>other</code> contains all values in <code>self</code>.","Returns true if <code>self</code> contains all values in <code>other</code>.","Returns an iterator over the values in the set.","Returns the number of elements in the <code>OrderedSet</code>.","","","","","","","An iterator over the values in a <code>Set</code>.","An immutable set constructed at compile time.","","","","Returns true if <code>value</code> is in the <code>Set</code>.","","Returns the argument unchanged.","Returns a reference to the set’s internal static …","Calls <code>U::from(self)</code>.","","Returns true if <code>other</code> shares no elements with <code>self</code>.","Returns true if the <code>Set</code> contains no elements.","Returns true if <code>other</code> contains all values in <code>self</code>.","Returns true if <code>self</code> contains all values in <code>other</code>.","Returns an iterator over the values in the set.","Returns the number of elements in the <code>Set</code>.","","","","","",""],"i":[0,0,0,0,0,1,5,6,7,1,5,6,7,1,1,5,6,7,1,5,6,7,1,5,1,5,6,7,1,5,6,7,0,0,0,9,9,0,1,5,6,7,1,5,6,7,1,5,6,7,0,0,0,0,12,21,22,12,21,22,12,21,22,1,1,12,21,22,12,21,22,1,1,1,12,21,22,12,21,22,1,1,1,1,12,21,22,12,21,22,12,21,22,12,21,22,12,21,22,12,21,22,1,0,0,0,0,13,26,27,13,26,27,13,26,27,5,5,13,26,27,13,26,27,5,5,5,5,5,13,26,27,13,26,27,5,5,5,13,26,27,13,26,27,13,26,27,13,26,27,13,26,27,13,26,27,5,0,0,14,14,14,6,14,14,6,6,6,14,14,6,6,6,6,6,6,14,14,14,14,14,14,0,0,15,15,15,7,15,15,7,15,15,7,7,7,7,7,7,15,15,15,15,15,15],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1,-2]]],[],[]],[[[1,[-1,-2]],2],3,4,4],[[[5,[-1,-2]],2],3,4,4],[[[6,[-1]],2],3,4],[[[7,[-1]],2],3,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1,[-2,-3]],-1],-3,[8,9,10],[[11,[-1]]],[]],[[[5,[-2,-3]],-1],-3,[8,9,10],[[11,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[12,[-1,-2]]],[],[]],[[[5,[-1,-2]]],[[13,[-1,-2]]],[],[]],[[[6,[-1]]],[[14,[-1]]],[]],[[[7,[-1]]],[[15,[-1]]],[]],0,0,0,[[-1,-2],16,[],17],[[[18,[-1]],-2],16,10,17],0,[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1,-2]]],[[12,[-1,-2]]],[],[]],[[[21,[-1,-2]]],[[21,[-1,-2]]],[],[]],[[[22,[-1,-2]]],[[22,[-1,-2]]],[],[]],[[[1,[-2,-3]],-1],23,[8,9,10],[[11,[-1]]],[]],[[[1,[-1,-2]]],[[12,[-1,-2]]],[],[]],[[[12,[-1,-2]],2],3,4,4],[[[21,[-1,-2]],2],3,4,[]],[[[22,[-1,-2]],2],3,[],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[1,[-2,-3]],-1],[[24,[-3]]],[8,9,10],[[11,[-1]]],[]],[[[1,[-2,-3]],-1],[[24,[[16,[-2,-3]]]]],[8,9,10],[[11,[-1]]],[]],[[[1,[-2,-3]],-1],[[24,[-2]]],[8,9,10],[[11,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],23,[],[]],[[[1,[-1,-2]]],[[21,[-1,-2]]],[],[]],[[[1,[-1,-2]]],25,[],[]],[[],[[1,[-1,-2]]],[],[]],[[[12,[-1,-2]]],[[24,[[16,[-1,-2]]]]],[],[]],[[[21,[-1,-2]]],[[24,[-1]]],[],[]],[[[22,[-1,-2]]],[[24,[-2]]],[],[]],[[[12,[-1,-2]]],[[24,[[16,[-1,-2]]]]],[],[]],[[[21,[-1,-2]]],[[24,[-1]]],[],[]],[[[22,[-1,-2]]],[[24,[-2]]],[],[]],[[[12,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[[[21,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[[[22,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[[1,[-1,-2]]],[[22,[-1,-2]]],[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[13,[-1,-2]]],[[13,[-1,-2]]],[],[]],[[[26,[-1,-2]]],[[26,[-1,-2]]],[],[]],[[[27,[-1,-2]]],[[27,[-1,-2]]],[],[]],[[[5,[-2,-3]],-1],23,[8,9,10],[[11,[-1]]],[]],[[[5,[-1,-2]]],[[13,[-1,-2]]],[],[]],[[[13,[-1,-2]],2],3,4,4],[[[26,[-1,-2]],2],3,4,[]],[[[27,[-1,-2]],2],3,[],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[5,[-2,-3]],-1],[[24,[-3]]],[8,9,10],[[11,[-1]]],[]],[[[5,[-2,-3]],-1],[[24,[[16,[-2,-3]]]]],[8,9,10],[[11,[-1]]],[]],[[[5,[-2,-3]],-1],[[24,[25]]],[8,9,10],[[11,[-1]]],[]],[[[5,[-2,-3]],-1],[[24,[-2]]],[8,9,10],[[11,[-1]]],[]],[[[5,[-1,-2]],25],[[24,[[16,[-1,-2]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1,-2]]],23,[],[]],[[[5,[-1,-2]]],[[26,[-1,-2]]],[],[]],[[[5,[-1,-2]]],25,[],[]],[[[13,[-1,-2]]],[[24,[[16,[-1,-2]]]]],[],[]],[[[26,[-1,-2]]],[[24,[-1]]],[],[]],[[[27,[-1,-2]]],[[24,[-2]]],[],[]],[[[13,[-1,-2]]],[[24,[[16,[-1,-2]]]]],[],[]],[[[26,[-1,-2]]],[[24,[-1]]],[],[]],[[[27,[-1,-2]]],[[24,[-2]]],[],[]],[[[13,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[[[26,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[[[27,[-1,-2]]],[[16,[25,[24,[25]]]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[[[5,[-1,-2]]],[[27,[-1,-2]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[-1]]],[]],[[[6,[-2]],-1],23,[8,9,10],[[11,[-1]]]],[[[14,[-1]],2],3,4],[-1,-1,[]],[[[6,[-2]],-1],[[24,[25]]],[8,9,10],[[11,[-1]]]],[[[6,[-2]],-1],[[24,[-2]]],[8,9,10],[[11,[-1]]]],[[[6,[-1]],25],[[24,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]],[6,[-1]]],23,[]],[[[6,[-1]]],23,[]],[[[6,[-1]],[6,[-1]]],23,[]],[[[6,[-1]],[6,[-1]]],23,[]],[[[6,[-1]]],[[14,[-1]]],[]],[[[6,[-1]]],25,[]],[[[14,[-1]]],[[24,[-1]]],[]],[[[14,[-1]]],[[24,[-1]]],[]],[[[14,[-1]]],[[16,[25,[24,[25]]]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[15,[-1]]],[]],[[[7,[-2]],-1],23,[8,9,10],[[11,[-1]]]],[[[15,[-1]],2],3,4],[-1,-1,[]],[[[7,[-2]],-1],[[24,[-2]]],[8,9,10],[[11,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[7,[-1]],[7,[-1]]],23,[]],[[[7,[-1]]],23,[]],[[[7,[-1]],[7,[-1]]],23,[]],[[[7,[-1]],[7,[-1]]],23,[]],[[[7,[-1]]],[[15,[-1]]],[]],[[[7,[-1]]],25,[]],[[[15,[-1]]],[[24,[-1]]],[]],[[[15,[-1]]],[[24,[-1]]],[]],[[[15,[-1]]],[[16,[25,[24,[25]]]]],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]]],"c":[],"p":[[3,"Map",0],[3,"Formatter",205],[6,"Result",205],[8,"Debug",205],[3,"OrderedMap",0],[3,"OrderedSet",0],[3,"Set",0],[8,"Eq",206],[8,"PhfHash",0],[8,"Sized",207],[8,"PhfBorrow",208],[3,"Entries",50],[3,"Entries",103],[3,"Iter",157],[3,"Iter",182],[15,"tuple"],[8,"Hasher",209],[15,"slice"],[4,"Result",210],[3,"TypeId",211],[3,"Keys",50],[3,"Values",50],[15,"bool"],[4,"Option",212],[15,"usize"],[3,"Keys",103],[3,"Values",103]],"b":[[23,"impl-Index%3C%26T%3E-for-OrderedMap%3CK,+V%3E"],[128,"impl-OrderedMap%3CK,+V%3E"]]},\
"phf_shared":{"doc":"See the <code>phf</code> crate’s documentation for details.","t":"IGDIIKLLFMMKLMFFLKLLLL","n":["FmtConst","HashKey","Hashes","PhfBorrow","PhfHash","borrow","borrow","borrow_mut","displace","f1","f2","fmt_const","from","g","get_index","hash","into","phf_hash","phf_hash_slice","try_from","try_into","type_id"],"q":[[0,"phf_shared"],[22,"core::fmt"],[23,"core::fmt"],[24,"core::hash"],[25,"core::result"],[26,"core::any"]],"d":["Trait for printing types with <code>const</code> constructors, used by …","A central typedef for hash keys","","Identical to <code>std::borrow::Borrow</code> except omitting blanket …","A trait implemented by types which can be used in PHF data …","Convert a reference to <code>self</code> to a reference to the borrowed …","","","","","","Print a <code>const</code> expression representing this value.","Returns the argument unchanged.","","Return an index into <code>phf_generator::HashState::map</code>.","<code>key</code> is from <code>phf_generator::HashState</code>.","Calls <code>U::from(self)</code>.","Feeds the value into the state given, updating the hasher …","Feeds a slice of this type into the state provided.","","",""],"i":[0,0,0,0,0,14,4,4,0,4,4,15,4,4,0,0,4,10,10,4,4,4],"f":[0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1,1,1],1],0,0,[[-1,2],3,[]],[-1,-1,[]],0,[[4,[6,[[5,[1,1]]]],7],1],[[-1,8],4,[9,10]],[-1,-2,[],[]],[[-1,-2],5,[],11],[[[6,[-1]],-2],5,9,11],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]]],"c":[],"p":[[15,"u32"],[3,"Formatter",22],[6,"Result",22],[3,"Hashes",0],[15,"tuple"],[15,"slice"],[15,"usize"],[6,"HashKey",0],[8,"Sized",23],[8,"PhfHash",0],[8,"Hasher",24],[4,"Result",25],[3,"TypeId",26],[8,"PhfBorrow",0],[8,"FmtConst",0]],"b":[]},\
"powerfmt":{"doc":"<code>powerfmt</code> is a library that provides utilities for …","t":"AAADLLLLLLLLLLLLLLLLLLLLLLLLIKDDQILLLLLLLLLLLLLLLLLLLLLKLLLOLLLLLLLLLLLLLLLLLLLLLL","n":["buf","ext","smart_display","WriteBuffer","as_ref","as_ref","as_str","borrow","borrow","borrow_mut","cmp","default","deref","eq","fmt","fmt","fmt","from","hash","into","metadata","new","partial_cmp","remaining_capacity","try_from","try_into","type_id","write_str","FormatterExt","pad_with_width","FormatterOptions","Metadata","Metadata","SmartDisplay","align","alternate","borrow","borrow","borrow_mut","borrow_mut","clone","clone","default","deref","fill","fmt","fmt","fmt","fmt_with_metadata","from","from","from","from","into","into","metadata","new","padded_width","padded_width_of","padded_width_of","precision","reuse","sign_aware_zero_pad","sign_minus","sign_plus","try_from","try_from","try_into","try_into","type_id","type_id","unpadded_width","unpadded_width_of","width","with_align","with_alternate","with_fill","with_precision","with_sign_aware_zero_pad","with_sign_minus","with_sign_plus","with_width"],"q":[[0,"powerfmt"],[3,"powerfmt::buf"],[28,"powerfmt::ext"],[30,"powerfmt::smart_display"],[82,"core::cmp"],[83,"core::fmt"],[84,"core::fmt"],[85,"core::option"],[86,"core::result"],[87,"core::any"],[88,"core::fmt"]],"d":["A buffer for constructing a string while avoiding heap …","Extension traits.","Definition of <code>SmartDisplay</code> and its related items.","A buffer for construct a string while avoiding heap …","","","Obtain the contents of the buffer as a string.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates an empty buffer.","","Determine how many bytes are remaining in the buffer.","","","","","An extension trait for <code>core::fmt::Formatter</code>.","Writes the given arguments to the formatter, padding them …","Configuration for formatting.","Information used to format a value. This is returned by …","User-provided metadata type.","Format trait that allows authors to provide additional …","Flag indicating what form of alignment was requested.","Determines if the <code>#</code> flag was specified.","","","","","","","","","Character used as ‘fill’ whenever there is alignment.","","Format the value using the given formatter. This is the …","","Format the value using the given formatter and metadata. …","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Compute any information needed to format the value. This …","Creates a new <code>Metadata</code> with the given width and metadata. …","Obtain the width of the value after padding.","Obtain the width of the value after padding, given the …","Compute the width of multiple items while optionally …","Optionally specified precision for numeric types. …","Reuse the metadata for another type. This is useful when …","Determines if the <code>0</code> flag was specified.","Determines if the <code>-</code> flag was specified.","Determines if the <code>+</code> flag was specified.","","","","","","","Obtain the width of the value before padding.","Obtain the width of the value before padding, given the …","Optionally specified integer width that the output should …","Set the flag indicating what form of alignment is …","Set whether the <code>#</code> flag is specified.","Sets the fill character to use whenever there is alignment.","Set the optional precision for numeric types. …","Set whether the <code>0</code> flag is specified.","Set whether the <code>-</code> flag is specified.","Set whether the <code>+</code> flag is specified.","Set the optional integer width that the output should be."],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,22,0,0,19,0,11,11,12,11,12,11,12,11,11,12,11,12,19,11,19,12,11,11,11,12,11,19,12,12,12,0,11,12,11,11,11,12,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11],"f":[0,0,0,0,[1,2],[1,[[4,[3]]]],[1,2],[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[[1,1],5],[[],1],[1],[[1,1],6],[[1,7],8],[[1,7],8],[[1,7],8],[-1,-1,[]],[[1,-1],9,10],[-1,-2,[],[]],[[1,11],[[12,[1]]]],[[],1],[[1,1],[[13,[5]]]],[1,14],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[[1,2],8],0,[[-1,14,17],8,[]],0,0,0,0,[11,[[13,[18]]]],[11,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]]],[[12,[-1]]],19],[11,11],[[],11],[[[12,[-1]]],[],[19,20]],[11,21],[[[12,[-1]],7],8,19],[[-1,7],8,[]],[[11,7],8],[[-1,7,[12,[-1]]],8,[]],[-1,-1,[]],[7,11],[-1,-1,[]],[7,11],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,11],[[12,[-1]]],[]],[[14,-1],[[12,[-1]]],[19,20]],[[[12,[-1]],11],14,[19,20]],[[-1,11],14,19],0,[11,[[13,[14]]]],[[[12,[-1]]],[[12,[-2]]],[19,20],[19,20]],[11,6],[11,6],[11,6],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[[[12,[-1]]],14,[19,20]],[[-1,11],14,19],[11,[[13,[14]]]],[[11,[13,[18]]],11],[[11,6],11],[[11,21],11],[[11,[13,[14]]],11],[[11,6],11],[[11,6],11],[[11,6],11],[[11,[13,[14]]],11]],"c":[],"p":[[3,"WriteBuffer",3],[15,"str"],[15,"u8"],[15,"slice"],[4,"Ordering",82],[15,"bool"],[3,"Formatter",83],[6,"Result",83],[15,"tuple"],[8,"Hasher",84],[3,"FormatterOptions",30],[3,"Metadata",30],[4,"Option",85],[15,"usize"],[4,"Result",86],[3,"TypeId",87],[3,"Arguments",83],[4,"Alignment",83],[8,"SmartDisplay",30],[8,"Sized",88],[15,"char"],[8,"FormatterExt",28]],"b":[[4,"impl-AsRef%3Cstr%3E-for-WriteBuffer%3CSIZE%3E"],[5,"impl-AsRef%3C%5Bu8%5D%3E-for-WriteBuffer%3CSIZE%3E"],[14,"impl-Debug-for-WriteBuffer%3CSIZE%3E"],[15,"impl-Display-for-WriteBuffer%3CSIZE%3E"],[16,"impl-SmartDisplay-for-WriteBuffer%3CSIZE%3E"],[50,"impl-From%3C%26mut+Formatter%3C\'_%3E%3E-for-FormatterOptions"],[52,"impl-From%3C%26Formatter%3C\'_%3E%3E-for-FormatterOptions"]]},\
"ppv_lite86":{"doc":"","t":"IIIIIIIIIIQIIIIIIIIIIIIIKKOOOOKKKAKKKLLLLKKKKKKKKKKKKKKKKKKKKKKKKKIQIQIQIQIQIQIQIQIQIQKLLKKKLLCCCKKKDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGDGGDGGGLLLLLLLTDDLLLLLLLLLLLLL","n":["AndNot","ArithOps","BSwap","BitOps0","BitOps128","BitOps32","BitOps64","LaneWords4","Machine","MultiLane","Output","RotateEachWord128","RotateEachWord32","RotateEachWord64","Store","StoreBytes","Swap64","UnsafeFrom","VZip","Vec2","Vec4","Vec4Ext","Vector","Words4","andnot","bswap","dispatch","dispatch_light128","dispatch_light256","dispatch_light512","extract","extract","from_lanes","generic","insert","insert","instance","read_be","read_be","read_le","read_le","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right8","shuffle1230","shuffle2301","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","swap1","swap16","swap2","swap32","swap4","swap64","swap8","to_lanes","to_scalars","transpose4","u128x1","u128x1","u128x2","u128x2","u128x4","u128x4","u32x4","u32x4","u32x4x2","u32x4x2","u32x4x4","u32x4x4","u64x2","u64x2","u64x2x2","u64x2x2","u64x2x4","u64x2x4","u64x4","u64x4","unpack","unpack","unpack","unsafe_from","unsafe_read_be","unsafe_read_le","vec","vec","vec128_storage","vec256_storage","vec512_storage","vzip","write_be","write_le","G0","G1","GenericMachine","add","add","add","add_assign","add_assign","add_assign","andnot","andnot","andnot","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bswap","bswap","bswap","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","eq","eq","eq","eq","eq","eq","extract","extract","extract","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_lanes","from_lanes","from_lanes","from_lanes","insert","insert","insert","instance","into","into","into","into","into","into","into","into","into","new128","new128","not","not","not","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right11","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right12","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right16","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right20","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right24","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right25","rotate_each_word_right32","rotate_each_word_right32","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right7","rotate_each_word_right8","rotate_each_word_right8","rotate_each_word_right8","shuffle1230","shuffle1230","shuffle2301","shuffle2301","shuffle3012","shuffle3012","shuffle_lane_words1230","shuffle_lane_words2301","shuffle_lane_words3012","split128","split128","swap1","swap1","swap1","swap16","swap16","swap16","swap2","swap2","swap2","swap32","swap32","swap32","swap4","swap4","swap4","swap64","swap64","swap64","swap8","swap8","swap8","to_lanes","to_lanes","to_lanes","to_lanes","to_scalars","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128x1_generic","u128x2_generic","u128x4_generic","u32x4_generic","u32x4x2_generic","u32x4x4_generic","u64x2_generic","u64x2x2_generic","u64x2x4_generic","u64x4_generic","unpack","unpack","unpack","unsafe_read_be","unsafe_read_be","unsafe_read_le","unsafe_read_le","vec128_storage","vec256_storage","vec512_storage","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_be","write_be","write_le","write_le"],"q":[[0,"ppv_lite86"],[100,"ppv_lite86::generic"],[335,"core::marker"],[336,"core::fmt"],[337,"core::fmt"],[338,"core::any"]],"d":["","Ops that depend on word size","","Ops that are independent of word size and endian","","","","A vector composed one or more lanes each composed of four …","","A vector composed of multiple 128-bit lanes.","","","","","","","Exchange neigboring ranges of bits of the specified size","","Combine single vectors into a multi-lane vector.","A vector composed of two elements, which may be words or …","A vector composed of four elements, which may be words or …","Vec4 functions which may not be implemented yet for all …","","A vector composed of four words; depending on their size, …","","","","","","","","","Build a multi-lane vector from individual lanes.","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","Split a multi-lane vector into single-lane vectors.","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,28,29,0,0,0,0,30,31,8,0,30,31,32,32,32,32,32,33,33,33,33,33,33,34,33,33,35,35,35,36,36,36,37,37,37,37,37,37,37,8,38,39,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,7,32,32,40,4,4,32,32,0,0,0,41,4,4,0,0,0,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,12,13,14,15,9,10,11,16,17,12,13,14,15,9,10,11,16,17,9,10,11,12,13,14,15,9,10,11,16,17,12,13,14,12,13,14,9,10,11,19,9,10,9,10,11,12,12,12,12,12,12,13,13,14,15,9,10,11,16,17,19,9,10,11,19,9,10,15,12,13,14,15,9,10,11,16,17,13,14,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,10,11,9,10,11,9,10,11,19,9,19,9,19,9,9,9,9,13,14,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,19,9,10,11,25,12,13,14,15,9,10,11,16,17,12,13,14,15,9,10,11,16,17,12,13,14,15,9,10,11,16,17,0,0,0,0,0,0,0,0,0,0,9,10,11,9,10,9,10,0,0,0,12,13,14,15,9,10,11,16,17,9,10,9,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-1],[],[]],[-1,-1,[]],0,0,0,0,[[-1,1],-2,[],[]],[[-1,1],-2,[],[]],[-1,-2,[],[]],0,[[-1,-2,1],-1,[],[]],[[-1,-2,1],-1,[],[]],[[],-1,[]],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[[-1,[3,[2]]],-2,[],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-1,-1,-1],[[5,[-1,-1,-1,-1]]],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[[-1,-2],-3,[],[],[[7,[-2]]]],[[-1,-2],-3,[],[],[[7,[-2]]]],[-1,-2,[],[]],[[[3,[2]]],-1,[]],[[[3,[2]]],-1,[]],[[-1,-2],-3,[],[],[[8,[-2]]]],[[-1,-2],-3,[],[],[[8,[-2]]]],0,0,0,[-1,-2,[],[]],[[-1,[3,[2]]],5,[]],[[-1,[3,[2]]],5,[]],0,0,0,[[9,9]],[[10,10]],[[11,11]],[[9,9],5],[[10,10],5],[[11,11],5],[[9,9]],[[10,10]],[[11,11]],[[9,9]],[[10,10]],[[11,11]],[[9,9],5],[[10,10],5],[[11,11],5],[[9,9]],[[10,10]],[[11,11]],[[9,9],5],[[10,10],5],[[11,11],5],[[9,9]],[[10,10]],[[11,11]],[[9,9],5],[[10,10],5],[[11,11],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[9,9],[10,10],[11,11],[16,16],[17,17],[[],12],[[],13],[[],14],[[12,12],18],[[13,13],18],[[14,14],18],[[9,9],18],[[10,10],18],[[11,11],18],[[19,1],20],[[9,1],1],[[10,1],20],[[9,21],22],[[10,21],22],[[11,21],22],[-1,-1,[]],[[[23,[1]]],12],[11,12],[10,12],[[[23,[20]]],12],[9,12],[[[23,[20]]],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[23,[20]]],19],[[[23,[1]]],9],[[[23,[20]]],10],[[[23,[24]]],11],[[19,20,1],19],[[9,1,1],9],[[10,20,1],10],[[],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[12]]],13],[[[23,[12]]],14],[9],[10],[11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[19,19],[9,9],[19,19],[9,9],[19,19],[9,9],[9,9],[9,9],[9,9],[13,[[23,[12]]]],[14,[[23,[12]]]],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[9,9],[10,10],[11,11],[19,[[23,[20]]]],[9,[[23,[1]]]],[10,[[23,[20]]]],[11,[[23,[24]]]],[25,[[23,[1]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,0,0,0,0,0,0,0,0,0,[12,9],[12,10],[12,11],[[[3,[2]]],9],[[[3,[2]]],10],[[[3,[2]]],9],[[[3,[2]]],10],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[9,[3,[2]]],5],[[10,[3,[2]]],5],[[9,[3,[2]]],5],[[10,[3,[2]]],5]],"c":[],"p":[[15,"u32"],[15,"u8"],[15,"slice"],[8,"StoreBytes",0],[15,"tuple"],[8,"Sized",335],[8,"Store",0],[8,"MultiLane",0],[3,"u32x4_generic",100],[3,"u64x2_generic",100],[3,"u128x1_generic",100],[19,"vec128_storage",100],[3,"vec256_storage",100],[3,"vec512_storage",100],[3,"GenericMachine",100],[3,"G0",100],[3,"G1",100],[15,"bool"],[6,"u64x4_generic",100],[15,"u64"],[3,"Formatter",336],[6,"Result",336],[15,"array"],[15,"u128"],[6,"u32x4x4_generic",100],[4,"Result",337],[3,"TypeId",338],[8,"AndNot",0],[8,"BSwap",0],[8,"Vec2",0],[8,"Vec4",0],[8,"Machine",0],[8,"RotateEachWord32",0],[8,"RotateEachWord64",0],[8,"Words4",0],[8,"LaneWords4",0],[8,"Swap64",0],[8,"Vector",0],[8,"Vec4Ext",0],[8,"UnsafeFrom",0],[8,"VZip",0]],"b":[[176,"impl-From%3C%5Bu32;+4%5D%3E-for-vec128_storage"],[177,"impl-From%3Cu128x1_generic%3E-for-vec128_storage"],[178,"impl-From%3Cu64x2_generic%3E-for-vec128_storage"],[179,"impl-From%3C%5Bu64;+2%5D%3E-for-vec128_storage"],[180,"impl-From%3Cu32x4_generic%3E-for-vec128_storage"]]},\
"qemu_exit":{"doc":"Exit QEMU with user-defined code.","t":"IKKKADLLLLLLLLLLL","n":["QEMUExit","exit","exit_failure","exit_success","x86","X86","borrow","borrow_mut","exit","exit_failure","exit_success","from","into","new","try_from","try_into","type_id"],"q":[[0,"qemu_exit"],[5,"qemu_exit::x86"],[17,"core::result"],[18,"core::any"]],"d":["Generic interface for exiting QEMU.","Exit with specified return code.","Exit QEMU using <code>EXIT_FAILURE</code>, aka <code>1</code>.","Exit QEMU using <code>EXIT_SUCCESS</code>, aka <code>0</code>, if possible.","x86 (i386) and x86_64.","x86/x86_64 configuration.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create an instance.","","",""],"i":[0,7,7,7,0,0,3,3,3,3,3,3,3,3,3,3,3],"f":[0,[[-1,1],2,[]],[-1,2,[]],[-1,2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[3,1],2],[3,2],[3,2],[-1,-1,[]],[-1,-2,[],[]],[[4,1],3],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]]],"c":[],"p":[[15,"u32"],[15,"never"],[3,"X86",5],[15,"u16"],[4,"Result",17],[3,"TypeId",18],[8,"QEMUExit",0]],"b":[]},\
"rand_chacha":{"doc":"The ChaCha random number generator.","t":"DDDDDDGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ChaCha12Core","ChaCha12Rng","ChaCha20Core","ChaCha20Rng","ChaCha8Core","ChaCha8Rng","ChaChaCore","ChaChaRng","as_rngcore","as_rngcore","as_rngcore","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_seed","from_seed","from_seed","from_seed","from_seed","from_seed","generate","generate","generate","get_seed","get_seed","get_seed","get_stream","get_stream","get_stream","get_word_pos","get_word_pos","get_word_pos","into","into","into","into","into","into","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","rand_core","set_stream","set_stream","set_stream","set_word_pos","set_word_pos","set_word_pos","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"rand_chacha"],[117,"rand_core"],[118,"core::fmt"],[119,"core::fmt"],[120,"core::result"],[121,"core::any"]],"d":["ChaCha with 12 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds","A cryptographically secure random number generator that …","ChaCha with 8 rounds","A cryptographically secure random number generator that …","ChaCha with 20 rounds, low-level interface","ChaCha with 20 rounds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Get the seed.","Get the seed.","Get the seed.","Get the stream number.","Get the stream number.","Get the stream number.","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Get the offset from the start of the stream, in 32-bit …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Set the stream number.","Set the stream number.","Set the stream number.","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","Set the offset from the start of the stream, in 32-bit …","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,3,5,7,2,3,4,5,6,7,2,3,3,4,5,5,6,7,7,2,3,4,5,6,7,2,4,6,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,3,5,7,3,5,7,0,3,5,7,3,5,7,3,5,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[7,7],8],[[3,[10,[9]]],11],[[5,[10,[9]]],11],[[7,[10,[9]]],11],[[2,12],13],[[3,12],13],[[4,12],13],[[5,12],13],[[6,12],13],[[7,12],13],[-1,-1,[]],[2,3],[-1,-1,[]],[-1,-1,[]],[4,5],[-1,-1,[]],[-1,-1,[]],[6,7],[-1,-1,[]],[[],2],[[],3],[[],4],[[],5],[[],6],[[],7],[2,11],[4,11],[6,11],[3,[[14,[9]]]],[5,[[14,[9]]]],[7,[[14,[9]]]],[3,15],[5,15],[7,15],[3,16],[5,16],[7,16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,17],[5,17],[7,17],[3,15],[5,15],[7,15],0,[[3,15],11],[[5,15],11],[[7,15],11],[[3,16],11],[[5,16],11],[[7,16],11],[[3,[10,[9]]],[[19,[11,18]]]],[[5,[10,[9]]],[[19,[11,18]]]],[[7,[10,[9]]],[[19,[11,18]]]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"RngCore",117],[3,"ChaCha20Core",0],[3,"ChaCha20Rng",0],[3,"ChaCha12Core",0],[3,"ChaCha12Rng",0],[3,"ChaCha8Core",0],[3,"ChaCha8Rng",0],[15,"bool"],[15,"u8"],[15,"slice"],[15,"tuple"],[3,"Formatter",118],[6,"Result",118],[15,"array"],[15,"u64"],[15,"u128"],[15,"u32"],[3,"Error",119],[4,"Result",120],[3,"TypeId",121]],"b":[]},\
"rand_core":{"doc":"Random number generation traits","t":"SIIDSIQIKALLLKLLLLLKALAKKLLKLLLDDIQQLLLLLLLMMLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFF","n":["CUSTOM_START","CryptoRng","CryptoRngCore","Error","INTERNAL_START","RngCore","Seed","SeedableRng","as_rngcore","block","borrow","borrow_mut","code","fill_bytes","fmt","fmt","from","from","from_rng","from_seed","impls","into","le","next_u32","next_u64","raw_os_error","seed_from_u64","try_fill_bytes","try_from","try_into","type_id","BlockRng","BlockRng64","BlockRngCore","Item","Results","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone","core","core","fill_bytes","fill_bytes","fmt","fmt","from","from","from_rng","from_rng","from_seed","from_seed","generate","generate_and_set","generate_and_set","index","index","into","into","new","new","next_u32","next_u32","next_u64","next_u64","reset","reset","seed_from_u64","seed_from_u64","try_fill_bytes","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","fill_bytes_via_next","fill_via_u32_chunks","fill_via_u64_chunks","next_u32_via_fill","next_u64_via_fill","next_u64_via_u32","read_u32_into","read_u64_into"],"q":[[0,"rand_core"],[31,"rand_core::block"],[80,"rand_core::impls"],[86,"rand_core::le"],[88,"core::num::nonzero"],[89,"core::option"],[90,"core::fmt"],[91,"core::fmt"],[92,"core::any"],[93,"core::clone"],[94,"core::marker"],[95,"core::fmt"]],"d":["Codes at or above this point can be used by users to …","A marker trait used to indicate that an <code>RngCore</code> or …","An extension trait that is automatically implemented for …","Error type of random number generators","Codes below this point represent OS Errors (i.e. positive …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Upcast to an <code>RngCore</code> trait object.","The <code>BlockRngCore</code> trait and implementation helpers","","","Retrieve the error code, if any.","Fill <code>dest</code> with random data.","","","","Returns the argument unchanged.","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","Helper functions for implementing <code>RngCore</code> functions.","Calls <code>U::from(self)</code>.","Little-Endian utilities","Return the next random <code>u32</code>.","Return the next random <code>u64</code>.","Extract the raw OS error code (if this error came from the …","Create a new PRNG using a <code>u64</code> seed.","Fill <code>dest</code> entirely with random data.","","","","A wrapper type implementing <code>RngCore</code> for some type …","A wrapper type implementing <code>RngCore</code> for some type …","A trait for RNGs which do not generate random numbers …","Results element type, e.g. <code>u32</code>.","Results type. This is the ‘block’ an RNG implementing …","","","","","","","","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","The <em>core</em> part of the RNG, implementing the <code>generate</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Generate a new block of results.","Generate a new set of results immediately, setting the …","Generate a new set of results immediately, setting the …","Get the index into the result buffer.","Get the index into the result buffer.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>BlockRng</code> from an existing RNG implementing …","Create a new <code>BlockRng</code> from an existing RNG implementing …","","","","","Reset the number of available results. This will force a …","Reset the number of available results. This will force a …","","","","","","","","","","","Implement <code>fill_bytes</code> via <code>next_u64</code> and <code>next_u32</code>, …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>fill_bytes</code> by reading chunks from the output …","Implement <code>next_u32</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>fill_bytes</code>, little-endian order.","Implement <code>next_u64</code> via <code>next_u32</code>, little-endian order.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>."],"i":[2,0,0,0,2,0,21,0,23,0,2,2,2,1,2,2,2,2,21,21,0,2,0,1,1,2,21,1,2,2,2,0,0,0,17,17,15,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,17,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,15,19,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[-1,1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,[[4,[3]]]],[[-1,[6,[5]]],7,[]],[[2,8],9],[[2,8],9],[3,2],[-1,-1,[]],[-1,[[10,[-2,2]]],1,[]],[[],-1,[]],0,[-1,-2,[],[]],0,[-1,11,[]],[-1,12,[]],[2,[[4,[13]]]],[12,-1,[]],[[-1,[6,[5]]],[[10,[7,2]]],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,14,[]],0,0,0,0,0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[-1]]],[[15,[-1]]],[16,17,18]],[[[19,[-1]]],[[19,[-1]]],[16,17,18]],0,0,[[[15,[-1]],[6,[5]]],7,17],[[[19,[-1]],[6,[5]]],7,17],[[[15,[-1]],8],9,[17,20]],[[[19,[-1]],8],9,[17,20]],[-1,-1,[]],[-1,-1,[]],[-1,[[10,[[15,[-2]],2]]],1,[17,21]],[-1,[[10,[[19,[-2]],2]]],1,[17,21]],[[],[[15,[-1]]],[17,21]],[[],[[19,[-1]]],[17,21]],[-1,7,[]],[[[15,[-1]],22],7,17],[[[19,[-1]],22],7,17],[[[15,[-1]]],22,17],[[[19,[-1]]],22,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-1]]],17],[-1,[[19,[-1]]],17],[[[15,[-1]]],11,17],[[[19,[-1]]],11,17],[[[15,[-1]]],12,17],[[[19,[-1]]],12,17],[[[15,[-1]]],7,17],[[[19,[-1]]],7,17],[12,[[15,[-1]]],[17,21]],[12,[[19,[-1]]],[17,21]],[[[15,[-1]],[6,[5]]],[[10,[7,2]]],17],[[[19,[-1]],[6,[5]]],[[10,[7,2]]],17],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[[-1,[6,[5]]],7,[1,18]],[[[6,[11]],[6,[5]]],[[7,[22,22]]]],[[[6,[12]],[6,[5]]],[[7,[22,22]]]],[-1,11,[1,18]],[-1,12,[1,18]],[-1,12,[1,18]],[[[6,[5]],[6,[11]]],7],[[[6,[5]],[6,[12]]],7]],"c":[],"p":[[8,"RngCore",0],[3,"Error",0],[3,"NonZeroU32",88],[4,"Option",89],[15,"u8"],[15,"slice"],[15,"tuple"],[3,"Formatter",90],[6,"Result",90],[4,"Result",91],[15,"u32"],[15,"u64"],[15,"i32"],[3,"TypeId",92],[3,"BlockRng",31],[8,"Clone",93],[8,"BlockRngCore",31],[8,"Sized",94],[3,"BlockRng64",31],[8,"Debug",90],[8,"SeedableRng",0],[15,"usize"],[8,"CryptoRngCore",0]],"b":[[14,"impl-Display-for-Error"],[15,"impl-Debug-for-Error"]]},\
"raw_cpuid":{"doc":"A library to parse the x86 CPUID instruction, written in …","t":"NDENNNNNRNDDEDDENDDNDDENNNDNNNDDDEEDDDDDDNNNNEDNNNNNDDDDDNDDNDNNNNNDDNNDDDDDDNNNDDNNNDEDDDDNDNDNDEDNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLF","n":["ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count"],"q":[[0,"raw_cpuid"],[1126,"raw_cpuid::native_cpuid"],[1127,"core::option"],[1128,"core::fmt"],[1129,"core::fmt"],[1130,"core::any"]],"d":["","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …",""],"i":[53,0,0,50,50,50,50,53,0,26,0,0,0,0,0,0,49,0,0,26,0,0,0,21,20,49,0,39,39,64,0,0,0,0,0,0,0,0,0,0,0,39,26,50,53,0,0,51,21,20,49,53,0,0,0,0,0,20,0,0,49,0,50,50,39,21,20,0,0,50,26,0,0,0,0,0,0,50,53,53,0,0,21,49,26,0,0,0,0,0,0,20,0,26,0,49,0,0,0,21,20,39,50,20,53,53,0,51,53,1,3,6,8,10,11,10,11,12,14,14,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,14,16,18,19,19,12,22,23,14,24,1,25,26,27,28,12,29,30,31,32,12,33,34,35,36,37,0,38,38,38,38,24,40,27,38,41,38,41,38,41,38,41,42,42,42,42,43,1,1,36,1,1,38,41,39,37,6,44,42,45,35,18,1,10,25,46,12,21,47,48,49,50,51,23,52,20,11,53,14,14,15,47,14,36,36,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,39,37,6,44,42,45,35,18,24,1,10,10,25,26,27,27,46,28,12,21,21,47,29,48,49,49,30,50,50,51,51,23,52,31,64,65,32,20,20,66,11,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,50,51,23,52,31,64,65,32,20,66,11,53,24,24,24,57,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,63,24,24,24,63,24,63,24,24,24,24,63,63,24,6,37,19,15,19,15,19,19,15,18,14,15,56,14,15,18,15,36,14,43,56,44,14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,6,14,56,56,14,15,14,14,14,22,12,33,37,14,15,14,14,18,44,14,14,43,43,14,62,62,43,15,15,14,15,56,37,43,44,14,15,45,45,14,56,37,56,14,56,44,44,43,56,44,14,43,18,37,37,43,43,43,43,43,43,43,43,14,15,43,6,6,37,6,6,56,33,61,61,60,56,15,44,52,33,34,15,15,14,37,14,6,61,15,14,15,14,15,14,45,56,14,33,14,15,44,44,34,56,15,14,14,18,14,44,44,14,14,14,14,15,15,15,14,56,43,14,33,37,15,56,18,56,14,14,14,43,33,56,6,14,56,56,56,15,56,6,18,37,33,56,18,18,18,56,62,62,56,56,33,15,56,18,56,14,44,14,14,14,14,14,14,15,44,14,37,15,44,15,14,15,37,44,14,37,14,56,33,33,15,34,33,37,14,56,14,44,43,43,56,6,56,44,14,18,44,14,37,56,18,56,6,15,14,58,15,14,58,58,58,22,23,52,58,58,38,38,38,38,3,14,47,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,25,28,29,30,31,32,66,6,36,36,36,59,36,19,12,59,59,12,36,36,36,12,12,22,23,58,62,38,41,38,41,38,41,38,41,42,42,42,42,61,41,41,41,41,61,60,41,41,41,41,47,12,48,48,6,59,56,19,12,12,62,62,18,52,14,6,6,34,61,18,62,14,0,24,25,28,29,30,31,32,66,35,35,40,27,6,36,40,59,19,6,6,18,65,12,15,16,16,48,59,44,60,62,46,46,46,46,46,19,12,48,59,65,47,14,59,44,47,47,47,47,47,47,47,47,33,33,33,35,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,40,3,27,15,8,14,43,56,57,36,58,59,60,34,61,22,62,33,40,16,19,63,3,38,41,39,37,6,44,42,45,35,18,24,1,10,25,26,27,46,28,12,21,47,29,48,49,30,50,51,23,52,31,64,65,32,20,66,11,53,36,19,24,35,48,58,58,58,58,58,58,58,58,58,58,58,58,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,[[5,[4]]]],[6,7],[8,9],[10,9],[11,9],[10,9],[11,9],[12,13],[14,7],[14,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,4],[14,7],[16,17],[18,7],[19,7],[19,20],[12,21],[22,7],[23,7],[14,7],[24,24],[1,1],[25,25],[26,26],[27,27],[28,28],[12,12],[29,29],[30,30],[31,31],[32,32],[12,13],[33,7],[34,4],[35,7],[36,7],[37,4],0,[38,39],[38,7],[38,7],[38,7],[[],24],[40,4],[27,9],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[43,7],0,0,[36,7],0,0,[[38,38],2],[[41,41],2],[[39,39],2],[[37,37],2],[[6,6],2],[[44,44],2],[[42,42],2],[[45,45],2],[[35,35],2],[[18,18],2],[[1,1],2],[[10,10],2],[[25,25],2],[[46,46],2],[[12,12],2],[[21,21],2],[[47,47],2],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[23,23],2],[[52,52],2],[[20,20],2],[[11,11],2],[[53,53],2],[14,7],[14,7],[15,4],[47,2],[14,7],[36,7],[36,7],[[15,54],55],[[8,54],55],[[14,54],55],[[43,54],55],[[56,54],55],[[57,54],55],[[36,54],55],[[58,54],55],[[59,54],55],[[60,54],55],[[34,54],55],[[61,54],55],[[22,54],55],[[62,54],55],[[33,54],55],[[40,54],55],[[16,54],55],[[19,54],55],[[63,54],55],[[3,54],55],[[38,54],55],[[41,54],55],[[39,54],55],[[39,54],55],[[37,54],55],[[6,54],55],[[44,54],55],[[42,54],55],[[45,54],55],[[35,54],55],[[18,54],55],[[24,54],55],[[1,54],55],[[10,54],55],[[10,54],55],[[25,54],55],[[26,54],55],[[27,54],55],[[27,54],55],[[46,54],55],[[28,54],55],[[12,54],55],[[21,54],55],[[21,54],55],[[47,54],55],[[29,54],55],[[48,54],55],[[49,54],55],[[49,54],55],[[30,54],55],[[50,54],55],[[50,54],55],[[51,54],55],[[51,54],55],[[23,54],55],[[52,54],55],[[31,54],55],[[64,54],55],[[65,54],55],[[32,54],55],[[20,54],55],[[20,54],55],[[66,54],55],[[11,54],55],[[11,54],55],[[53,54],55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,[[5,[37]]]],[24,[[5,[25]]]],[24,[[5,[28]]]],[57,4],[24,[[5,[32]]]],[24,[[5,[57]]]],[24,[[5,[56]]]],[24,[[5,[15]]]],[24,[[5,[58]]]],[24,[[5,[29]]]],[24,[[5,[29]]]],[24,[[5,[14]]]],[24,[[5,[3]]]],[24,[[5,[38]]]],[24,[[5,[41]]]],[24,[[5,[18]]]],[24,[[5,[47]]]],[24,[[5,[36]]]],[24,[[5,[45]]]],[24,[[5,[8]]]],[24,[[5,[6]]]],[24,[[5,[16]]]],[24,[[5,[46]]]],[24,[[5,[35]]]],[24,[[5,[33]]]],[63,4],[24,[[5,[61]]]],[24,[[5,[60]]]],[24,[[5,[62]]]],[63,17],[24,[[5,[63]]]],[63,4],[24,[[5,[44]]]],[24,[[5,[43]]]],[24,[[5,[42]]]],[24,[[5,[40]]]],[63,[[5,[66]]]],[63,[[5,[11]]]],[24,[[5,[10]]]],[6,7],[37,2],[19,2],[15,2],[19,2],[15,2],[19,2],[19,2],[15,2],[18,2],[14,2],[15,2],[56,2],[14,2],[15,2],[18,2],[15,2],[36,2],[14,2],[43,2],[56,2],[44,2],[14,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[56,2],[6,2],[14,2],[56,2],[56,2],[14,2],[15,2],[14,2],[14,2],[14,2],[22,2],[12,2],[33,2],[37,2],[14,2],[15,2],[14,2],[14,2],[18,2],[44,2],[14,2],[14,2],[43,2],[43,2],[14,2],[62,2],[62,2],[43,2],[15,2],[15,2],[14,2],[15,2],[56,2],[37,2],[43,2],[44,2],[14,2],[15,2],[45,2],[45,2],[14,2],[56,2],[37,2],[56,2],[14,2],[56,2],[44,2],[44,2],[43,2],[56,2],[44,2],[14,2],[43,2],[18,2],[37,2],[37,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[43,2],[14,2],[15,2],[43,2],[6,2],[6,2],[37,2],[6,2],[6,2],[56,2],[33,2],[61,2],[61,2],[60,2],[56,2],[15,2],[44,2],[52,2],[33,2],[34,2],[15,2],[15,2],[14,2],[37,2],[14,2],[6,2],[61,2],[15,2],[14,2],[15,2],[14,2],[15,2],[14,2],[45,2],[56,2],[14,2],[33,2],[14,2],[15,2],[44,2],[44,2],[34,2],[56,2],[15,2],[14,2],[14,2],[18,2],[14,2],[44,2],[44,2],[14,2],[14,2],[14,2],[14,2],[15,2],[15,2],[15,2],[14,2],[56,2],[43,2],[14,2],[33,2],[37,2],[15,2],[56,2],[18,2],[56,2],[14,2],[14,2],[14,2],[43,2],[33,2],[56,2],[6,2],[14,2],[56,2],[56,2],[56,2],[15,2],[56,2],[6,2],[18,2],[37,2],[33,2],[56,2],[18,2],[18,2],[18,2],[56,2],[62,2],[62,2],[56,2],[56,2],[33,2],[15,2],[56,2],[18,2],[56,2],[14,2],[44,2],[14,2],[14,2],[14,2],[14,2],[14,2],[14,2],[15,2],[44,2],[14,2],[37,2],[15,2],[44,2],[15,2],[14,2],[15,2],[37,2],[44,2],[14,2],[37,2],[14,2],[56,2],[33,2],[33,2],[15,2],[34,2],[33,2],[37,2],[14,2],[56,2],[14,2],[44,2],[43,2],[43,2],[56,2],[6,2],[56,2],[44,2],[14,2],[18,2],[44,2],[14,2],[37,2],[56,2],[18,2],[56,2],[6,2],[15,2],[14,2],[58,2],[15,2],[14,2],[58,2],[58,2],[58,2],[22,17],[23,17],[52,17],[58,2],[58,2],[38,39],[38,7],[38,7],[38,7],[3,53],[14,7],[47,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,17],[36,2],[36,2],[36,2],[59,2],[36,2],[19,2],[12,2],[59,2],[59,2],[12,2],[36,2],[36,2],[36,2],[12,2],[12,2],[22,4],[23,4],[58,30],[62,31],[38,39],[41,39],[38,7],[41,17],[38,39],[41,39],[38,7],[41,17],[42,39],[42,7],[42,39],[42,7],[61,[[5,[23]]]],[41,39],[41,7],[41,7],[41,17],[61,[[5,[22]]]],[60,[[5,[34]]]],[41,39],[41,7],[41,7],[41,17],[47,17],[12,7],[48,7],[48,49],[6,7],[59,51],[56,7],[19,17],[12,13],[12,13],[62,7],[62,7],[18,4],[52,17],[14,7],[6,17],[6,13],[34,4],[61,[[5,[52]]]],[18,4],[62,4],[14,7],0,[[],24],[25,[[5,[27]]]],[28,[[5,[12]]]],[29,[[5,[48]]]],[30,[[5,[59]]]],[31,[[5,[64]]]],[32,[[5,[19]]]],[66,[[5,[1]]]],[35,7],[35,7],[40,4],0,[6,13],[36,7],[40,4],[59,4],[19,7],[6,13],[6,7],[18,7],[65,67],[12,13],[15,4],[16,17],[16,17],[48,17],[59,50],[44,7],[60,4],[62,[[68,[67,67]]]],[46,67],[46,69],[46,4],[46,4],[46,4],[19,4],[12,13],[48,4],[59,4],[65,67],[47,17],[14,7],0,[44,4],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[47,17],[33,17],[33,17],[33,17],[35,7],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[-1,[[70,[-2]]],[],[]],[40,[[5,[67]]]],[3,[[5,[4]]]],0,[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[-1,71,[]],[36,7],[19,17],[[],24],[35,4],[48,4],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,2],[58,4],[58,4],[58,4],[[4,4],1]],"c":[115,116],"p":[[3,"CpuIdResult",0],[15,"bool"],[3,"HypervisorInfo",0],[15,"u32"],[4,"Option",1127],[3,"ProcessorCapacityAndFeatureInfo",0],[15,"u8"],[3,"ProcessorBrandString",0],[15,"str"],[3,"VendorInfo",0],[3,"SoCVendorBrand",0],[3,"CacheParameter",0],[15,"usize"],[3,"FeatureInfo",0],[3,"ExtendedProcessorFeatureIdentifiers",0],[3,"ProcessorFrequencyInfo",0],[15,"u16"],[3,"MemoryEncryptionInfo",0],[3,"DatInfo",0],[4,"DatType",0],[4,"CacheType",0],[3,"L3CatInfo",0],[3,"L2CatInfo",0],[3,"CpuId",0],[3,"CacheInfoIter",0],[4,"CacheInfoType",0],[3,"CacheInfo",0],[3,"CacheParametersIter",0],[3,"ExtendedTopologyIter",0],[3,"ExtendedStateIter",0],[3,"SgxSectionIter",0],[3,"DatIter",0],[3,"ProcessorTraceInfo",0],[3,"L3MonitoringInfo",0],[3,"ProcessorTopologyInfo",0],[3,"PerformanceMonitoringInfo",0],[3,"ApmInfo",0],[3,"L1CacheTlbInfo",0],[4,"Associativity",0],[3,"TscInfo",0],[3,"L2And3CacheTlbInfo",0],[3,"Tlb1gbPageInfo",0],[3,"ThermalPowerInfo",0],[3,"SvmFeatures",0],[3,"PerformanceOptimizationInfo",0],[3,"ProcessorSerial",0],[3,"MonitorMwaitInfo",0],[3,"ExtendedTopologyLevel",0],[4,"TopologyType",0],[4,"ExtendedRegisterType",0],[4,"ExtendedRegisterStateLocation",0],[3,"MemBwAllocationInfo",0],[4,"Hypervisor",0],[3,"Formatter",1128],[6,"Result",1128],[3,"ExtendedFeatures",0],[3,"DirectCacheAccessInfo",0],[3,"ExtendedStateInfo",0],[3,"ExtendedState",0],[3,"RdtMonitoringInfo",0],[3,"RdtAllocationInfo",0],[3,"SgxInfo",0],[3,"SoCVendorInfo",0],[4,"SgxSectionInfo",0],[3,"EpcSection",0],[3,"SoCVendorAttributesIter",0],[15,"u64"],[15,"tuple"],[15,"u128"],[4,"Result",1129],[3,"TypeId",1130]],"b":[[342,"impl-Debug-for-Associativity"],[343,"impl-Display-for-Associativity"],[353,"impl-Debug-for-VendorInfo"],[354,"impl-Display-for-VendorInfo"],[357,"impl-Debug-for-CacheInfo"],[358,"impl-Display-for-CacheInfo"],[362,"impl-Debug-for-CacheType"],[363,"impl-Display-for-CacheType"],[367,"impl-Debug-for-TopologyType"],[368,"impl-Display-for-TopologyType"],[370,"impl-Debug-for-ExtendedRegisterType"],[371,"impl-Display-for-ExtendedRegisterType"],[372,"impl-Debug-for-ExtendedRegisterStateLocation"],[373,"impl-Display-for-ExtendedRegisterStateLocation"],[380,"impl-Display-for-DatType"],[381,"impl-Debug-for-DatType"],[383,"impl-Debug-for-SoCVendorBrand"],[384,"impl-Display-for-SoCVendorBrand"]]},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"],[28,"core::ops::function"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,1,8,1,8,0,1,1,1,1,8,1,8,0,1,8,1,3,8,1,8,1,8,1,8,1],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[1,[-1,-2,-3]]],-1,[],2,3],[[[1,[-1,-2,-3]]],-1,[],2,3],[[[1,[-1,-2,-3]]],4,[],2,3],[[[1,[-1,-2,-3]],5],6,7,2,3],[[8,5],6],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[1,[-1,-2,8]]],[],2],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2,-3]]],-1,[],2,3],[[],9],[[],9],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]],[[-1,-2],[[1,[-1,-2,-3]]],[],2,3]],"c":[],"p":[[3,"ScopeGuard",0],[8,"FnOnce",28],[8,"Strategy",0],[15,"tuple"],[3,"Formatter",29],[6,"Result",29],[8,"Debug",29],[4,"Always",0],[15,"bool"],[4,"Result",30],[3,"TypeId",31]],"b":[]},\
"shell_words":{"doc":"Process command line according to parsing rules of Unix …","t":"DLLLLLLLLLFFFLLLLL","n":["ParseError","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","into","join","quote","split","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"shell_words"],[18,"core::fmt"],[19,"core::fmt"],[20,"core::iter::traits::collect"],[21,"alloc::borrow"],[22,"alloc::vec"],[23,"core::result"],[24,"core::any"]],"d":["An error returned when shell parsing fails.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Joins arguments into a single command line suitable for …","Escapes special characters in a string, so that it will …","Splits command line into separate arguments, in much the …","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[[1,4],5],[[1,4],5],[-1,-1,[]],[-1,-2,[],[]],[-1,6,7],[8,[[9,[8]]]],[8,[[11,[[10,[6]],1]]]],[-1,-2,[],[]],[-1,6,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]]],"c":[],"p":[[3,"ParseError",0],[15,"tuple"],[15,"bool"],[3,"Formatter",18],[6,"Result",18],[3,"String",19],[8,"IntoIterator",20],[15,"str"],[4,"Cow",21],[3,"Vec",22],[4,"Result",23],[3,"TypeId",24]],"b":[[6,"impl-Display-for-ParseError"],[7,"impl-Debug-for-ParseError"]]},\
"siphasher":{"doc":"","t":"AAACCCCDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDDDLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["prelude","sip","sip128","_","_","sip","sip128","SipHasher","SipHasher13","SipHasher24","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","default","default","default","finish","finish","finish","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","key","key","key","keys","keys","keys","new","new","new","new_with_key","new_with_key","new_with_key","new_with_keys","new_with_keys","new_with_keys","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize","Hash128","Hasher128","SipHasher","SipHasher13","SipHasher24","as_bytes","as_u128","as_u64","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","default","default","default","default","finish","finish","finish","finish128","finish128","finish128","finish128","fmt","fmt","fmt","fmt","from","from","from","from","from","h1","h2","hash","hash","hash","into","into","into","into","key","key","key","keys","keys","keys","new","new","new","new_with_key","new_with_key","new_with_key","new_with_keys","new_with_keys","new_with_keys","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write","write_u16","write_u16","write_u16","write_u32","write_u32","write_u32","write_u64","write_u64","write_u64","write_u8","write_u8","write_u8","write_usize","write_usize","write_usize"],"q":[[0,"siphasher"],[3,"siphasher::prelude"],[7,"siphasher::sip"],[79,"siphasher::sip128"],[173,"core::fmt"],[174,"core::fmt"],[175,"core::any"]],"d":["","An implementation of SipHash.","An implementation of SipHash with a 128-bit output.","","","","","An implementation of SipHash 2-4.","An implementation of SipHash 1-3.","An implementation of SipHash 2-4.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the keys used by this hasher","Get the keys used by this hasher","Get the keys used by this hasher","Creates a new <code>SipHasher13</code> with the two initial keys set to …","Creates a new <code>SipHasher24</code> with the two initial keys set to …","Creates a new <code>SipHasher</code> with the two initial keys set to 0.","Creates a <code>SipHasher13</code> from a 16 byte key.","Creates a <code>SipHasher24</code> from a 16 byte key.","Creates a <code>SipHasher</code> from a 16 byte key.","Creates a <code>SipHasher13</code> that is keyed off the provided keys.","Creates a <code>SipHasher24</code> that is keyed off the provided keys.","Creates a <code>SipHasher</code> that is keyed off the provided keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 128-bit (2x64) hash output","","An implementation of SipHash128 2-4.","An implementation of SipHash128 1-3.","An implementation of SipHash128 2-4.","Convert into a 16-bytes vector","Convert into a <code>u128</code>","Convert into <code>(u64, u64)</code>","","","","","","","","","","","","","","","","","","","","Return a 128-bit hash","Return a 128-bit hash","Return a 128-bit hash","Return a 128-bit hash","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Hash a byte array - This is the easiest and safest way to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the key used by this hasher as a 16 byte vector","Get the keys used by this hasher","Get the keys used by this hasher","Get the keys used by this hasher","Creates a new <code>SipHasher13</code> with the two initial keys set to …","Creates a new <code>SipHasher24</code> with the two initial keys set to …","Creates a new <code>SipHasher</code> with the two initial keys set to 0.","Creates a <code>SipHasher13</code> from a 16 byte key.","Creates a <code>SipHasher24</code> from a 16 byte key.","Creates a <code>SipHasher</code> from a 16 byte key.","Creates a <code>SipHasher13</code> that is keyed off the provided keys.","Creates a <code>SipHasher24</code> that is keyed off the provided keys.","Creates a <code>SipHasher</code> that is keyed off the provided keys.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,16,16,16,16,18,19,20,16,18,19,20,16,18,19,20,16,18,19,20,18,19,20,21,18,19,20,16,18,19,20,16,16,18,19,20,16,16,18,19,20,16,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,16,18,19,20,16,18,19,20,16,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20,18,19,20],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[[],1],[[],2],[[],3],[1,4],[2,4],[3,4],[[1,5],6],[[2,5],6],[[3,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,[8,[7]]],4],[[2,[8,[7]]],4],[[3,[8,[7]]],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[9,[7]]]],[2,[[9,[7]]]],[3,[[9,[7]]]],[1,[[10,[4,4]]]],[2,[[10,[4,4]]]],[3,[[10,[4,4]]]],[[],1],[[],2],[[],3],[[[9,[7]]],1],[[[9,[7]]],2],[[[9,[7]]],3],[[4,4],1],[[4,4],2],[[4,4],3],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[1,[8,[7]]],10],[[2,[8,[7]]],10],[[3,[8,[7]]],10],[[1,13],10],[[2,13],10],[[3,13],10],[[1,14],10],[[2,14],10],[[3,14],10],[[1,4],10],[[2,4],10],[[3,4],10],[[1,7],10],[[2,7],10],[[3,7],10],[[1,15],10],[[2,15],10],[[3,15],10],0,0,0,0,0,[16,[[9,[7]]]],[16,17],[16,[[10,[4,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[18,18],[19,19],[20,20],[[],16],[[],18],[[],19],[[],20],[18,4],[19,4],[20,4],[-1,16,[]],[18,16],[19,16],[20,16],[[16,5],6],[[18,5],6],[[19,5],6],[[20,5],6],[-1,-1,[]],[17,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[18,[8,[7]]],16],[[19,[8,[7]]],16],[[20,[8,[7]]],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,[[9,[7]]]],[19,[[9,[7]]]],[20,[[9,[7]]]],[18,[[10,[4,4]]]],[19,[[10,[4,4]]]],[20,[[10,[4,4]]]],[[],18],[[],19],[[],20],[[[9,[7]]],18],[[[9,[7]]],19],[[[9,[7]]],20],[[4,4],18],[[4,4],19],[[4,4],20],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[-1,12,[]],[[18,[8,[7]]],10],[[19,[8,[7]]],10],[[20,[8,[7]]],10],[[18,13],10],[[19,13],10],[[20,13],10],[[18,14],10],[[19,14],10],[[20,14],10],[[18,4],10],[[19,4],10],[[20,4],10],[[18,7],10],[[19,7],10],[[20,7],10],[[18,15],10],[[19,15],10],[[20,15],10]],"c":[],"p":[[3,"SipHasher13",7],[3,"SipHasher24",7],[3,"SipHasher",7],[15,"u64"],[3,"Formatter",173],[6,"Result",173],[15,"u8"],[15,"slice"],[15,"array"],[15,"tuple"],[4,"Result",174],[3,"TypeId",175],[15,"u16"],[15,"u32"],[15,"usize"],[3,"Hash128",79],[15,"u128"],[3,"SipHasher13",79],[3,"SipHasher24",79],[3,"SipHasher",79],[8,"Hasher128",79]],"b":[]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_const","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","new_const","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","smallvec_inline","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[141,"smallvec::CollectionAllocErr"],[142,"core::clone"],[143,"core::cmp"],[144,"core::ops::function"],[145,"core::ops::range"],[146,"core::iter::traits::collect"],[147,"core::fmt"],[148,"core::fmt"],[149,"core::alloc::layout"],[150,"core::mem::maybe_uninit"],[151,"core::hash"],[152,"core::slice::index"],[153,"alloc::boxed"],[154,"core::result"],[155,"core::option"],[156,"alloc::string"],[157,"core::any"]],"d":["The allocator return an error","Types that can be used as the backing store for a <code>SmallVec</code>.","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","The array passed as an argument is moved to be an inline …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the <code>SmallVec</code> into an <code>A</code> if possible. Otherwise …","","","","","","Convert a <code>SmallVec</code> to a <code>Vec</code>, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","Construct an empty vector.","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Creates an inline <code>SmallVec</code> containing the arguments. This …","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[16,0,16,0,0,0,3,0,0,1,1,1,1,5,1,1,1,5,10,1,1,5,16,10,1,1,5,16,1,1,1,5,1,1,5,1,1,1,1,1,1,1,1,10,1,5,1,1,1,10,1,5,16,16,10,1,1,1,1,1,5,16,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,1,5,16,1,1,10,1,1,1,5,1,1,10,1,1,1,10,5,10,5,1,1,1,1,1,1,1,1,1,1,1,1,3,10,5,0,0,1,1,1,5,29,16,1,10,1,5,16,1,10,1,5,16,1,1,10,1,5,16,1,30],"f":[0,0,0,0,0,0,0,0,0,[[[1,[-1]],[1,[-2]]],2,3,3],[[[1,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[[[1,[-1]]],[],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[5,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],4,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],6,3],[[[1,[-1]]],2,3],[[[1,[-1]]],[[1,[-1]]],3],[[[5,[-1]]],[[5,[-1]]],[3,7]],[[[1,[-1]],[1,[-1]]],2,3],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[1,[-1]],[1,[-1]]],8,3],[[[1,[-1]]],2,3],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[],[[1,[-1]]],3],[[[1,[-1]]],4,3],[[[1,[-1]]],4,3],[[[1,[-1]],-2],[[10,[-1]]],3,[[11,[6]]]],[[[10,[-1]]],2,3],[[[1,[-1]]],2,3],[[[5,[-1]]],2,3],[[[1,[-1]],[1,[-2]]],12,3,3],[[[1,[-1]],-2],2,3,13],[[[1,[-1]],4],2,3],[[[10,[-1]],14],15,3],[[[1,[-1]],14],15,3],[[[5,[-1]],14],15,3],[[16,14],15],[[16,14],15],[-1,-1,[]],[-1,-1,[]],[17,[[1,[-1]]],3],[18,-1,[]],[-1,[[1,[-1]]],3],[4,[[1,[-1]]],3],[-1,-1,[]],[-1,-1,[]],[19,16],[-1,[[1,[-1]]],3],[[-1,6],[[1,[-1]]],3],[[[20,[-1]],6],[[1,[-1]]],3],[[[21,[-1]]],[[1,[[21,[-1]]]]],[]],[6,[[1,[-1]]],3],[-1,[[1,[-2]]],13,3],[[6,6],[[1,[-1]]],3],[4,[[1,[-1]]],3],[17,[[1,[-1]]],3],[[[1,[-1]],6],2,3],[[[1,[-1]],-2],2,3,22],[[[1,[-1]],-2],[],3,[[23,[4]]]],[[[1,[-1]],-2],[],3,[[23,[4]]]],[[[1,[-1]]],6,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,4],2,3],[[[1,[-1]],6,-2],2,3,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[24,[4]]],3],[[[1,[-1]]],[[25,[-1,[1,[-1]]]]],3],[-1,-2,[],[]],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[[[1,[-1]]],[],3],[-1,-2,[],[]],[[[1,[-1]]],17,3],[[[1,[-1]]],12,3],[[[10,[-1]]],6,3],[[[1,[-1]]],6,3],[[],[[1,[-1]]],3],[[],[[1,[[21,[-1]]]]],[]],[[[10,[-1]]],26,3],[[[5,[-1]]],26,3],[[[10,[-1]]],26,3],[[[5,[-1]]],26,3],[[[1,[-1]],[1,[-1]]],[[26,[8]]],3],[[[1,[-1]]],26,3],[[[1,[-1]]],2,3],[[[1,[-1]],6],[],3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6],2,3],[[[1,[-1]],6,-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],-2],2,3,9],[[[1,[-1]],6],2,3],[[[1,[-1]]],2,3],[[],6],[[[10,[-1]]],[[2,[6,[26,[6]]]]],3],[[[5,[-1]]],[[2,[6,[26,[6]]]]],3],0,0,[[[1,[-1]]],12,3],[[[1,[-1]],6],[],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,27,[]],[[[1,[-1]],6],2,3],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[1,[-1]],6],[[25,[2,16]]],3],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[[1,[-1]],6],[[25,[2,16]]],3],[[[1,[-1]],6],[[25,[2,16]]],3],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[6,[[1,[-1]]],3],0],"c":[],"p":[[3,"SmallVec",0],[15,"tuple"],[8,"Array",0],[15,"slice"],[3,"IntoIter",0],[15,"usize"],[8,"Clone",142],[4,"Ordering",143],[8,"FnMut",144],[3,"Drain",0],[8,"RangeBounds",145],[15,"bool"],[8,"IntoIterator",146],[3,"Formatter",147],[6,"Result",147],[4,"CollectionAllocErr",0],[3,"Vec",148],[15,"never"],[6,"LayoutErr",149],[19,"MaybeUninit",150],[15,"array"],[8,"Hasher",151],[8,"SliceIndex",152],[3,"Box",153],[4,"Result",154],[4,"Option",155],[3,"String",156],[3,"TypeId",157],[8,"ToSmallVec",0],[13,"AllocErr",141]],"b":[[52,"impl-Debug-for-CollectionAllocErr"],[53,"impl-Display-for-CollectionAllocErr"],[56,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[58,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[59,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-SmallVec%3CA%3E"],[88,"impl-IntoIterator-for-%26SmallVec%3CA%3E"],[89,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"]]},\
"smoltcp":{"doc":"The <em>smoltcp</em> library is built in a layered structure, with …","t":"AAAAAADDSDDDDDDDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNEDIDNNDDINNDENDEEIDNNIQDNNIQNLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLMLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLMLMLLLLLLLLLLLKLLLLLLLLLLLLLMLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLINENLLAKKLLLALLLKDNNEDDDMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLMLLLLLLMLMLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNNNNNNNNNEEEDGENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDSDDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSNNNNEEDENSSNNNRRRNEDDDDNNNNNNNNNNRNNNNNNNNNNNDNNDDNEDNNNNNNNENNNNNNNNRSRRRNEEEDEEEENEEDEEENNEEDDEEENNNNNNDDDDDNNNNNNDDDDNDDGGNDEEEDNDDNDEESSSSRSSNNNDNNENNNNDDEEDDDEDNNNNNNNNNNNNNSSSNNNNNNNNNNNNNNNNCNNNSDNNNNNNNNNNNNGNNNNNNNNNNNSSNNNNNNNNRNNNEEDDDNNNNNNNNNNRSSNDDNNNNNNNNNNNNNNNNNNNNNNNNLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLLLLLLLLLLLLLLMLLLLLLMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLMMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLMMLMLMLLLLLLMALLLLLLLLLLLLLLLMLLMLLLMMLMLLLLLMMLMLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDIDLLLLLLLLLLLLLLKLLLLLLLLL","n":["iface","phy","socket","storage","time","wire","Config","Context","EMPTY","Interface","Route","RouteTableFull","Routes","SocketHandle","SocketSet","SocketStorage","add","add_default_ipv4_route","add_default_ipv6_route","any_ip","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cidr","clone","clone","clone","clone_into","clone_into","clone_into","cmp","context","default","default","eq","eq","expires_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","get_mut","hardware_addr","hardware_addr","has_ip_addr","has_solicited_node","hash","into","into","into","into","into","into","into","into","into","ip_addrs","ipv4_addr","ipv4_addr","ipv6_addr","ipv6_addr","iter","iter_mut","new","new","new","new","new_ipv4_gateway","new_ipv6_gateway","partial_cmp","poll","poll_at","poll_delay","preferred_until","random_seed","remove","remove_default_ipv4_route","remove_default_ipv6_route","routes","routes_mut","set_any_ip","set_hardware_addr","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update_ip_addrs","via_router","Both","Both","Checksum","ChecksumCapabilities","Device","DeviceCapabilities","Ethernet","Ethernet","FaultInjector","FuzzInjector","Fuzzer","Ieee802154WithFcs","Ip","Loopback","Medium","None","PacketMeta","PcapLinkType","PcapMode","PcapSink","PcapWriter","Rx","RxOnly","RxToken","RxToken","Tracer","Tx","TxOnly","TxToken","TxToken","Unknown","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket_interval","capabilities","capabilities","capabilities","capabilities","capabilities","capabilities","checksum","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume","consume","corrupt_chance","default","default","default","default","default","drop_chance","eq","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","fuzz_packet","get_mut","get_mut","get_ref","get_ref","global_header","global_header","hash","hash","icmpv4","icmpv6","ignored","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","ip_mtu","ipv4","max_burst_size","max_packet_size","max_rx_rate","max_transmission_unit","max_tx_rate","medium","meta","new","new","new","new","new","packet","packet","packet_header","packet_header","partial_cmp","receive","receive","receive","receive","receive","receive","rx","set_bucket_interval","set_corrupt_chance","set_drop_chance","set_max_packet_size","set_max_rx_rate","set_max_tx_rate","set_meta","tcp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transmit","transmit","transmit","transmit","transmit","transmit","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp","write","write_u16","write_u16","write_u32","write_u32","AnySocket","Dhcpv4","Socket","Tcp","borrow","borrow_mut","dhcpv4","downcast","downcast_mut","fmt","from","into","tcp","try_from","try_into","type_id","upcast","Config","Configured","Deconfigured","Event","RetryConfig","ServerInfo","Socket","address","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","discover_timeout","dns_servers","downcast","downcast_mut","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","identifier","ignore_naks","initial_request_timeout","into","into","into","into","into","max_lease_duration","min_renew_timeout","new","packet","poll","register_waker","request_retries","reset","router","server","set_ignore_naks","set_max_lease_duration","set_outgoing_options","set_parameter_request_list","set_ports","set_receive_packet_buffer","set_retry_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","CloseWait","Closed","Closing","ConnectError","Established","FinWait1","FinWait2","Finished","InvalidState","InvalidState","InvalidState","InvalidState","LastAck","Listen","ListenError","RecvError","SendError","Socket","SocketBuffer","State","SynReceived","SynSent","TimeWait","Unaddressable","Unaddressable","abort","ack_delay","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","connect","downcast","downcast_mut","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hop_limit","into","into","into","into","into","into","is_active","is_listening","is_open","keep_alive","listen","local_endpoint","may_recv","may_send","nagle_enabled","new","peek","peek_slice","recv","recv_capacity","recv_queue","recv_slice","register_recv_waker","register_send_waker","remote_endpoint","send","send_capacity","send_queue","send_slice","set_ack_delay","set_hop_limit","set_keep_alive","set_nagle_enabled","set_timeout","state","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","upcast","write_str","Assembler","EMPTY","Empty","Full","PacketBuffer","PacketMetadata","Resettable","RingBuffer","add","add_then_remove_front","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contiguous_window","dequeue","dequeue_allocated","dequeue_many","dequeue_many_with","dequeue_one","dequeue_one_with","dequeue_slice","dequeue_with","enqueue","enqueue_many","enqueue_many_with","enqueue_one","enqueue_one_with","enqueue_slice","enqueue_unallocated","enqueue_with_infallible","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_allocated","get_unallocated","into","into","into","into","into","into","is_empty","is_empty","is_empty","is_full","is_full","iter_data","len","new","new","new","packet_capacity","payload_capacity","peek","peek_front","read_allocated","remove_front","reset","reset","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","window","write_unallocated","Duration","Instant","ZERO","ZERO","add","add","add_assign","add_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","div","div_assign","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_micros","from_micros","from_micros_const","from_millis","from_millis","from_millis_const","from_secs","from_secs","into","into","micros","micros","millis","millis","mul","mul_assign","partial_cmp","partial_cmp","secs","secs","shl","shl_assign","shr","shr_assign","sub","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","total_micros","total_micros","total_millis","total_millis","try_from","try_from","try_into","try_into","type_id","type_id","ADDRCONF","Ack","AddrUnreachable","AdminProhibit","Arp","ArpHardware","ArpOperation","ArpPacket","ArpRepr","AtPointer","BROADCAST","BROADCAST","BadLength","BeyondScope","CommProhibited","DHCP_CLIENT_PORT","DHCP_MAX_DNS_SERVER_COUNT","DHCP_SERVER_PORT","Decline","DhcpMessageType","DhcpOption","DhcpOptionWriter","DhcpPacket","DhcpRepr","Discard","DiscardSendAll","DiscardSendUnicast","Discover","DstHostUnknown","DstNetUnknown","DstUnreachable","DstUnreachable","DstUnreachable","DstUnreachable","ETHERNET_HEADER_LEN","EchoReply","EchoReply","EchoReply","EchoReply","EchoRequest","EchoRequest","EchoRequest","EchoRequest","EndOfList","Err","ErroneousHdrField","Error","Ethernet","Ethernet","EthernetAddress","EthernetFrame","EthernetIpv4","EthernetProtocol","EthernetRepr","Experiment1","Experiment2","FailedPolicy","Fin","FragExpired","FragReassemExceeded","FragRequired","HardwareAddress","HopByHop","HopLimitExceeded","Host","HostPrecedViol","HostProhibited","HostToS","HostUnreachToS","HostUnreachable","IPV4_HEADER_LEN","IPV4_MAPPED_PREFIX","IPV4_MIN_MTU","IPV6_HEADER_LEN","IPV6_MIN_MTU","Icmp","IcmpRepr","Icmpv4DstUnreachable","Icmpv4Message","Icmpv4Packet","Icmpv4ParamProblem","Icmpv4Redirect","Icmpv4Repr","Icmpv4TimeExceeded","Icmpv6","Icmpv6DstUnreachable","Icmpv6Message","Icmpv6Packet","Icmpv6ParamProblem","Icmpv6Repr","Icmpv6TimeExceeded","Igmp","Inform","IpAddress","IpCidr","IpEndpoint","IpListenEndpoint","IpProtocol","IpRepr","IpVersion","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4","Ipv4Address","Ipv4Cidr","Ipv4FragKey","Ipv4Packet","Ipv4Repr","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6","Ipv6Address","Ipv6Cidr","Ipv6ExtHeader","Ipv6ExtHeaderRepr","Ipv6Frag","Ipv6FragmentHeader","Ipv6FragmentRepr","Ipv6HopByHopHeader","Ipv6HopByHopRepr","Ipv6NoNxt","Ipv6Option","Ipv6OptionFailureType","Ipv6OptionRepr","Ipv6OptionType","Ipv6OptionsIterator","Ipv6Opts","Ipv6Packet","Ipv6Repr","Ipv6Route","Ipv6RoutingHeader","Ipv6RoutingRepr","Ipv6RoutingType","LINK_LOCAL_ALL_NODES","LINK_LOCAL_ALL_ROUTERS","LOOPBACK","MANAGED","MAX_HARDWARE_ADDRESS_LEN","MULTICAST_ALL_ROUTERS","MULTICAST_ALL_SYSTEMS","MaxSegmentSize","MissingOption","Mld","MldAddressRecord","MldQuery","MldReport","MldRepr","Mtu","Mtu","Nak","Ndisc","NdiscNeighborFlags","NdiscOption","NdiscOptionRepr","NdiscOptionType","NdiscPrefixInfoFlags","NdiscPrefixInformation","NdiscRedirectedHeader","NdiscRepr","NdiscRouterFlags","NeighborAdvert","NeighborAdvert","NeighborSolicit","NeighborSolicit","Net","NetProhibited","NetToS","NetUnreachToS","NetUnreachable","Nimrod","NoOperation","NoRoute","None","ON_LINK","OTHER","OVERRIDE","Offer","Ok","Pad1","Pad1","PadN","PadN","ParamProblem","ParamProblem","ParamProblem","PktTooBig","PktTooBig","PortUnreachable","PortUnreachable","PrecedCutoff","PrefixInformation","PrefixInformation","PrettyPrinter","ProtoUnreachable","Psh","Query","ROUTER","RawHardwareAddress","Redirect","Redirect","Redirect","RedirectedHeader","RedirectedHeader","RejectRoute","Release","Reply","Report","Request","Request","Reserved","Result","RouterAdvert","RouterAdvert","RouterAdvert","RouterSolicit","RouterSolicit","RouterSolicit","Rpl","Rpl","Rpl","RplControl","Rst","SOLICITED","SOLICITED_NODE_PREFIX","SackPermitted","SackRange","Skip","SourceLinkLayerAddr","SourceLinkLayerAddr","SrcHostIsolated","SrcRouteFailed","Syn","TCP_HEADER_LEN","TargetLinkLayerAddr","TargetLinkLayerAddr","Tcp","TcpControl","TcpOption","TcpPacket","TcpRepr","TcpSeqNumber","TimeExceeded","TimeExceeded","TimeExceeded","TimeExceeded","Timestamp","TimestampReply","TtlExpired","Type0","Type2","Type2","UDP_HEADER_LEN","UNSPECIFIED","UNSPECIFIED","Udp","UdpPacket","UdpRepr","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","Unknown","UnrecognizedNxtHdr","UnrecognizedOption","WindowScale","ack","ack_number","ack_number","add","add_assign","additional_options","addr","addr","address","address","address","addresses","all","all","all","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_bytes","as_ipv4","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","aux_data_len","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","buffer_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","check_len","checksum","checksum","checksum","checksum","checksum","clear_flags","clear_flags","clear_prefix_reserved","clear_redirected_reserved","clear_reserved","clear_reserved","clear_reserved","clear_s_flag","client_hardware_address","client_hardware_address","client_identifier","client_ip","client_ip","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmpr_e","cmpr_i","complement","complement","complement","contains","contains","contains","contains_addr","contains_addr","contains_addr","contains_subnet","contains_subnet","contains_subnet","control","current_hop_limit","cwr","data","data","data","data","data","data","data","data_len","data_len","data_mut","data_mut","data_mut","default","default","default","default","default","default","default","dest_addr","difference","difference","difference","dns_servers","dont_frag","dscp","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_addr","dst_port","dst_port","dst_port","dst_port","ece","echo_ident","echo_ident","echo_seq_no","echo_seq_no","ecn","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","emit","empty","empty","empty","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","ethertype","ethertype","extend","extend","extend","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fill_checksum","fin","flags","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frag_offset","frag_offset","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bytes","from_bytes","from_bytes","from_bytes","from_iter","from_iter","from_iter","from_netmask","from_parts","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_boot_file","get_key","get_sname","hardware_len","hardware_len","hardware_type","hardware_type","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","header_len","home_address","hop_limit","hop_limit","hop_limit","hop_limit","hop_limit","hops","ident","ident","ident","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_address","into_address","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","is_all","is_all","is_all","is_broadcast","is_broadcast","is_broadcast","is_broadcast","is_empty","is_empty","is_empty","is_empty","is_empty","is_error","is_ipv4_mapped","is_link_local","is_link_local","is_local","is_loopback","is_loopback","is_mld","is_multicast","is_multicast","is_multicast","is_multicast","is_ndisc","is_specified","is_unicast","is_unicast","is_unicast","is_unicast","is_unicast","is_unspecified","is_unspecified","is_unspecified","kind","lease_duration","len","len","len","length","length","link_layer_addr","magic_number","max","max_resp_code","max_seg_size","max_size","mcast_addr","mcast_addr","message_type","min","more_frags","more_frags","more_frags","msg_code","msg_code","msg_type","msg_type","mtu","neighbor_flags","netmask","network","new","new","new","new","new","new","new","new","new","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_checked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","new_unchecked","next","next_header","next_header","next_header","next_header","next_header","next_header","next_header","next_header","not","not","not","nr_mcast_addr_rcrds","ns","num_srcs","num_srcs","of_packet","opcode","operation","option_type","option_type","options","options","options_mut","options_mut","pad","param_problem_ptr","parameter_request_list","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","payload","payload","payload","payload","payload","payload","payload","payload","payload","payload_len","payload_len","payload_len","payload_len","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","payload_mut","pkt_too_big_mtu","port","port","preferred_lifetime","preferred_lifetime","prefix","prefix","prefix_flags","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","prefix_len","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","pretty_print","protocol_len","protocol_type","psh","qqic","qrv","quash_psh","reachable_time","rebind_duration","record_type","relay_agent_ip","relay_agent_ip","remove","remove","remove","renew_duration","requested_ip","retrans_time","router","router_flags","router_lifetime","routing_type","rst","s_flag","sack_permitted","sack_ranges","secs","secs","segment_len","segment_len","segments_left","selective_ack_permitted","selective_ack_ranges","seq_number","seq_number","server_identifier","server_ip","server_ip","set","set","set","set_ack","set_ack_number","set_addresses","set_aux_data_len","set_checksum","set_checksum","set_checksum","set_checksum","set_checksum","set_client_hardware_address","set_client_ip","set_cmpr_e","set_cmpr_i","set_current_hop_limit","set_cwr","set_data_len","set_data_len","set_dest_addr","set_dont_frag","set_dscp","set_dst_addr","set_dst_addr","set_dst_addr","set_dst_port","set_dst_port","set_ece","set_echo_ident","set_echo_ident","set_echo_seq_no","set_echo_seq_no","set_ecn","set_ethertype","set_fin","set_flags","set_flow_label","set_frag_offset","set_frag_offset","set_hardware_len","set_hardware_len","set_hardware_type","set_hardware_type","set_header_len","set_header_len","set_header_len","set_home_address","set_hop_limit","set_hop_limit","set_hops","set_ident","set_ident","set_len","set_link_layer_addr","set_magic_number","set_max_resp_code","set_mcast_addr","set_mcast_addr","set_more_frags","set_more_frags","set_msg_code","set_msg_code","set_msg_type","set_msg_type","set_mtu","set_neighbor_flags","set_next_header","set_next_header","set_next_header","set_nr_mcast_addr_rcrds","set_ns","set_num_srcs","set_num_srcs","set_opcode","set_operation","set_option_type","set_option_type","set_pad","set_param_problem_ptr","set_payload_len","set_payload_len","set_pkt_too_big_mtu","set_preferred_lifetime","set_prefix","set_prefix_flags","set_prefix_len","set_protocol_len","set_protocol_type","set_psh","set_qqic","set_qrv","set_reachable_time","set_record_type","set_relay_agent_ip","set_retrans_time","set_router_flags","set_router_lifetime","set_routing_type","set_rst","set_s_flag","set_secs","set_segments_left","set_seq_number","set_server_ip","set_sname_and_boot_file_to_zero","set_source_hardware_addr","set_source_protocol_addr","set_src_addr","set_src_addr","set_src_addr","set_src_port","set_src_port","set_syn","set_target_addr","set_target_hardware_addr","set_target_protocol_addr","set_total_len","set_traffic_class","set_transaction_id","set_urg","set_urgent_at","set_valid_lifetime","set_version","set_version","set_window_len","set_your_ip","solicited_node","source_hardware_addr","source_protocol_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_addr","src_port","src_port","src_port","src_port","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","subnet_mask","symmetric_difference","symmetric_difference","symmetric_difference","syn","target_addr","target_hardware_addr","target_protocol_addr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","total_len","total_len","traffic_class","transaction_id","transaction_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","urg","urgent_at","v4","v6","valid_lifetime","valid_lifetime","verify_checksum","verify_checksum","verify_checksum","verify_checksum","verify_checksum","version","version","version","version","window_len","window_len","window_scale","write_parts","your_ip","your_ip","operation","source_hardware_addr","source_protocol_addr","target_hardware_addr","target_protocol_addr","data","data","data","data","header","header","ident","ident","reason","reason","seq_no","seq_no","data","data","data","data","data","data","header","header","header","header","ident","ident","mtu","pointer","reason","reason","reason","seq_no","seq_no","data","length","type_","addresses","cmpr_e","cmpr_i","home_address","pad","segments_left","segments_left","data","data","max_resp_code","mcast_addr","nr_mcast_addr_rcrds","num_srcs","qqic","qrv","s_flag","data","length","type_","dest_addr","flags","flags","hop_limit","lladdr","lladdr","lladdr","lladdr","lladdr","mtu","prefix_info","reachable_time","redirected_hdr","retrans_time","router_lifetime","target_addr","target_addr","target_addr","data","kind","PrettyIndent","PrettyPrint","PrettyPrinter","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","increase","into","into","new","new","pretty_print","print","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"smoltcp"],[6,"smoltcp::iface"],[146,"smoltcp::phy"],[380,"smoltcp::socket"],[397,"smoltcp::socket::dhcpv4"],[485,"smoltcp::socket::tcp"],[629,"smoltcp::storage"],[747,"smoltcp::time"],[820,"smoltcp::wire"],[2937,"smoltcp::wire::ArpRepr"],[2942,"smoltcp::wire::Icmpv4Repr"],[2954,"smoltcp::wire::Icmpv6Repr"],[2973,"smoltcp::wire::Ipv6OptionRepr"],[2976,"smoltcp::wire::Ipv6RoutingRepr"],[2983,"smoltcp::wire::MldRepr"],[2992,"smoltcp::wire::NdiscOptionRepr"],[2995,"smoltcp::wire::NdiscRepr"],[3013,"smoltcp::wire::TcpOption"],[3015,"smoltcp::wire::pretty_print"],[3042,"core::option"],[3043,"core::result"],[3044,"core::cmp"],[3045,"core::fmt"],[3046,"core::fmt"],[3047,"core::hash"],[3048,"core::iter::traits::iterator"],[3049,"core::marker"],[3050,"managed::slice"],[3051,"alloc::string"],[3052,"core::any"],[3053,"core::ops::function"],[3054,"core::fmt"],[3055,"core::clone"],[3056,"core::marker"],[3057,"core::convert"]],"d":["Network interface logic.","Access to networking hardware.","Communication between endpoints.","Specialized containers.","Time structures.","Low-level packet access and construction.","Configuration structure used for creating a network …","The device independent part of an Ethernet network …","","A  network interface.","A prefix of addresses that should be routed via a router","","A routing table.","A handle, identifying a socket in an Interface.","An extensible set of sockets.","Opaque struct with space for storing one socket.","Add a socket to the set, and return its handle.","Add a default ipv4 gateway (ie. “ip route add 0.0.0.0/0 …","Add a default ipv6 gateway (ie. “ip -6 route add ::/0 …","Get whether AnyIP is enabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the socket context.","","","","","<code>None</code> means “forever”.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a socket from the set by its handle, as mutable.","Get a mutable socket from the set by its handle, as …","Get the HardwareAddress address of the interface.","Set the Hardware address the interface will use.","Check whether the interface has the given IP address …","Determine if the given <code>Ipv6Address</code> is the solicited node …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the IP addresses of the interface.","Get the first IPv4 address if present.","Get the first IPv4 address of the interface.","Get the first IPv6 address if present.","Get the first IPv6 address if present.","Get an iterator to the inner sockets.","Get a mutable iterator to the inner sockets.","Create a network interface using the previously provided …","","Creates a new empty routing table.","Create a socket set using the provided storage.","Returns a route to 0.0.0.0/0 via the <code>gateway</code>, with no …","Returns a route to ::/0 via the <code>gateway</code>, with no expiry.","","Transmit packets queued in the given sockets, and receive …","Return a <em>soft deadline</em> for calling poll the next time. The …","Return an <em>advisory wait time</em> for calling poll the next …","<code>None</code> means “forever”.","Random seed.","Remove a socket from the set, without changing its state.","Remove the default ipv4 gateway","Remove the default ipv6 gateway","","","Enable or disable the AnyIP capability.","Set the HardwareAddress address of the interface.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the routes of this node.","Update the IP addresses of the interface.","","Capture both received and transmitted packets.","Verify checksum when receiving and compute checksum when …","A description of checksum behavior for a particular …","A description of checksum behavior for every supported …","An interface for sending and receiving raw network frames.","A description of device capabilities.","Ethernet frames","Ethernet medium. Devices of this type send and receive …","A fault injector device.","A fuzz injector device.","Represents a fuzzer. It is expected to replace bytes in …","IEEE 802.15.4 packets with FCS included.","IPv4 or IPv6 packets (depending on the version field)","A loopback device.","Type of medium of a device.","Ignore checksum completely.","Metadata associated to a packet.","Captured packet header type.","Packet capture mode.","A packet capture sink.","A packet capture writer device.","Verify checksum when receiving.","Capture only received packets.","A token to receive a single network packet.","","A tracer device.","Compute checksum before sending.","Capture only transmitted packets.","A token to transmit a single network packet.","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the interval for packet rate limiting, in …","Get a description of device capabilities.","","","","","","Checksum behavior.","","","","","","","","","","","","","","","","Consumes the token to receive a single network packet.","Consumes the token to send a single network packet.","Return the probability of corrupting a packet, in percents.","","","","","","Return the probability of dropping a packet, in percents.","","","","","Flush data written into the sync.","Flush data written into the sync.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Modify a single packet with fuzzed data.","Get a mutable reference to the underlying device.","Get a mutable reference to the underlying device.","Get a reference to the underlying device.","Get a reference to the underlying device.","Write the libpcap global header into the sink.","Write the libpcap global header into the sink.","","","","","Checksum behavior that results in not computing or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the underlying device, consuming the tracer.","Return the underlying device, consuming the fault injector.","Return the underlying device, consuming the fuzz injector.","","","Maximum burst size, in terms of MTU.","Return the maximum packet size, in octets.","Return the maximum packet reception rate, in packets per …","Maximum transmission unit.","Return the maximum packet transmission rate, in packets …","Medium of the device.","The Packet ID associated with the frame received by this …","Create a tracer device.","Create a fault injector device, using the given random …","Create a fuzz injector device.","Creates a loopback device.","Creates a packet capture writer.","Write the libpcap packet header followed by packet data …","Write the libpcap packet header followed by packet data …","Write the libpcap packet header into the sink.","Write the libpcap packet header into the sink.","","Construct a token pair consisting of one receive token and …","","","","","","Returns whether checksum should be verified when receiving.","Set the interval for packet rate limiting, in milliseconds.","Set the probability of corrupting a packet, in percents.","Set the probability of dropping a packet, in percents.","Set the maximum packet size, in octets.","Set the maximum packet reception rate, in packets per …","Set the maximum packet transmission rate, in packets per …","The Packet ID to be associated with the frame to be …","","","","","","","","","Construct a transmit token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether checksum should be verified when sending.","","","","","","","","","","","","","","Write data into the sink.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u16</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","Write an <code>u32</code> into the sink, in native byte order.","A conversion trait for network sockets.","","A network socket.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","IPv4 configuration data provided by the DHCP server.","Configuration has been newly acquired, or modified.","Configuration has been lost (for example, the lease has …","Return value for the <code>Dhcpv4Socket::poll</code> function","Timeout and retry configuration.","Information on how to reach a DHCP server.","","IP address","IP address to use as destination in outgoing packets","","","","","","","","","","","","","","","","","","","DNS servers","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Server identifier to use in outgoing packets. Usually …","Get whether to ignore NAKs.","The REQUEST timeout doubles every 2 tries.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the configured max lease duration.","","Create a DHCPv4 socket","Received DHCP packet","Query the socket for configuration changes.","Register a waker.","","Reset state and restart discovery phase.","Router address, also known as default gateway. Does not …","Information on how to reach the DHCP server that responded …","Set whether to ignore NAKs.","Set the max lease duration.","Set the outgoing options.","Set the parameter request list.","Set the server/client port","Set the buffer into which incoming DHCP packets are copied …","Set the retry/timeouts configuration.","","","","","","","","","","","","","","","","","","","","","","","Error returned by <code>Socket::connect</code>","","","","","","","","","","","Error returned by <code>Socket::listen</code>","Error returned by <code>Socket::recv</code>","Error returned by <code>Socket::send</code>","A Transmission Control Protocol socket.","A TCP socket ring buffer.","The state of a TCP socket, according to RFC 793.","","","","","","Aborts the connection, if any.","Return the ACK delay duration.","","","","","","","","","","","","","Check whether the receive half of the full-duplex …","Check whether the transmit half of the full-duplex …","","","","","","","","","","","Close the transmit half of the full-duplex connection.","Connect to a given endpoint.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the time-to-live (IPv4) or hop limit (IPv6) value …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether a connection is active.","Return whether the socket is passively listening for …","Return whether the socket is open.","Return the keep-alive interval.","Start listening on the given endpoint.","Return the local endpoint, or None if not connected.","Return whether the receive half of the full-duplex …","Return whether the transmit half of the full-duplex …","Return whether Nagle’s Algorithm is enabled.","Create a socket using the given buffers.","Peek at a sequence of received octets without removing …","Peek at a sequence of received octets without removing …","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the recv buffer.","Return the amount of octets queued in the receive buffer. …","Dequeue a sequence of received octets, and fill a slice …","Register a waker for receive operations.","Register a waker for send operations.","Return the remote endpoint, or None if not connected.","Call <code>f</code> with the largest contiguous slice of octets in the …","Return the maximum number of bytes inside the transmit …","Return the amount of octets queued in the transmit buffer.","Enqueue a sequence of octets to be sent, and fill it from …","Set the ACK delay duration.","Set the time-to-live (IPv4) or hop limit (IPv6) value used …","Set the keep-alive interval.","Enable or disable Nagle’s Algorithm.","Set the timeout duration.","Return the connection state, in terms of the TCP state …","Return the timeout duration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A buffer (re)assembler.","Empty packet description.","Error returned when dequeuing from an empty buffer.","Error returned when enqueuing into a full buffer.","An UDP packet ring buffer.","Size and header of a packet.","A trait for setting a value to a known state.","A ring buffer.","Add a new contiguous range to the assembler, or return …","Add a segment, then remove_front.","","","","","","","","","","","","","Return the maximum number of elements in the ring buffer.","","Clear the ring buffer.","","","","","","","","","Return the largest number of elements that can be added to …","Dequeue a single packet from the buffer, and return a …","Dequeue the given number of allocated buffer elements.","Dequeue a slice of elements up to the given size from the …","Call <code>f</code> with the largest contiguous slice of allocated …","Dequeue an element from the buffer, and return a reference …","Call <code>f</code> with a single buffer element, and dequeue the …","Dequeue as many elements from the buffer into the given …","Call <code>f</code> with a single packet from the buffer, and dequeue …","Enqueue a single packet with the given header into the …","Enqueue a slice of elements up to the given size into the …","Call <code>f</code> with the largest contiguous slice of unallocated …","Enqueue a single element into the buffer, and return a …","Call <code>f</code> with a single buffer element, and enqueue the …","Enqueue as many elements from the given slice into the …","Enqueue the given number of unallocated buffer elements.","Call <code>f</code> with a packet from the buffer large enough to fit …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Return the largest contiguous slice of allocated buffer …","Return the largest contiguous slice of unallocated buffer …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether the assembler contains no data.","Query whether the buffer is empty.","Query whether the buffer is empty.","Query whether the buffer is full.","Query whether the buffer is full.","Iterate over all of the contiguous data ranges.","Return the current number of elements in the ring buffer.","Create a new buffer assembler.","Create a new packet buffer with the provided metadata and …","Create a ring buffer with the given storage.","Return the maximum number packets that can be stored.","Return the maximum number of bytes in the payload ring …","Peek at a single packet from the buffer without removing …","Return length of the front contiguous range without …","Read as many elements from allocated buffer elements into …","Remove a contiguous range from the front of the assembler. …","","Clear the ring buffer, and reset every element.","","","","","","","","","","","","","","","","","","","","","","","","Return the number of elements that can be added to the …","Write as many elements from the given slice into …","A relative amount of time.","A representation of an absolute time value.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>Instant</code> from a number of microseconds.","Create a new <code>Duration</code> from a number of microseconds.","","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Duration</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of milliseconds.","Create a new <code>Instant</code> from a number of seconds.","Create a new <code>Instant</code> from a number of seconds.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The fractional number of microseconds that have passed …","The fractional number of milliseconds in this <code>Duration</code>.","The fractional number of milliseconds that have passed …","The fractional number of milliseconds in this <code>Duration</code>.","","","","","The number of whole seconds that have passed since the …","The number of whole seconds in this <code>Duration</code>.","","","","","","","","","","","","","","The total number of milliseconds that have passed since …","The total number of microseconds in this <code>Duration</code>.","The total number of milliseconds that have passed since …","The total number of milliseconds in this <code>Duration</code>.","","","","","","","","","Address unreachable.","Communication with destination administratively prohibited.","","ARP hardware type.","ARP operation type.","A read/write wrapper around an Address Resolution Protocol …","A high-level representation of an Address Resolution …","Pointer indicates the error","The broadcast address.","The broadcast address.","Bad length","Beyond scope of source address.","Communication administratively prohibited","","","","","The possible message types of a DHCP packet.","A representation of a single DHCP option.","A buffer for DHCP options.","A read/write wrapper around a Dynamic Host Configuration …","A high-level representation of a Dynamic Host …","Discard the containing packet","Discard the containing packet and notify the sender","Discard the containing packet and only notify the sender …","","Destination host unknown","Destination network unknown","Destination unreachable","","Destination Unreachable.","","The Ethernet header length","Echo reply","","Echo Reply","","Echo request","","Echo Request","","","Contains the error value","Erroneous header field encountered.","Parsing a packet failed.","","","A six-octet Ethernet II address.","A read/write wrapper around an Ethernet II frame buffer.","An Ethernet and IPv4 Address Resolution Protocol packet.","Ethernet protocol type.","A high-level representation of an Internet Protocol …","RFC3692-style Experiment 1","RFC3692-style Experiment 2","Source address failed ingress/egress policy.","","Fragment reassembly time exceeded","Fragment reassembly time exceeded.","Fragmentation required, and DF flag set","Representation of an hardware address, such as an Ethernet …","","Hop limit exceeded in transit.","Redirect Datagram for the Host","Host precedence violation","Host administratively prohibited","Redirect Datagram for the ToS &amp; host","Host unreachable for ToS","Destination host unreachable","","The prefix used in IPv4-mapped addresses.","Minimum MTU required of all links supporting IPv4. See RFC …","Length of an IPv6 header.","Minimum MTU required of all links supporting IPv6. See RFC …","","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for type “…","Internet protocol control message subtype for type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for type “Time …","","Internet protocol control message subtype for type “…","Internet protocol control message type.","A read/write wrapper around an Internet Control Message …","Internet protocol control message subtype for the type “…","A high-level representation of an Internet Control Message …","Internet protocol control message subtype for the type “…","","","An internetworking address.","A specification of a CIDR block, containing an address and …","An internet endpoint address.","An internet endpoint address for listening.","IP datagram encapsulated protocol.","An IP packet representation.","Internet protocol version.","","","","An IPv4 address.","","","A four-octet IPv4 address.","A specification of an IPv4 CIDR block, containing an …","","A read/write wrapper around an Internet Protocol version 4 …","A high-level representation of an Internet Protocol …","","","","An IPv6 address.","","","A sixteen-octet IPv6 address.","A specification of an IPv6 CIDR block, containing an …","A read/write wrapper around an IPv6 Extension Header …","","","A read/write wrapper around an IPv6 Fragment Header.","A high-level representation of an IPv6 Fragment header.","A read/write wrapper around an IPv6 Hop-By-Hop header.","A high-level representation of an IPv6 Hop-By-Hop heade.","","A read/write wrapper around an IPv6 Extension Header …","Action required when parsing the given IPv6 Extension …","A high-level representation of an IPv6 Extension Header …","IPv6 Extension Header Option Type","A iterator for IPv6 options.","","A read/write wrapper around an Internet Protocol version 6 …","A high-level representation of an Internet Protocol …","","A read/write wrapper around an IPv6 Routing Header buffer.","A high-level representation of an IPv6 Routing Header.","IPv6 Extension Routing Header Routing Type","The link-local all nodes multicast address.","The link-local all routers multicast address.","The loopback address.","","","All multicast-capable routers","All multicast-capable nodes","","Missing a required option","","A read/write wrapper around an MLDv2 Listener Report …","Multicast Listener Query","Multicast Listener Report","A high-level representation of an MLDv2 packet header.","MTU","","","","","A read/write wrapper around an NDISC Option.","A high-level representation of an NDISC Option.","NDISC Option Type","","","","A high-level representation of an Neighbor Discovery …","","Neighbor Advertisement","","Neighbor Solicitation","","Redirect Datagram for the Network","Network administratively prohibited","Redirect Datagram for the ToS &amp; network","Network unreachable for ToS","Destination network unreachable","Nimrod (DEPRECATED 2009-05-06)","","No Route to destination.","","","","","","Contains the success value","1 byte of padding","","Multiple bytes of padding","","Parameter problem","Parameter Problem.","","Packet Too Big.","","Destination port unreachable","Port unreachable.","Precedence cutoff in effect","Prefix Information","","","Destination protocol unreachable","","","","Unparsed hardware address.","Message redirect","Redirect","","Redirected Header","","Reject route to destination.","","","","","","Reserved for future use","","Router advertisement","Router Advertisement","","Router solicitation","Router Solicitation","","RPL Option","RPL Source Routing Header","","RPL Control Message","","","The solicited node prefix.","","","Skip this option and continue processing the packet","Source Link-layer Address","","Source host isolated","Source route failed","","","Target Link-layer Address","","","The possible control flags of a Transmission Control …","A representation of a single TCP option.","A read/write wrapper around a Transmission Control …","A high-level representation of a Transmission Control …","A TCP sequence number.","Time exceeded","","Time Exceeded.","","Timestamp","Timestamp reply","TTL expired in transit","Source Route (DEPRECATED)","Type 2 Routing Header for Mobile IPv6","","","An unspecified address.","The unspecified address.","","A read/write wrapper around an User Datagram Protocol …","A high-level representation of an User Datagram Protocol …","","","","","","","","","","","","","","","","","","","","","","Unrecognized Next Header type encountered.","Unrecognized IPv6 option encountered.","","Return the ACK flag.","Return the acknowledgement number field.","","","","When returned from <code>Repr::parse</code>, this field will be <code>None</code>. …","","","Return the IP address of this CIDR block.","Return the address of this IPv4 CIDR block.","Return the address of this IPv6 CIDR block.","Return the address vector in bytes","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Return an Ethernet address as a sequence of octets, in …","Return an address as a sequence of octets, in big-endian.","Return an IPv4 address as a sequence of octets, in …","Return an IPv6 address as a sequence of octets, in …","","","Convert an IPv4 mapped IPv6 address to an IPv4 address.","","","","","","","","","Return the length of the auxiliary data.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the broadcast address of this IPv4 CIDR.","Broadcast flags. It can be set in DHCPDISCOVER, DHCPINFORM …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a buffer required to hold a packet …","Return the length of a header that will be emitted from …","Return the length of a packet that will be emitted from …","Return the length of a packet that will be emitted from …","Return the total length of a packet that will be emitted …","Return the length of a header that will be emitted from …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length of a header that will be emitted from …","Return the length, in bytes, of a header that will be …","Return the length of a packet that will be emitted from …","","Return the length of a header that will be emitted from …","","Return the length of a packet that will be emitted from …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Ensure that no accessor method will panic if called. …","Return the checksum field.","Return the checksum field.","Return the header checksum field.","Return the checksum field.","Return the checksum field.","Clear the entire flags field.","Clear the entire flags field.","Clear the reserved bits.","Clear the reserved bits.","Clear any reserved fields in the message header.","Set reserved fields.","Initialize reserved fields to 0.","Clear the Suppress Router-Side Processing flag.","Returns the hardware address of the client (called <code>chaddr</code> …","This field is also known as <code>chaddr</code> in the RFC and for …","The “client identifier” option.","Returns the Ipv4 address of the client, zero if not set.","This field is also known as <code>ciaddr</code> in the RFC. It is only …eturn the number of prefix octets elided from the last …","Return the number of prefix octets elided from addresses[…","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPv6 CIDR …","Query whether the subnetwork described by this CIDR block …","Query whether the subnetwork described by this IPv4 CIDR …","Query whether the subnetwork described by this IPV6 CIDR …","","Return the current hop limit field.","Return the CWR flag.","Return a pointer to the type-specific data.","Return the option data.","Return the option data.","","","","","Return the length of the data.","Return the length of the data.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the option data.","Return a mutable pointer to the option data.","","","","","","","","Return the destination address field.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","DNS servers","Return the “don’t fragment” flag.","Return the Differential Services Code Point field.","Return the destination address field.","Return the destination address.","Return the destination address field.","Return the destination address field.","","","IPv6 address of the destination node.","Return the destination port field.","Return the destination port field.","","","Return the ECE flag.","Return the identifier field (for echo request and reply …","Return the identifier field (for echo request and reply …","Return the sequence number field (for echo request and …","Return the sequence number field (for echo request and …","Return the Explicit Congestion Notification field.","Emit a high-level representation into an Address …","Emit a  <code>DhcpOption</code> into a <code>DhcpOptionWriter</code>.","Emit a high-level representation into a Dynamic Host …","Emit a high-level representation into an Ethernet II frame.","Emit a high-level representation into an Internet Control …","Emit a high-level representation into an Internet Control …","Emit this high-level representation into a buffer.","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an Internet Protocol …","Emit a high-level representation into an IPv6 Extension …","Emit a high-level representation into an IPv6 Fragment …","Emit a high-level representation into an IPv6 Extension …","Emit a high-level representation into an IPv6 Routing …","Emit a high-level representation into an MLDv2 packet.","","Emit a high-level representation into an NDISC Option.","","Emit a high-level representation into a Transmission …","Emit a high-level representation into an User Datagram …","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the EtherType field, without checking for 802.1Q.","","","","","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Compute and fill in the header checksum.","Return the FIN flag.","","","Return the flow label field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fragment offset, in octets.","Return the fragment offset field.","The offset of the data following this header, relative to …","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Construct an Ethernet address from a sequence of octets, …","Construct an IPv4 address from a sequence of octets, in …","Construct an IPv6 address from a sequence of octets, in …","","","","","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from a sequence of words, in …","Parse a string representation of an Ethernet address.","Parse a string representation of an IP address.","Parse a string representation of an IP CIDR.","","Parse a string representation of an IPv4 address.","Parse a string representation of an IPv4 CIDR.","Parse a string representation of an IPv6 address.","Parse a string representation of an IPv6 CIDR.","","Returns the key for identifying the packet.","","Return the hardware length field.","Returns the length of a hardware address in bytes (e.g. 6 …","Return the hardware type field.","Returns the hardware protocol type (e.g. ethernet).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the length of a frame header.","Return the header length. The result depends on the value …","Return the header length. The result depends on the value …","Return the length of a header that will be emitted from …","Return the header length, in octets.","Return the header length.","Return the header length field.","Return the length, in bytes, of a header that will be …","Return the header length, in octets.","Return the length of a header that will be emitted from …","Return the length of the packet header that will be …","Return the IPv6 Home Address","Return the TTL value.","Return the time to live field.","Return the hop limit field.","","The 8-bit hop limit field.","Returns the value of the <code>hops</code> field.","Return the fragment identification field.","Return the fragment identification value field.","The identification for every packet that is fragmented.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to an <code>IpAddress</code>.","Convert to an <code>IpAddress</code>.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consumes the frame, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the ipv6 option, returning the underlying buffer.","Consume the header, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the NDISC option, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","Consume the packet, returning the underlying buffer.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Query whether this address is the broadcast address.","Query whether the address is the broadcast address.","Query whether the address is the broadcast address.","Query wether the address is a broadcast address.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return whether the segment has no flags set (except PSH) …","","Per RFC 4443 § 2.1 ICMPv6 message types with the highest …","Query whether the IPv6 address is an IPv4 mapped IPv6 …","Query whether the address falls into the “link-local” …","Query whether the IPv6 address is in the link-local scope.","Query whether the “locally administered” bit in the …","Query whether the address falls into the “loopback” …","Query whether the IPv6 address is the loopback address.","Return a boolean value indicating if the given message type","Query whether the “multicast” bit in the OUI is set.","Query whether the address is a valid multicast address.","Query whether the address is a multicast address.","Query whether the IPv6 address is a multicast address.","Return a boolean value indicating if the given message type","Query whether the endpoint has a specified address and …","Query whether the address is an unicast address.","Query whether the address is a valid unicast address.","Query whether the address is an unicast address.","Query whether the IPv6 address is an unicast address.","Query wether the address is an unicast address.","Query whether the address falls into the “unspecified” …","Query whether the address falls into the “unspecified” …","Query whether the IPv6 address is the unspecified address.","","The DHCP IP lease duration, specified in seconds.","Return the length of a control flag, in terms of sequence …","Return the length field.","","","","Return the Source/Target Link-layer Address.","Returns the value of the <code>magic cookie</code> field in the DHCP …","","Return the maximum response code field.","","The maximum size dhcp packet the interface can receive","Return the address being queried.","Return the multicast address field.","This field is also known as <code>op</code> in the RFC. It indicates …","","Return the “more fragments” flag.","Return more fragment flag field.","When there are more fragments following this header","Return the message code field.","Return the message code field.","Return the message type field.","Return the message type field.","Return the MTU value.","Return the Neighbor Solicitation flags.","Return the network mask of this IPv4 CIDR.","Return the network block of this IPv4 CIDR.","","Create a CIDR block from the given address and prefix …","Create an endpoint address from given address and port.","Create a new IpRepr, choosing the right IP version for the …","Construct an IPv4 address from parts.","Create an IPv4 CIDR block from the given address and …","Construct an IPv6 address from parts.","Create an IPv6 CIDR block from the given address and …","Create a new <code>Ipv6OptionsIterator</code>, used to iterate over the …","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Shorthand for a combination of new_unchecked and check_len.","Imbue a raw octet buffer with ARP packet structure.","Imbue a raw octet buffer with DHCP packet structure.","Imbue a raw octet buffer with Ethernet frame structure.","Imbue a raw octet buffer with ICMPv4 packet structure.","Imbue a raw octet buffer with ICMPv6 packet structure.","Imbue a raw octet buffer with IPv4 packet structure.","Create a raw octet buffer with an IPv6 packet structure.","Create a raw octet buffer with an IPv6 Extension Header …","Create a raw octet buffer with an IPv6 Fragment Header …","Create a raw octet buffer with an IPv6 Extension Header …","Create a raw octet buffer with an IPv6 Routing Header …","Imbue a raw octet buffer with a Address Record structure.","Create a raw octet buffer with an NDISC Option structure.","Imbue a raw octet buffer with TCP packet structure.","Imbue a raw octet buffer with UDP packet structure.","","Return the next header (protocol).","Return the next_header (protocol) field.","Return the next header field.","Return the next header field.","","","Protocol contained in the next header.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Return the number of Multicast Address Records.","Return the NS flag.","Return number of sources.","Return the number of sources field.","Return the version of an IP packet stored in the provided …","Returns the operation code of this packet.","Return the operation field.","Return the option type.","Return the option type.","Return an iterator over the options.","Return a pointer to the options.","Return a pointer to the options.","Return a pointer to the options.","Return the number of octets used for padding after …","Return the pointer field (for parameter problem messages).","The parameter request list informs the server about which …","Parse an Address Resolution Protocol packet and return a …","Parse a DHCP packet and return a high-level representation.","Parse an Ethernet II frame and return a high-level …","Parse an Internet Control Message Protocol version 4 …","Parse an Internet Control Message Protocol version 6 …","Parse an Internet Protocol version 4 packet and return a …","Parse an Internet Protocol version 6 packet and return a …","Parse an IPv6 Extension Header Header and return a …","Parse an IPv6 Fragment Header and return a high-level …","Parse an IPv6 Extension Header Option and return a …","Parse an IPv6 Routing Header and return a high-level …","Parse an MLDv2 packet and return a high-level …","Parse an NDISC packet and return a high-level …","Parse an NDISC Option and return a high-level …","","Parse a Transmission Control Protocol packet and return a …","Parse an User Datagram Protocol packet and return a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a pointer to the payload, without checking for …","Return a pointer to the type-specific data.","Return a pointer to the payload.","Return a pointer to the payload.","Return the payload of the IPv6 extension header.","Return a pointer to the address records.","Return a pointer to the payload.","Return a pointer to the payload.","","Return the payload length.","Return the payload length field.","","Length of the payload including the extension headers.","Return a mutable pointer to the payload.","Return a mutable pointer to the type-specific data.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload.","Return a mutable pointer to the payload data.","Return a pointer to the address records.","Return a mutable pointer to the payload data.","Return a mutable pointer to the payload.","Return the MTU field (for packet too big messages).","","","Return the preferred lifetime of the prefix.","","Return the prefix.","","Return the prefix information flags.","If <code>self</code> is a CIDR-compatible subnet mask, return …","Return the prefix length of this CIDR block.","Return the prefix length of this IPv4 CIDR block.","Return the prefix length of this IPv6 CIDR block.","Return the prefix length.","","Pretty-printing of packet representation.","","","","","","","","","Return the protocol length field.","Return the protocol type field.","Return the PSH flag.","Return the Querier’s Query Interval Code.","Return the Querier’s Robustness Variable.","Turn the PSH flag into no flag, and keep the rest as-is.","Return the reachable time field.","The DHCP IP rebind duration (T2 interval), in seconds, if …","Return the record type for the given sources.","Returns the value of the <code>giaddr</code> field, zero if not set.","This field is also known as <code>giaddr</code> in the RFC. In order to …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","The DHCP IP renew duration (T1 interval), in seconds, if …","The “requested IP address” option. It can be used by …","Return the retransmit time field.","Default gateway","Return the Router Advertisement flags.","Return the router lifetime field.","Return the routing type field.","Return the RST flag.","Return the Suppress Router-Side Processing flag.","","","Returns the value of the <code>secs</code> field.","seconds elapsed since client began address acquisition or …","Return the length of the segment, in terms of sequence …","Return the length of the segment, in terms of sequence …","Return the segments left field.","Returns whether the selective acknowledgement SYN flag is …","Return the selective acknowledgement ranges, if any. If …","Return the sequence number field.","","The “server identifier” option. It is used both to …","Returns the value of the <code>siaddr</code> field, zero if not set.","This field is also known as <code>siaddr</code> in the RFC. It may be …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set the ACK flag.","Set the acknowledgement number field.","Set address data","Return the length of the auxiliary data.","Set the checksum field.","","Set the header checksum field.","Set the checksum field.","Set the checksum field.","Sets the ethernet address of the client.","Sets the Ipv4 address of the client.","Set the number of prefix octets elided from the last …","Set the number of prefix octets elided from addresses[…","Set the current hop limit field.","Set the CWR flag.","Set the option data length.","Set the option data length.","Set the destination address field.","Set the “don’t fragment” flag.","Set the Differential Services Code Point field.","Set the destination address field.","Set the destination address field.","Set the destination address field.","Set the destination port field.","Set the destination port field.","Set the ECE flag.","Set the identifier field (for echo request and reply …","Set the identifier field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the sequence number field (for echo request and reply …","Set the Explicit Congestion Notification field.","Set the EtherType field.","Set the FIN flag.","Sets the flags to the specified value.","Set the flow label field.","Set the fragment offset, in octets.","Set the fragment offset field.","Set the hardware length field.","Sets the hardware address length.","Set the hardware type field.","Sets the hardware address type (only ethernet is …","Set the header length, in octets.","Set the extension header data length. The length of the …","Set the header length, in octets.","Set the Ipv6 Home Address","Set the time to live field.","Set the hop limit field.","Sets the hops field.","Set the fragment identification field.","Set the fragmentation identification field.","Set the length field.","Set the Source/Target Link-layer Address.","Sets the value of the <code>magic cookie</code> field in the DHCP …","Set the maximum response code field.","Set the address being queried.","Return the multicast address field.","Set the “more fragments” flag.","Set the more fragments flag field.","Set the message code field.","Set the message code field.","Set the message type field.","Set the message type field.","Set the MTU value.","Set the Neighbor Solicitation flags.","Set the next header (protocol) field.","Set the next header field.","Set the next header field.","Set the number of Multicast Address Records.","Set the NS flag.","Set number of sources.","Return the number of sources field.","Sets the <code>OpCode</code> for the packet.","Set the operation field.","Set the option type.","Set the option type.","Set the number of octets used for padding after …","Set the pointer field (for parameter problem messages).","Set the payload length.","Set the payload length field.","Set the MTU field (for packet too big messages).","Set the preferred lifetime of the prefix.","Set the prefix.","Set the prefix information flags.","Set the prefix length.","Set the protocol length field.","Set the protocol type field.","Set the PSH flag.","Set the Querier’s Query Interval Code.","Set the Querier’s Robustness Variable.","Set the reachable time field.","Return the record type for the given sources.","Sets the value of the <code>giaddr</code> field.","Set the retransmit time field.","Set the Router Advertisement flags.","Set the router lifetime field.","Set the routing type.","Set the RST flag.","Set the Suppress Router-Side Processing flag.","Sets the <code>secs</code> field.","Set the segments left field.","Set the sequence number field.","Sets the value of the <code>siaddr</code> field.","Sets the optional <code>sname</code> (“server name”) and <code>file</code> …","Set the source hardware address field.","Set the source protocol address field.","Set the source address field.","Set the source address field.","Set the source address field.","Set the source port field.","Set the source port field.","Set the SYN flag.","Set the target address field.","Set the target hardware address field.","Set the target protocol address field.","Set the total length field.","Set the traffic class field.","Sets the transaction ID.","Set the URG flag.","Set the urgent pointer field.","Set the valid lifetime of the prefix.","Set the version field.","Set the version field.","Return the window size field.","Sets the value of the <code>yiaddr</code> field.","The solicited node for the given unicast address.","Return the source hardware address field.","Return the source protocol address field.","Return the source address field.","Return the source address.","Return the source address field.","Return the source address field.","","","IPv6 address of the source node.","Return the source port field.","Return the source port field.","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","This field comes from a corresponding DhcpOption.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Return the SYN flag.","Return the target address field.","Return the target hardware address field.","Return the target protocol address field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Return the total length field.","Return the payload length added to the known header length.","Return the traffic class.","Returns the transaction ID.","This field is also known as <code>xid</code> in the RFC. It is a random …eturns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Return the URG flag.","Return the urgent pointer field.","Create an address wrapping an IPv4 address with the given …","Create an address wrapping an IPv6 address with the given …","Return the valid lifetime of the prefix.","","Validate the header checksum.","Validate the header checksum.","Validate the header checksum.","Validate the packet checksum.","Validate the packet checksum.","Return the protocol version.","Return the protocol version.","Return the version field.","Return the version field.","Return the window size field.","","","Write a IPv6 address to the given slice.","Returns the value of the <code>yiaddr</code> field, zero if not set.","This field is also known as <code>yiaddr</code> in the RFC.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of addresses, numbered 1 to <code>n</code>.","Number of prefix octets from the last segment that are …","Number of prefix octets from each segment, except the last …","The home address of the destination mobile node.","Number of octets that are used for padding after <code>address[n]</code>…","Number of route segments remaining.","Number of route segments remaining.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indentation state.","Interface for printing listings.","Wrapper for using a <code>PrettyPrint</code> where a <code>Display</code> is …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Increase indentation level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Format the listing with the recorded parameters when …","Create an indentation state. The entire listing will be …","Write a concise, formatted representation of a packet …","Create a <code>PrettyPrinter</code> which prints the given object.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,1,4,4,11,11,15,26,8,6,4,16,2,1,11,15,26,8,6,4,16,2,1,6,8,6,2,8,6,2,2,11,16,2,8,2,6,8,8,6,4,16,2,2,1,11,15,26,8,6,4,16,2,1,1,1,11,26,11,15,2,11,15,26,8,6,4,16,2,1,11,11,15,11,15,1,1,11,26,4,1,6,6,2,11,11,11,6,26,1,4,4,11,11,11,11,8,6,2,8,2,11,15,26,8,6,4,16,2,1,11,15,26,8,6,4,16,2,1,11,15,26,8,6,4,16,2,1,4,11,6,45,47,0,0,0,0,44,49,0,0,0,44,44,0,0,47,0,0,0,0,0,47,45,0,28,0,47,45,0,28,44,38,36,39,41,44,45,42,46,47,48,37,49,38,36,39,41,44,45,42,46,47,48,37,49,36,28,38,36,39,41,42,37,44,45,46,47,48,37,49,44,45,46,47,48,37,49,44,161,162,36,46,47,48,37,49,36,44,45,46,49,43,43,36,39,41,44,45,42,46,47,48,37,49,38,36,39,41,44,44,45,42,46,47,48,37,49,40,38,42,38,42,43,43,44,46,48,48,48,38,36,39,41,44,45,42,46,47,48,37,49,38,36,39,37,48,37,36,36,37,36,37,161,38,36,39,41,42,43,43,43,43,44,28,38,36,39,41,42,47,36,36,36,36,36,36,162,48,44,45,46,47,48,37,49,28,38,36,39,41,42,38,36,39,41,44,45,42,46,47,48,37,49,38,36,39,41,44,45,42,46,47,48,37,49,47,38,36,39,41,44,45,42,46,47,48,37,49,48,43,43,43,43,43,0,32,0,32,32,32,0,3,3,32,32,32,0,32,32,32,3,0,60,60,0,0,0,0,56,57,56,57,58,60,59,56,57,58,60,59,56,57,58,56,57,58,58,58,56,59,59,56,57,58,60,56,57,58,60,59,56,57,58,60,59,57,59,58,56,57,58,60,59,59,58,59,56,59,59,58,59,56,56,59,59,59,59,59,59,59,56,57,58,56,57,58,60,59,56,57,58,60,59,56,57,58,60,59,59,68,68,68,0,68,68,68,67,64,65,66,67,68,68,0,0,0,0,0,0,68,68,68,64,65,63,63,64,65,66,67,68,63,64,65,66,67,68,63,63,63,64,65,66,67,68,64,65,66,67,68,63,63,63,63,64,65,66,67,68,64,64,65,65,66,66,67,67,68,68,63,64,65,66,67,68,63,63,64,65,66,67,68,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,63,64,65,66,67,68,63,64,65,66,67,68,63,63,63,0,75,0,0,0,0,0,0,73,73,73,75,79,74,77,78,73,75,79,74,77,78,74,73,74,73,75,77,78,73,75,77,78,74,79,74,74,74,74,74,74,79,79,74,74,74,74,74,74,79,73,77,78,73,73,75,79,74,77,78,73,75,79,74,74,77,78,74,74,73,75,79,74,77,78,73,79,74,79,74,73,74,73,79,74,79,79,79,73,74,73,81,74,73,75,77,78,73,73,75,79,74,77,78,73,75,79,74,77,78,73,75,79,74,77,78,74,74,0,0,27,31,27,31,27,31,27,31,27,31,27,31,27,31,27,31,31,31,31,27,31,27,27,31,31,27,31,31,27,31,27,27,31,27,27,31,27,31,27,31,27,31,31,31,27,31,27,31,31,31,31,31,27,27,31,27,31,27,31,27,31,27,31,27,31,27,31,27,31,27,31,92,128,137,137,129,0,0,0,0,135,93,5,135,137,132,0,0,0,128,0,0,0,0,0,145,145,145,128,132,132,131,106,136,107,0,131,106,136,107,131,106,136,107,117,119,138,0,126,19,0,0,103,0,0,146,146,137,150,134,139,132,0,141,139,133,132,132,133,132,132,0,10,0,0,0,141,0,0,0,0,0,0,0,0,141,0,0,0,0,0,0,141,128,0,0,0,0,0,0,0,129,130,140,20,23,108,0,0,0,0,0,129,130,140,20,23,108,0,0,0,0,141,0,0,0,0,141,0,0,0,0,0,141,0,0,141,0,0,0,10,10,10,90,0,5,5,117,135,107,0,136,136,0,147,116,128,107,0,0,0,0,0,0,0,0,0,136,115,136,115,133,132,133,132,132,146,117,137,150,92,90,91,128,119,144,112,144,112,131,136,107,136,107,132,137,132,147,116,0,132,150,114,91,0,131,136,115,147,116,137,128,127,114,127,128,146,0,131,136,115,131,136,115,144,146,113,136,150,91,88,117,117,145,147,116,132,132,150,0,147,116,141,0,0,0,0,0,131,106,136,107,131,131,134,146,146,113,0,5,10,141,0,0,126,127,128,129,131,132,133,134,135,136,137,138,139,141,144,145,112,146,147,116,117,138,138,117,84,84,118,86,86,104,69,70,23,87,88,89,90,91,92,93,20,5,10,19,94,10,95,96,97,98,99,100,84,101,102,90,91,92,90,91,92,90,91,92,90,91,92,90,91,92,90,91,92,90,91,92,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,87,104,103,104,96,105,106,107,108,109,110,111,112,113,114,115,116,117,118,95,120,96,97,98,99,100,121,122,123,89,102,124,84,101,97,98,99,84,101,99,84,124,124,98,122,89,98,120,104,104,120,104,126,127,95,103,128,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,143,111,144,145,112,146,113,102,114,90,91,115,147,92,148,149,116,86,84,117,150,118,101,151,152,19,94,126,127,95,103,128,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,143,111,144,145,112,146,113,102,114,90,91,115,147,92,148,149,116,86,84,117,150,118,101,151,152,19,94,126,127,128,129,93,131,132,133,134,135,136,137,138,139,140,141,20,23,69,70,142,5,87,10,88,144,145,146,90,91,147,92,89,89,90,91,92,90,91,92,23,87,88,23,87,88,118,98,84,97,123,124,163,62,143,149,123,124,97,123,124,93,70,5,87,10,88,86,98,90,91,92,104,99,99,96,108,99,100,105,109,110,84,101,118,151,84,97,98,97,98,99,103,153,104,105,106,107,108,109,110,143,111,112,113,114,115,116,117,118,151,90,91,92,153,126,127,95,103,128,62,120,104,129,93,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,96,105,90,91,92,97,98,99,84,101,84,120,148,100,126,127,95,95,103,103,128,153,62,120,104,129,129,93,93,96,96,105,130,131,131,132,132,133,134,134,135,97,97,106,106,136,136,137,137,138,138,139,139,98,107,140,140,141,141,20,20,23,23,69,69,70,70,108,142,5,5,87,87,99,99,109,109,10,10,88,88,100,100,110,110,121,143,122,122,111,111,144,144,145,145,123,123,112,112,156,146,146,89,89,113,113,102,114,90,90,90,90,90,91,91,91,91,91,115,147,147,92,92,92,92,92,124,124,148,149,116,116,86,86,84,84,117,150,118,118,101,101,151,151,152,152,19,19,94,94,99,122,111,126,126,127,127,95,103,128,128,153,62,120,104,129,129,93,96,105,130,130,130,131,131,132,132,133,133,134,134,135,135,97,106,136,136,137,137,138,138,139,139,98,107,140,141,141,20,20,20,23,23,23,69,69,70,70,70,70,108,108,108,142,5,87,99,109,10,10,88,100,110,121,143,122,111,144,144,145,145,145,123,112,156,146,146,89,113,102,114,90,91,115,147,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,19,94,94,94,90,91,92,90,91,92,90,91,92,93,5,10,94,90,91,92,87,10,93,20,23,69,5,87,10,88,120,99,120,95,120,95,120,126,127,128,129,93,131,132,133,134,135,136,137,138,139,140,141,20,23,69,70,5,87,10,88,144,145,146,90,91,147,92,149,96,97,98,108,99,100,121,143,84,118,151,89,108,99,100,109,110,120,99,122,111,90,91,92,90,91,92,90,91,92,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,5,10,95,120,96,97,98,99,100,121,122,123,89,102,124,84,101,156,90,91,92,93,20,5,19,90,91,92,118,94,136,10,5,10,93,5,10,136,93,20,5,10,136,70,93,20,5,10,19,20,5,10,62,104,150,101,94,163,143,124,120,86,98,118,104,98,102,104,86,99,122,111,97,98,97,98,124,98,87,87,153,23,69,108,5,87,10,88,156,95,120,96,97,98,99,100,121,122,123,89,102,124,84,101,95,120,96,97,98,99,100,121,122,123,89,102,124,84,101,156,108,99,100,121,163,109,110,143,90,91,92,98,84,98,102,140,120,95,123,124,120,84,120,84,89,98,104,103,104,105,106,107,109,110,143,111,112,113,114,115,116,117,118,151,94,126,127,128,129,93,131,132,133,134,135,136,137,138,139,140,141,20,23,69,70,142,5,87,10,88,144,145,146,90,91,147,92,86,96,98,99,100,121,102,84,101,118,108,100,109,110,96,98,99,100,121,102,84,101,98,69,70,124,148,124,148,124,20,23,87,88,124,148,0,95,96,97,99,100,124,84,101,95,95,84,98,98,150,98,104,102,120,104,90,91,92,104,104,98,104,98,98,89,84,98,118,118,120,104,84,118,89,84,84,84,118,104,120,104,90,91,92,84,84,89,102,97,98,99,84,101,120,120,89,89,98,84,123,124,98,99,99,96,99,100,84,101,84,97,98,97,98,99,96,84,120,100,99,122,95,120,95,120,99,121,84,89,99,100,120,99,122,101,124,120,98,98,102,99,122,97,98,97,98,124,98,99,100,121,98,84,98,102,120,95,123,124,89,98,108,100,98,124,124,124,124,95,95,84,98,98,98,102,120,98,98,98,89,84,98,120,89,84,120,120,95,95,96,99,100,84,101,84,98,95,95,99,100,120,84,84,124,99,100,84,120,10,95,95,96,108,99,100,105,109,110,84,101,118,151,90,91,92,86,86,90,91,92,104,90,91,92,84,98,95,95,126,127,95,103,128,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,143,111,144,145,112,146,113,102,114,90,91,115,147,92,148,149,116,86,84,117,150,118,101,151,152,19,94,95,103,129,93,96,131,132,134,97,106,136,137,138,139,140,141,20,23,69,70,5,87,99,109,10,88,100,110,122,111,144,145,123,112,146,89,113,147,124,116,86,84,118,101,151,152,19,94,90,91,92,99,100,100,120,104,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,126,127,95,103,128,153,62,120,104,129,93,96,105,130,131,132,133,134,135,97,106,136,137,138,139,98,107,140,141,20,23,69,70,108,142,5,87,99,109,10,88,100,110,121,143,122,111,144,145,123,112,156,146,89,113,102,114,90,91,115,147,92,124,148,149,116,86,84,117,150,118,101,151,152,19,94,90,91,92,84,84,20,20,124,148,97,98,99,84,101,20,108,99,100,84,118,118,10,120,104,164,164,164,164,164,165,166,167,168,167,168,165,166,167,168,165,166,169,170,171,172,173,174,169,170,171,172,173,174,170,172,169,171,172,173,174,175,175,175,176,176,176,177,176,177,176,178,179,178,178,179,178,178,178,178,180,180,180,181,182,183,182,184,182,185,183,181,182,182,182,181,182,182,185,183,181,186,186,0,0,0,159,157,159,157,159,157,157,159,157,157,159,157,159,157,160,159,159,157,159,157,159,157,159,157],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1],2,3],[[4,5],[[9,[[7,[6]],8]]]],[[4,10],[[9,[[7,[6]],8]]]],[11,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[8,8],[6,6],[2,2],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[2,2],14],[11,15],[[],16],[[],2],[[8,8],12],[[2,2],12],0,[[8,17],18],[[8,17],18],[[6,17],18],[[4,17],18],[[16,17],18],[[2,17],18],[[2,17],18],[[1,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,2],-1,3],[[1,2],-1,3],[11,19],0,[[11,-1],12,[[21,[20]]]],[[15,10],12],[[2,-1],13,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,[[24,[23]]]],[11,[[7,[5]]]],[15,[[7,[5]]]],[11,[[7,[10]]]],[15,[[7,[10]]]],[1,[[0,[25]]]],[1,[[0,[25]]]],[[26,-1,27],11,[28,29]],[19,26],[[],4],[-1,1,[[21,[[30,[16]]]]]],[5,6],[10,6],[[2,2],[[7,[14]]]],[[11,27,-1,1],12,[28,29]],[[11,27,1],[[7,[27]]]],[[11,27,1],[[7,[31]]]],0,0,[[1,2],32],[4,[[7,[6]]]],[4,[[7,[6]]]],[11,4],[11,4],[[11,12],13],[[11,19],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[4,-1],13,35],[[11,-1],13,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]]],31,28],[-1,37,[]],[[[38,[-1]]],37,28],[[[36,[-1]]],37,28],[[[39,[-1,-2,-3]]],37,28,40,40],[41,37],[[[42,[-1,-2]]],37,28,43],0,[44,44],[45,45],[46,46],[47,47],[48,48],[37,37],[49,49],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[44,44],14],[[-1,-2],-3,[],35,[]],[[-1,50,-2],-3,[],35,[]],[[[36,[-1]]],51,28],[[],46],[[],47],[[],48],[[],37],[[],49],[[[36,[-1]]],51,28],[[44,44],12],[[45,45],12],[[46,46],12],[[49,49],12],[-1,13,[]],[-1,13,[]],[[[36,[-1]],17],18,[52,28]],[[[39,[-1,-2,-3]],17],18,[52,28],[52,40],[52,40]],[[41,17],18],[[44,17],18],[[45,17],18],[[[42,[-1,-2]],17],18,[28,52],[43,52]],[[46,17],18],[[47,17],18],[[48,17],18],[[37,17],18],[[49,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[53,44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,[24,[51]]],13,[]],[[[38,[-1]]],-1,28],[[[42,[-1,-2]]],-1,28,43],[[[38,[-1]]],-1,28],[[[42,[-1,-2]]],-1,28,43],[[-1,44],13,[]],[[-1,44],13,[]],[[44,-1],13,22],[[46,-1],13,22],0,0,[[],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[38,[-1]]],-1,28],[[[36,[-1]]],-1,28],[[[39,[-1,-2,-3]]],-1,28,40,40],[37,50],0,0,[[[36,[-1]]],50,28],[[[36,[-1]]],54,28],0,[[[36,[-1]]],54,28],0,[-1,46,[]],[-1,[[38,[-1]]],28],[[-1,53],[[36,[-1]]],28],[[-1,-2,-3],[[39,[-1,-2,-3]]],28,40,40],[49,41],[[-1,-2,45],[[42,[-1,-2]]],28,43],[[-1,27,[24,[51]]],13,[]],[[-1,27,[24,[51]]],13,[]],[[-1,27,50],13,[]],[[-1,27,50],13,[]],[[44,44],[[7,[14]]]],[[-1,27],[[7,[13]]],[]],[[[38,[-1]],27],[[7,[13]]],28],[[[36,[-1]],27],[[7,[13]]],28],[[[39,[-1,-2,-3]],27],[[7,[13]]],28,40,40],[[41,27],[[7,[13]]]],[[[42,[-1,-2]],27],[[7,[13]]],28,43],[47,12],[[[36,[-1]],31],13,28],[[[36,[-1]],51],13,28],[[[36,[-1]],51],13,28],[[[36,[-1]],50],13,28],[[[36,[-1]],54],13,28],[[[36,[-1]],54],13,28],[[-1,46],13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,27],7,[]],[[[38,[-1]],27],7,28],[[[36,[-1]],27],7,28],[[[39,[-1,-2,-3]],27],7,28,40,40],[[41,27],7],[[[42,[-1,-2]],27],7,28,43],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[47,12],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[[-1,[24,[51]]],13,[]],[[-1,55],13,[]],[[-1,55],13,[]],[[-1,53],13,[]],[[-1,53],13,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[32,[[7,[-1]]],29],[32,[[7,[-1]]],29],[[32,17],18],[-1,-1,[]],[-1,-2,[],[]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,32,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[57,57],[58,58],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],58],0,0,[32,[[7,[59]]]],[32,[[7,[59]]]],[[56,56],12],[[57,57],12],[[58,58],12],[[60,60],12],[[56,17],18],[[57,17],18],[[58,17],18],[[60,17],18],[[59,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[59,12],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,[[7,[31]]]],0,[[],59],0,[59,[[7,[60]]]],[[59,61],13],0,[59,13],0,0,[[59,12],13],[[59,[7,[31]]],13],[[59,[24,[62]]],13],[[59,[24,[51]]],13],[[59,55,55],13],[[59,[24,[51]]],13],[[59,58],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[59,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,13],[63,[[7,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,12],[63,12],[64,64],[65,65],[66,66],[67,67],[68,68],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[63,13],[[63,15,-1,-2],[[9,[13,65]]],[[21,[69]]],[[21,[70]]]],[32,[[7,[63]]]],[32,[[7,[63]]]],[[64,64],12],[[65,65],12],[[66,66],12],[[67,67],12],[[68,68],12],[[64,17],18],[[64,17],18],[[65,17],18],[[65,17],18],[[66,17],18],[[66,17],18],[[67,17],18],[[67,17],18],[[68,17],18],[[68,17],18],[[63,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[63,[[7,[51]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,12],[63,12],[63,12],[63,[[7,[31]]]],[[63,-1],[[9,[13,64]]],[[21,[70]]]],[63,[[7,[69]]]],[63,12],[63,12],[63,12],[[-1,-1],63,[[21,[71]]]],[[63,50],[[9,[[24,[51]],67]]]],[[63,[24,[51]]],[[9,[50,67]]]],[[63,-1],[[9,[-2,67]]],35,[]],[63,50],[63,50],[[63,[24,[51]]],[[9,[50,67]]]],[[63,61],13],[[63,61],13],[63,[[7,[69]]]],[[63,-1],[[9,[-2,66]]],35,[]],[63,50],[63,50],[[63,[24,[51]]],[[9,[50,66]]]],[[63,[7,[31]]],13],[[63,[7,[51]]],13],[[63,[7,[31]]],13],[[63,12],13],[[63,[7,[31]]],13],[63,68],[63,[[7,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[63,32],[[63,72],18],0,0,0,0,0,0,0,0,[[73,50,50],[[9,[13,0]]]],[[73,50,50],[[9,[50,0]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[74,[-1]]],50,[]],[73,13],[[[74,[-1]]],13,[]],[73,73],[[[75,[-1]]],[[75,[-1]]],76],[77,77],[78,78],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[74,[-1]]],50,[]],[[[79,[-1]]],[[9,[[13,[-1,[24,[51]]]],78]]],[]],[[[74,[-1]],50],13,[]],[[[74,[-1]],50],[[24,[-1]]],[]],[[[74,[-1]],-2],[[13,[50,-3]]],[],35,[]],[[[74,[-1]]],[[9,[-1,78]]],[]],[[[74,[-1]],-2],[[9,[[9,[-3,-4]],78]]],[],35,[],[]],[[[74,[-1]],[24,[-1]]],50,80],[[[79,[-1]],-2],[[9,[[9,[-3,-4]],78]]],[],35,[],[]],[[[79,[-1]],50,-1],[[9,[[24,[51]],77]]],[]],[[[74,[-1]],50],[[24,[-1]]],[]],[[[74,[-1]],-2],[[13,[50,-3]]],[],35,[]],[[[74,[-1]]],[[9,[-1,77]]],[]],[[[74,[-1]],-2],[[9,[[9,[-3,-4]],77]]],[],35,[],[]],[[[74,[-1]],[24,[-1]]],50,80],[[[74,[-1]],50],13,[]],[[[79,[-1]],50,-1,-2],[[9,[50,77]]],[],35],[[73,73],12],[[77,77],12],[[78,78],12],[[73,17],18],[[73,17],18],[[[75,[-1]],17],18,52],[[[79,[-1]],17],18,52],[[[74,[-1]],17],18,52],[[77,17],18],[[78,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[30,[-1]]],[[74,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[[[74,[-1]],50,50],[[24,[-1]]],[]],[[[74,[-1]],50,50],[[24,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,12],[[[79,[-1]]],12,[]],[[[74,[-1]]],12,[]],[[[79,[-1]]],12,[]],[[[74,[-1]]],12,[]],0,[[[74,[-1]]],50,[]],[[],73],[[-2,-3],[[79,[-1]]],[],[[21,[[30,[[75,[-1]]]]]]],[[21,[[30,[51]]]]]],[-2,[[74,[-1]]],[],[[21,[[30,[-1]]]]]],[[[79,[-1]]],50,[]],[[[79,[-1]]],50,[]],[[[79,[-1]]],[[9,[[13,[-1,[24,[51]]]],78]]],[]],[73,50],[[[74,[-1]],50,[24,[-1]]],50,80],[73,50],[-1,13,[]],[[[74,[-1]]],13,81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[[74,[-1]]],50,[]],[[[74,[-1]],50,[24,[-1]]],50,80],0,0,0,0,[[27,31],27],[[31,31],31],[[27,31],13],[[31,31],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[27,27],[31,31],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[27,27],14],[[31,31],14],[[],31],[[31,53],31],[[31,53],13],[[27,27],12],[[31,31],12],[[27,17],18],[[27,17],18],[[31,17],18],[[31,17],18],[-1,-1,[]],[-1,-1,[]],[82,31],[-1,27,[[21,[83]]]],[54,31],[83,27],[-1,27,[[21,[83]]]],[54,31],[83,27],[-1,27,[[21,[83]]]],[54,31],[-1,-2,[],[]],[-1,-2,[],[]],[27,83],[31,54],[27,83],[31,54],[[31,53],31],[[31,53],13],[[27,27],[[7,[14]]]],[[31,31],[[7,[14]]]],[27,83],[31,54],[[31,53],31],[[31,53],13],[[31,53],31],[[31,53],13],[[27,31],27],[[27,27],31],[[31,31],31],[[27,31],13],[[31,31],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[27,83],[31,54],[27,83],[31,54],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[84,[-1]]],86,[[85,[[24,[51]]]]]],0,[[86,50],86],[[86,50],13],0,0,0,[23,20],[87,5],[88,10],[[[89,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[],90],[[],91],[[],92],[93,[[24,[51]]]],[20,[[24,[51]]]],[5,[[24,[51]]]],[10,[[24,[51]]]],[19,[[24,[51]]]],[94,[[24,[51]]]],[10,[[7,[5]]]],[[[95,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[96,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[97,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[98,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[99,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[100,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[84,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[101,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[102,[-1]]],51,[[85,[[24,[51]]]]]],[[90,90],90],[[91,91],91],[[92,92],92],[[90,90],13],[[91,91],13],[[92,92],13],[[90,90],90],[[91,91],91],[[92,92],92],[[90,90],13],[[91,91],13],[[92,92],13],[90,51],[91,51],[92,51],[[90,90],90],[[91,91],91],[[92,92],92],[[90,90],13],[[91,91],13],[[92,92],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,[[7,[5]]]],0,[103,50],[104,50],[50,50],[105,50],[106,50],[107,50],[108,50],[109,50],[110,50],[111,50],[112,50],[113,50],[114,50],[115,50],[116,50],[117,50],[118,50],[[[95,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[120,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[96,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[97,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[98,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[99,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[100,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[121,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[122,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[123,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[89,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[102,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[124,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[84,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[101,[-1]]],[[119,[13]]],[[85,[[24,[51]]]]]],[[[97,[-1]]],55,[[85,[[24,[51]]]]]],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],[[[99,[-1]]],55,[[85,[[24,[51]]]]]],[[[84,[-1]]],55,[[85,[[24,[51]]]]]],[[[101,[-1]]],55,[[85,[[24,[51]]]]]],[[[99,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[122,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]]],93,[[85,[[24,[51]]]]]],0,0,[[[120,[-1]]],5,[[85,[[24,[51]]]]]],0,[126,126],[127,127],[[[95,[-1]]],[[95,[-1]]],[76,[85,[[24,[51]]]]]],[103,103],[128,128],[62,62],[[[120,[-1]]],[[120,[-1]]],[76,[85,[[24,[51]]]]]],[104,104],[129,129],[93,93],[[[96,[-1]]],[[96,[-1]]],[76,[85,[[24,[51]]]]]],[105,105],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[[[97,[-1]]],[[97,[-1]]],[76,[85,[[24,[51]]]]]],[106,106],[136,136],[137,137],[138,138],[139,139],[[[98,[-1]]],[[98,[-1]]],[76,[85,[[24,[51]]]]]],[107,107],[140,140],[141,141],[20,20],[23,23],[69,69],[70,70],[108,108],[142,142],[5,5],[87,87],[[[99,[-1]]],[[99,[-1]]],[76,[85,[[24,[51]]]]]],[109,109],[10,10],[88,88],[[[100,[-1]]],[[100,[-1]]],[76,[85,[[24,[51]]]]]],[110,110],[143,143],[111,111],[144,144],[145,145],[112,112],[146,146],[113,113],[[[102,[-1]]],[[102,[-1]]],[76,[85,[[24,[51]]]]]],[114,114],[90,90],[91,91],[115,115],[147,147],[92,92],[148,148],[149,149],[116,116],[86,86],[[[84,[-1]]],[[84,[-1]]],[76,[85,[[24,[51]]]]]],[117,117],[150,150],[118,118],[[[101,[-1]]],[[101,[-1]]],[76,[85,[[24,[51]]]]]],[151,151],[152,152],[19,19],[94,94],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[126,126],14],[[127,127],14],[[128,128],14],[[129,129],14],[[93,93],14],[[131,131],14],[[132,132],14],[[133,133],14],[[134,134],14],[[135,135],14],[[136,136],14],[[137,137],14],[[138,138],14],[[139,139],14],[[140,140],14],[[141,141],14],[[20,20],14],[[23,23],14],[[69,69],14],[[70,70],14],[[142,142],14],[[5,5],14],[[87,87],14],[[10,10],14],[[88,88],14],[[144,144],14],[[145,145],14],[[146,146],14],[[90,90],14],[[91,91],14],[[147,147],14],[[92,92],14],[[[89,[-1]]],51,[[85,[[24,[51]]]]]],[[[89,[-1]]],51,[[85,[[24,[51]]]]]],[90,90],[91,91],[92,92],[[90,90],12],[[91,91],12],[[92,92],12],[[23,20],12],[[87,5],12],[[88,10],12],[[23,23],12],[[87,87],12],[[88,88],12],0,[[[98,[-1]]],51,[[85,[[24,[51]]]]]],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[97,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[123,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[124,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],0,0,0,0,[[[123,[-1]]],51,[[85,[[24,[51]]]]]],[[[124,[-1]]],51,[[85,[[24,[51]]]]]],[[[97,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[[123,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[[124,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[],93],[[],70],[[],5],[[],87],[[],10],[[],88],[[],86],[[[98,[-1]]],10,[[85,[[24,[51]]]]]],[[90,90],90],[[91,91],91],[[92,92],92],0,[[[99,[-1]]],12,[[85,[[24,[51]]]]]],[[[99,[-1]]],51,[[85,[[24,[51]]]]]],[[[96,[-1]]],93,[[85,[[24,[51]]]]]],[108,20],[[[99,[-1]]],5,[[85,[[24,[51]]]]]],[[[100,[-1]]],10,[[85,[[24,[51]]]]]],0,0,0,[[[84,[-1]]],55,[[85,[[24,[51]]]]]],[[[101,[-1]]],55,[[85,[[24,[51]]]]]],0,0,[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[97,[-1]]],55,[[85,[[24,[51]]]]]],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],[[[97,[-1]]],55,[[85,[[24,[51]]]]]],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],[[[99,[-1]]],51,[[85,[[24,[51]]]]]],[[103,[95,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[153,62],[[119,[13]]]],[[104,[120,[-1]]],[[119,[13]]],[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[105,[96,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[106,[97,[-1]],48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[107,20,20,[98,[-1]],48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[108,-1,48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[109,[99,[-1]],48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[110,[100,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[143,[121,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[111,[122,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[112,[123,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[113,[89,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[114,[98,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[115,[98,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[116,[124,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[117,[24,[51]]],[[24,[51]]]],[[118,[84,[-1]],20,20,48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[151,[101,[-1]],20,20,50,-2,48],13,[[85,[[24,[51]]]],[125,[[24,[51]]]],29],35],[[],90],[[],91],[[],92],[153,[[119,[13]]]],[[126,126],12],[[127,127],12],[[[95,[-1]],[95,[-1]]],12,[154,[85,[[24,[51]]]]]],[[103,103],12],[[128,128],12],[[62,62],12],[[[120,[-1]],[120,[-1]]],12,[154,[85,[[24,[51]]]]]],[[104,104],12],[[129,129],12],[[93,93],12],[[105,105],12],[[130,130],12],[[131,131],12],[[132,132],12],[[133,133],12],[[134,134],12],[[135,135],12],[[[97,[-1]],[97,[-1]]],12,[154,[85,[[24,[51]]]]]],[[106,106],12],[[136,136],12],[[137,137],12],[[138,138],12],[[139,139],12],[[[98,[-1]],[98,[-1]]],12,[154,[85,[[24,[51]]]]]],[[107,107],12],[[140,140],12],[[141,141],12],[[20,20],12],[[23,23],12],[[69,69],12],[[70,70],12],[[108,108],12],[[142,142],12],[[5,5],12],[[87,87],12],[[[99,[-1]],[99,[-1]]],12,[154,[85,[[24,[51]]]]]],[[109,109],12],[[10,10],12],[[88,88],12],[[[100,[-1]],[100,[-1]]],12,[154,[85,[[24,[51]]]]]],[[110,110],12],[[[121,[-1]],[121,[-1]]],12,[154,[85,[[24,[51]]]]]],[[143,143],12],[[[122,[-1]],[122,[-1]]],12,[154,[85,[[24,[51]]]]]],[[111,111],12],[[144,144],12],[[145,145],12],[[[123,[-1]],[123,[-1]]],12,[154,[85,[[24,[51]]]]]],[[112,112],12],[[146,146],12],[[[89,[-1]],[89,[-1]]],12,[154,[85,[[24,[51]]]]]],[[113,113],12],[[[102,[-1]],[102,[-1]]],12,[154,[85,[[24,[51]]]]]],[[114,114],12],[[90,90],12],[[91,91],12],[[115,115],12],[[147,147],12],[[92,92],12],[[[124,[-1]],[124,[-1]]],12,[154,[85,[[24,[51]]]]]],[[148,148],12],[[149,149],12],[[116,116],12],[[86,86],12],[[[84,[-1]],[84,[-1]]],12,[154,[85,[[24,[51]]]]]],[[117,117],12],[[150,150],12],[[118,118],12],[[[101,[-1]],[101,[-1]]],12,[154,[85,[[24,[51]]]]]],[[151,151],12],[[152,152],12],[[19,19],12],[[94,94],12],[[[96,[-1]]],129,[[85,[[24,[51]]]]]],0,[[90,-1],13,155],[[91,-1],13,155],[[92,-1],13,155],[[[97,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],20,20],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],20,20],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]],20,20],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],0,0,[[[100,[-1]]],53,[[85,[[24,[51]]]]]],[[126,17],18],[[127,17],18],[[[95,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[95,[-1]],17],18,[[85,[[24,[51]]]]]],[[103,17],18],[[103,17],18],[[128,17],18],[[153,17],18],[[62,17],18],[[[120,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[104,17],18],[[129,17],18],[[129,17],18],[[93,17],18],[[93,17],18],[[[96,[-1]],17],18,[[85,[[24,[51]]]]]],[[[96,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[105,17],18],[[130,17],18],[[131,17],18],[[131,17],18],[[132,17],18],[[132,17],18],[[133,17],18],[[134,17],18],[[134,17],18],[[135,17],18],[[[97,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[97,[-1]],17],18,[[85,[[24,[51]]]],29]],[[106,17],18],[[106,17],18],[[136,17],18],[[136,17],18],[[137,17],18],[[137,17],18],[[138,17],18],[[138,17],18],[[139,17],18],[[139,17],18],[[[98,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[107,17],18],[[140,17],18],[[140,17],18],[[141,17],18],[[141,17],18],[[20,17],18],[[20,17],18],[[23,17],18],[[23,17],18],[[69,17],18],[[69,17],18],[[70,17],18],[[70,17],18],[[108,17],18],[[142,17],18],[[5,17],18],[[5,17],18],[[87,17],18],[[87,17],18],[[[99,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[99,[-1]],17],18,[[85,[[24,[51]]]],29]],[[109,17],18],[[109,17],18],[[10,17],18],[[10,17],18],[[88,17],18],[[88,17],18],[[[100,[-1]],17],18,[[85,[[24,[51]]]],29]],[[[100,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[110,17],18],[[110,17],18],[[[121,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[143,17],18],[[[122,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[122,[-1]],17],18,[[85,[[24,[51]]]],29]],[[111,17],18],[[111,17],18],[[144,17],18],[[144,17],18],[[145,17],18],[[145,17],18],[[[123,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[123,[-1]],17],18,[[85,[[24,[51]]]],29]],[[112,17],18],[[112,17],18],[[156,17],18],[[146,17],18],[[146,17],18],[[[89,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[89,[-1]],17],18,[[85,[[24,[51]]]],29]],[[113,17],18],[[113,17],18],[[[102,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[114,17],18],[[90,17],18],[[90,17],18],[[90,17],18],[[90,17],18],[[90,17],18],[[91,17],18],[[91,17],18],[[91,17],18],[[91,17],18],[[91,17],18],[[115,17],18],[[147,17],18],[[147,17],18],[[92,17],18],[[92,17],18],[[92,17],18],[[92,17],18],[[92,17],18],[[[124,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[124,[-1]],17],18,[[85,[[24,[51]]]],29]],[[148,17],18],[[149,17],18],[[116,17],18],[[116,17],18],[[86,17],18],[[86,17],18],[[[84,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[[84,[-1]],17],18,[[85,[[24,[51]]]],29]],[[117,17],18],[[150,17],18],[[118,17],18],[[118,17],18],[[[101,[-1]],17],18,[[85,[[24,[51]]]],29]],[[[101,[-1]],17],18,[52,[85,[[24,[51]]]]]],[[151,17],18],[[151,17],18],[[152,17],18],[[152,17],18],[[19,17],18],[[19,17],18],[[94,17],18],[[94,17],18],[[[99,[-1]]],55,[[85,[[24,[51]]]]]],[[[122,[-1]]],55,[[85,[[24,[51]]]]]],0,[55,126],[-1,-1,[]],[-1,-1,[]],[55,127],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,128],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,129],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[107,130],[106,130],[-1,-1,[]],[51,131],[51,132],[-1,-1,[]],[-1,-1,[]],[51,133],[51,134],[-1,-1,[]],[51,135],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,136],[-1,-1,[]],[51,137],[-1,-1,[]],[51,138],[-1,-1,[]],[51,139],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,141],[5,20],[10,20],[-1,-1,[]],[88,23],[-1,-1,[]],[87,23],[[[13,[-1,55]]],69,[[21,[20]]]],[-1,-1,[]],[69,70],[55,70],[[[13,[-1,55]]],70,[[21,[20]]]],[-1,-1,[]],[109,108],[110,108],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,144],[-1,-1,[]],[144,145],[51,145],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,146],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[51,147],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[93,19],[-1,-1,[]],[19,94],[93,94],[51,[[7,[90]]]],[51,[[7,[91]]]],[51,[[7,[92]]]],[51,90],[51,91],[51,92],[51,90],[51,91],[51,92],[[[24,[51]]],93],[[[24,[51]]],5],[[[24,[51]]],10],[[[24,[51]]],94],[-1,90,155],[-1,91,155],[-1,92,155],[[5,5],[[119,[87]]]],[[[24,[55]]],10],[72,[[9,[93,13]]]],[72,[[9,[20,13]]]],[72,[[9,[23,13]]]],[72,[[9,[69,13]]]],[72,[[9,[5,13]]]],[72,[[9,[87,13]]]],[72,[[9,[10,13]]]],[72,[[9,[88,13]]]],[[[120,[-1]]],[[119,[72]]],[[85,[[24,[51]]]]]],[[[99,[-1]]],142,[[85,[[24,[51]]]]]],[[[120,[-1]]],[[119,[72]]],[[85,[[24,[51]]]]]],[[[95,[-1]]],51,[[85,[[24,[51]]]]]],[[[120,[-1]]],51,[[85,[[24,[51]]]]]],[[[95,[-1]]],126,[[85,[[24,[51]]]]]],[[[120,[-1]]],126,[[85,[[24,[51]]]]]],[[126,-1],13,22],[[127,-1],13,22],[[128,-1],13,22],[[129,-1],13,22],[[93,-1],13,22],[[131,-1],13,22],[[132,-1],13,22],[[133,-1],13,22],[[134,-1],13,22],[[135,-1],13,22],[[136,-1],13,22],[[137,-1],13,22],[[138,-1],13,22],[[139,-1],13,22],[[140,-1],13,22],[[141,-1],13,22],[[20,-1],13,22],[[23,-1],13,22],[[69,-1],13,22],[[70,-1],13,22],[[5,-1],13,22],[[87,-1],13,22],[[10,-1],13,22],[[88,-1],13,22],[[144,-1],13,22],[[145,-1],13,22],[[146,-1],13,22],[[90,-1],13,22],[[91,-1],13,22],[[147,-1],13,22],[[92,-1],13,22],0,[[],50],[[[97,[-1]]],50,[[85,[[24,[51]]]]]],[[[98,[-1]]],50,[[85,[[24,[51]]]]]],[108,50],[[[99,[-1]]],51,[[85,[[24,[51]]]]]],[[[100,[-1]]],50,[[85,[[24,[51]]]]]],[[[121,[-1]]],51,[[85,[[24,[51]]]]]],[143,50],[[[84,[-1]]],51,[[85,[[24,[51]]]]]],[118,50],[151,50],[[[89,[-1]]],10,[[85,[[24,[51]]]]]],[108,51],[[[99,[-1]]],51,[[85,[[24,[51]]]]]],[[[100,[-1]]],51,[[85,[[24,[51]]]]]],0,0,[[[120,[-1]]],51,[[85,[[24,[51]]]]]],[[[99,[-1]]],55,[[85,[[24,[51]]]]]],[[[122,[-1]]],53,[[85,[[24,[51]]]]]],0,[[90,90],13],[[91,91],13],[[92,92],13],[[90,90],90],[[91,91],91],[[92,92],92],[[90,90],12],[[91,91],12],[[92,92],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,20],[10,20],[[[95,[-1]]],-1,[[85,[[24,[51]]]]]],[[[120,[-1]]],-1,[[85,[[24,[51]]]]]],[[[96,[-1]]],-1,[[85,[[24,[51]]]]]],[[[97,[-1]]],-1,[[85,[[24,[51]]]]]],[[[98,[-1]]],-1,[[85,[[24,[51]]]]]],[[[99,[-1]]],-1,[[85,[[24,[51]]]]]],[[[100,[-1]]],-1,[[85,[[24,[51]]]]]],[[[121,[-1]]],-1,[[85,[[24,[51]]]]]],[[[122,[-1]]],-1,[[85,[[24,[51]]]]]],[[[123,[-1]]],-1,[[85,[[24,[51]]]]]],[[[89,[-1]]],-1,[[85,[[24,[51]]]]]],[[[102,[-1]]],-1,[[85,[[24,[51]]]]]],[[[124,[-1]]],-1,[[85,[[24,[51]]]]]],[[[84,[-1]]],-1,[[85,[[24,[51]]]]]],[[[101,[-1]]],-1,[[85,[[24,[51]]]]]],[-1,-2,[],[]],[90,12],[91,12],[92,12],[93,12],[20,12],[5,12],[19,12],[90,12],[91,12],[92,12],[118,12],[94,12],[136,12],[10,12],[5,12],[10,12],[93,12],[5,12],[10,12],[136,12],[93,12],[20,12],[5,12],[10,12],[136,12],[70,12],[93,12],[20,12],[5,12],[10,12],[19,12],[20,12],[5,12],[10,12],0,0,[150,50],[[[101,[-1]]],55,[[85,[[24,[51]]]]]],[94,50],0,0,[[[124,[-1]]],94,[[85,[[24,[51]]]]]],[[[120,[-1]]],53,[[85,[[24,[51]]]]]],[[86,86],86],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],0,0,[[[98,[-1]]],10,[[85,[[24,[51]]]]]],[[[102,[-1]]],10,[[85,[[24,[51]]]]]],0,[[86,86],86],[[[99,[-1]]],12,[[85,[[24,[51]]]]]],[[[122,[-1]]],12,[[85,[[24,[51]]]]]],0,[[[97,[-1]]],51,[[85,[[24,[51]]]]]],[[[98,[-1]]],51,[[85,[[24,[51]]]]]],[[[97,[-1]]],131,[[85,[[24,[51]]]]]],[[[98,[-1]]],136,[[85,[[24,[51]]]]]],[[[124,[-1]]],53,[[85,[[24,[51]]]]]],[[[98,[-1]]],91,[[85,[[24,[51]]]]]],[87,5],[87,87],[[[24,[51]]],153],[[20,51],23],[[20,55],69],[[20,20,141,50,51],108],[[51,51,51,51],5],[[5,51],87],[[55,55,55,55,55,55,55,55],10],[[10,51],88],[[[24,[51]]],156],[-1,[[119,[[95,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[120,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[96,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[97,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[98,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[99,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[100,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[121,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[122,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[123,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[89,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[102,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[124,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[84,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[119,[[101,[-1]]]]],[[85,[[24,[51]]]]]],[-1,[[95,[-1]]],[[85,[[24,[51]]]]]],[-1,[[120,[-1]]],[[85,[[24,[51]]]]]],[-1,[[96,[-1]]],[[85,[[24,[51]]]]]],[-1,[[97,[-1]]],[[85,[[24,[51]]]]]],[-1,[[98,[-1]]],[[85,[[24,[51]]]]]],[-1,[[99,[-1]]],[[85,[[24,[51]]]]]],[-1,[[100,[-1]]],[[85,[[24,[51]]]]]],[-1,[[121,[-1]]],[[85,[[24,[51]]]]]],[-1,[[122,[-1]]],[[85,[[24,[51]]]]]],[-1,[[123,[-1]]],[[85,[[24,[51]]]]]],[-1,[[89,[-1]]],[[85,[[24,[51]]]]]],[-1,[[102,[-1]]],[[85,[[24,[51]]]]]],[-1,[[124,[-1]]],[[85,[[24,[51]]]]]],[-1,[[84,[-1]]],[[85,[[24,[51]]]]]],[-1,[[101,[-1]]],[[85,[[24,[51]]]]]],[156,7],[108,141],[[[99,[-1]]],141,[[85,[[24,[51]]]]]],[[[100,[-1]]],141,[[85,[[24,[51]]]]]],[[[121,[-1]]],141,[[85,[[24,[51]]]]]],0,0,0,0,[90,90],[91,91],[92,92],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[98,[-1]]],55,[[85,[[24,[51]]]]]],[[[102,[-1]]],55,[[85,[[24,[51]]]]]],[[[24,[51]]],[[119,[140]]]],0,[[[95,[-1]]],127,[[85,[[24,[51]]]]]],[[[123,[-1]]],144,[[85,[[24,[51]]]]]],[[[124,[-1]]],147,[[85,[[24,[51]]]]]],[[[120,[-1]]],[[0,[25]]],[[85,[[24,[51]]]]]],[[[84,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[120,[-1]]],153,[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[[84,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]]],51,[[85,[[24,[51]]]]]],[[[98,[-1]]],53,[[85,[[24,[51]]]]]],0,[[[95,[-1]]],[[119,[103]]],[[85,[[24,[51]]]]]],[[[120,[-1]]],[[119,[104]]],[[85,[[24,[51]]]],29]],[[[96,[-1]]],[[119,[105]]],[[85,[[24,[51]]]],29]],[[[97,[-1]],48],[[119,[106]]],[[85,[[24,[51]]]],29]],[[20,20,[98,[-1]],48],[[119,[107]]],[[85,[[24,[51]]]],29]],[[[99,[-1]],48],[[119,[109]]],[[85,[[24,[51]]]],29]],[[[100,[-1]]],[[119,[110]]],[[85,[[24,[51]]]],29]],[[[121,[-1]]],[[119,[143]]],[[85,[[24,[51]]]],29]],[[[122,[-1]]],[[119,[111]]],[[85,[[24,[51]]]],29]],[[[123,[-1]]],[[119,[112]]],[[85,[[24,[51]]]],29]],[[[89,[-1]]],[[119,[113]]],[[85,[[24,[51]]]],29]],[[[98,[-1]]],[[119,[114]]],[[85,[[24,[51]]]],29]],[[[98,[-1]]],[[119,[115]]],[[85,[[24,[51]]]],29]],[[[124,[-1]]],[[119,[116]]],[[85,[[24,[51]]]],29]],[[[24,[51]]],[[119,[[13,[[24,[51]],117]]]]]],[[[84,[-1]],20,20,48],[[119,[118]]],[[85,[[24,[51]]]],29]],[[[101,[-1]],20,20,48],[[119,[151]]],[[85,[[24,[51]]]],29]],[[94,49],[[119,[19]]]],[[126,126],[[7,[14]]]],[[127,127],[[7,[14]]]],[[128,128],[[7,[14]]]],[[129,129],[[7,[14]]]],[[93,93],[[7,[14]]]],[[131,131],[[7,[14]]]],[[132,132],[[7,[14]]]],[[133,133],[[7,[14]]]],[[134,134],[[7,[14]]]],[[135,135],[[7,[14]]]],[[136,136],[[7,[14]]]],[[137,137],[[7,[14]]]],[[138,138],[[7,[14]]]],[[139,139],[[7,[14]]]],[[140,140],[[7,[14]]]],[[141,141],[[7,[14]]]],[[20,20],[[7,[14]]]],[[23,23],[[7,[14]]]],[[69,69],[[7,[14]]]],[[70,70],[[7,[14]]]],[[142,142],[[7,[14]]]],[[5,5],[[7,[14]]]],[[87,87],[[7,[14]]]],[[10,10],[[7,[14]]]],[[88,88],[[7,[14]]]],[[144,144],[[7,[14]]]],[[145,145],[[7,[14]]]],[[146,146],[[7,[14]]]],[[90,90],[[7,[14]]]],[[91,91],[[7,[14]]]],[[147,147],[[7,[14]]]],[[92,92],[[7,[14]]]],[[86,86],[[7,[14]]]],[[[96,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[98,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[99,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[100,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[121,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[102,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[84,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],[[[101,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],29]],0,[108,50],[[[100,[-1]]],55,[[85,[[24,[51]]]]]],0,0,[[[96,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[121,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]],29]],[[[102,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]]],[[24,[51]]],[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]]],53,[[85,[[24,[51]]]]]],0,0,[[[124,[-1]]],31,[[85,[[24,[51]]]]]],0,[[[124,[-1]]],10,[[85,[[24,[51]]]]]],0,[[[124,[-1]]],92,[[85,[[24,[51]]]]]],[20,[[7,[51]]]],[23,51],[87,51],[88,51],[[[124,[-1]]],51,[[85,[[24,[51]]]]]],0,0,[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[85,17,157],18],[[[95,[-1]]],51,[[85,[[24,[51]]]]]],[[[95,[-1]]],129,[[85,[[24,[51]]]]]],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[98,[-1]]],51,[[85,[[24,[51]]]]]],[[[98,[-1]]],51,[[85,[[24,[51]]]]]],[150,150],[[[98,[-1]]],31,[[85,[[24,[51]]]]]],0,0,[[[120,[-1]]],5,[[85,[[24,[51]]]]]],0,[[90,90],13],[[91,91],13],[[92,92],13],0,0,[[[98,[-1]]],31,[[85,[[24,[51]]]]]],0,[[[98,[-1]]],90,[[85,[[24,[51]]]]]],[[[98,[-1]]],31,[[85,[[24,[51]]]]]],[[[89,[-1]]],146,[[85,[[24,[51]]]]]],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[98,[-1]]],12,[[85,[[24,[51]]]]]],0,0,[[[120,[-1]]],55,[[85,[[24,[51]]]]]],0,[[[84,[-1]]],50,[[85,[[24,[51]]]]]],[118,50],[[[89,[-1]]],51,[[85,[[24,[51]]]]]],[[[84,[-1]]],[[119,[12]]],[[85,[[24,[51]]]]]],[[[84,[-1]]],[[119,[[158,[[7,[[13,[53,53]]]]]]]]],[[85,[[24,[51]]]]]],[[[84,[-1]]],86,[[85,[[24,[51]]]]]],0,0,[[[120,[-1]]],5,[[85,[[24,[51]]]]]],0,[[90,90,12],13],[[91,91,12],13],[[92,92,12],13],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],86],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],[24,[51]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[102,[-1]],51],13,[[125,[[24,[51]]]],[85,[[24,[51]]]]]],[[[97,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],93],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[123,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[96,[-1]],93],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[97,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[97,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[96,[-1]],129],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],0,[[[100,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[122,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],126],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],126],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[121,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[122,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],94],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[102,[-1]],10],13,[[125,[[24,[51]]]],[85,[[24,[51]]]]]],[[[99,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[122,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[97,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[97,[-1]],131],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],136],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],91],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],141],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],141],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[121,[-1]],141],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[102,[-1]],55],13,[[125,[[24,[51]]]],[85,[[24,[51]]]]]],0,[[[95,[-1]],127],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[123,[-1]],144],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],147],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[108,50],13],[[[100,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],31],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],92],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],129],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],31],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],0,[[[120,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],31],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],90],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],31],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],146],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[89,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],86],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],[24,[51]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],[24,[51]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[96,[-1]],93],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[101,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[98,[-1]],10],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],[24,[51]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[95,[-1]],[24,[51]]],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],53],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],12],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[124,[-1]],31],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[99,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[100,[-1]],51],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[84,[-1]],55],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[[[120,[-1]],5],13,[[85,[[24,[51]]]],[125,[[24,[51]]]]]],[10,10],[[[95,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[95,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[96,[-1]]],93,[[85,[[24,[51]]]]]],[108,20],[[[99,[-1]]],5,[[85,[[24,[51]]]]]],[[[100,[-1]]],10,[[85,[[24,[51]]]]]],0,0,0,[[[84,[-1]]],55,[[85,[[24,[51]]]]]],[[[101,[-1]]],55,[[85,[[24,[51]]]]]],0,0,[[90,90],90],[[91,91],91],[[92,92],92],[[86,86],50],[[86,50],86],[[90,90],13],[[91,91],13],[[92,92],13],0,[[90,90],90],[[91,91],91],[[92,92],92],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[98,[-1]]],10,[[85,[[24,[51]]]]]],[[[95,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[[[95,[-1]]],[[24,[51]]],[[85,[[24,[51]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[90,90],13],[[91,91],13],[[92,92],13],[[[99,[-1]]],55,[[85,[[24,[51]]]]]],[[[100,[-1]]],50,[[85,[[24,[51]]]]]],[[[100,[-1]]],51,[[85,[[24,[51]]]]]],[[[120,[-1]]],53,[[85,[[24,[51]]]]]],0,[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[90,90],90],[[91,91],91],[[92,92],92],[[[84,[-1]]],12,[[85,[[24,[51]]]]]],[[[84,[-1]]],55,[[85,[[24,[51]]]]]],[[51,51,51,51],20],[[55,55,55,55,55,55,55,55],20],[[[124,[-1]]],31,[[85,[[24,[51]]]]]],0,[[[97,[-1]]],12,[[85,[[24,[51]]]]]],[[[98,[-1]],20,20],12,[[85,[[24,[51]]]]]],[[[99,[-1]]],12,[[85,[[24,[51]]]]]],[[[84,[-1]],20,20],12,[[85,[[24,[51]]]]]],[[[101,[-1]],20,20],12,[[85,[[24,[51]]]]]],[20,140],[108,140],[[[99,[-1]]],51,[[85,[[24,[51]]]]]],[[[100,[-1]]],51,[[85,[[24,[51]]]]]],[[[84,[-1]]],55,[[85,[[24,[51]]]]]],0,0,[[10,[24,[55]]],13],[[[120,[-1]]],5,[[85,[[24,[51]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[159,[-1]],17],18,160],[[157,17],18],[[157,17],18],[-1,-1,[]],[-1,-1,[]],[[157,17],18],[-1,-2,[],[]],[-1,-2,[],[]],[[72,85],[[159,[-1]]],160],[72,157],[[85,17,157],18],[-1,[[159,[-1]]],[160,[85,[[24,[51]]]]]],[-1,33,[]],[-1,33,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,34,[]],[-1,34,[]]],"c":[],"p":[[3,"SocketSet",6],[3,"SocketHandle",6],[8,"AnySocket",380],[3,"Routes",6],[3,"Ipv4Address",820],[3,"Route",6],[4,"Option",3042],[3,"RouteTableFull",6],[4,"Result",3043],[3,"Ipv6Address",820],[3,"Interface",6],[15,"bool"],[15,"tuple"],[4,"Ordering",3044],[3,"Context",6],[3,"SocketStorage",6],[3,"Formatter",3045],[6,"Result",3045],[4,"HardwareAddress",820],[4,"IpAddress",820],[8,"Into",3046],[8,"Hasher",3047],[4,"IpCidr",820],[15,"slice"],[8,"Iterator",3048],[3,"Config",6],[3,"Instant",747],[8,"Device",146],[8,"Sized",3049],[4,"ManagedSlice",3050],[3,"Duration",747],[4,"Socket",380],[3,"String",3051],[3,"TypeId",3052],[8,"FnOnce",3053],[3,"FaultInjector",146],[3,"DeviceCapabilities",146],[3,"Tracer",146],[3,"FuzzInjector",146],[8,"Fuzzer",146],[3,"Loopback",146],[3,"PcapWriter",146],[8,"PcapSink",146],[4,"PcapLinkType",146],[4,"PcapMode",146],[3,"PacketMeta",146],[4,"Checksum",146],[3,"ChecksumCapabilities",146],[4,"Medium",146],[15,"usize"],[15,"u8"],[8,"Debug",3045],[15,"u32"],[15,"u64"],[15,"u16"],[3,"Config",397],[3,"ServerInfo",397],[3,"RetryConfig",397],[3,"Socket",397],[4,"Event",397],[3,"Waker",3054],[3,"DhcpOption",820],[3,"Socket",485],[4,"ListenError",485],[4,"ConnectError",485],[4,"SendError",485],[4,"RecvError",485],[4,"State",485],[3,"IpEndpoint",820],[3,"IpListenEndpoint",820],[6,"SocketBuffer",485],[15,"str"],[3,"Assembler",629],[3,"RingBuffer",629],[3,"PacketMetadata",629],[8,"Clone",3055],[3,"Full",629],[3,"Empty",629],[3,"PacketBuffer",629],[8,"Copy",3049],[8,"Resettable",629],[3,"Duration",3056],[15,"i64"],[3,"TcpPacket",820],[8,"AsRef",3046],[3,"TcpSeqNumber",820],[3,"Ipv4Cidr",820],[3,"Ipv6Cidr",820],[3,"Ipv6RoutingHeader",820],[3,"NdiscRouterFlags",820],[3,"NdiscNeighborFlags",820],[3,"NdiscPrefixInfoFlags",820],[3,"EthernetAddress",820],[3,"RawHardwareAddress",820],[3,"ArpPacket",820],[3,"EthernetFrame",820],[3,"Icmpv4Packet",820],[3,"Icmpv6Packet",820],[3,"Ipv4Packet",820],[3,"Ipv6Packet",820],[3,"UdpPacket",820],[3,"MldAddressRecord",820],[4,"ArpRepr",820],[3,"DhcpRepr",820],[3,"EthernetRepr",820],[4,"Icmpv4Repr",820],[4,"Icmpv6Repr",820],[4,"IpRepr",820],[3,"Ipv4Repr",820],[3,"Ipv6Repr",820],[3,"Ipv6FragmentRepr",820],[4,"Ipv6OptionRepr",820],[4,"Ipv6RoutingRepr",820],[4,"MldRepr",820],[4,"NdiscRepr",820],[4,"NdiscOptionRepr",820],[4,"TcpOption",820],[3,"TcpRepr",820],[6,"Result",820],[3,"DhcpPacket",820],[3,"Ipv6ExtHeader",820],[3,"Ipv6FragmentHeader",820],[3,"Ipv6Option",820],[3,"NdiscOption",820],[8,"AsMut",3046],[4,"ArpHardware",820],[4,"ArpOperation",820],[4,"DhcpMessageType",820],[4,"EthernetProtocol",820],[4,"IcmpRepr",820],[4,"Icmpv4Message",820],[4,"Icmpv4DstUnreachable",820],[4,"Icmpv4Redirect",820],[4,"Icmpv4TimeExceeded",820],[4,"Icmpv4ParamProblem",820],[4,"Icmpv6Message",820],[4,"Icmpv6DstUnreachable",820],[4,"Icmpv6ParamProblem",820],[4,"Icmpv6TimeExceeded",820],[4,"IpVersion",820],[4,"IpProtocol",820],[3,"Ipv4FragKey",820],[3,"Ipv6ExtHeaderRepr",820],[4,"Ipv6OptionType",820],[4,"Ipv6OptionFailureType",820],[4,"Ipv6RoutingType",820],[4,"NdiscOptionType",820],[3,"NdiscPrefixInformation",820],[3,"NdiscRedirectedHeader",820],[4,"TcpControl",820],[3,"UdpRepr",820],[3,"Error",820],[3,"DhcpOptionWriter",820],[8,"PartialEq",3044],[8,"IntoIterator",3057],[3,"Ipv6OptionsIterator",820],[3,"PrettyIndent",3015],[15,"array"],[3,"PrettyPrinter",3015],[8,"PrettyPrint",3015],[8,"RxToken",146],[8,"TxToken",146],[6,"Ipv6HopByHopRepr",820],[13,"EthernetIpv4",2937],[13,"EchoRequest",2942],[13,"EchoReply",2942],[13,"DstUnreachable",2942],[13,"TimeExceeded",2942],[13,"DstUnreachable",2954],[13,"PktTooBig",2954],[13,"TimeExceeded",2954],[13,"ParamProblem",2954],[13,"EchoRequest",2954],[13,"EchoReply",2954],[13,"Unknown",2973],[13,"Rpl",2976],[13,"Type2",2976],[13,"Query",2983],[13,"Report",2983],[13,"Unknown",2992],[13,"Redirect",2995],[13,"RouterAdvert",2995],[13,"NeighborAdvert",2995],[13,"RouterSolicit",2995],[13,"NeighborSolicit",2995],[13,"Unknown",3013]],"b":[[52,"impl-Display-for-RouteTableFull"],[53,"impl-Debug-for-RouteTableFull"],[57,"impl-Debug-for-SocketHandle"],[58,"impl-Display-for-SocketHandle"],[545,"impl-Debug-for-ListenError"],[546,"impl-Display-for-ListenError"],[547,"impl-Display-for-ConnectError"],[548,"impl-Debug-for-ConnectError"],[549,"impl-Display-for-SendError"],[550,"impl-Debug-for-SendError"],[551,"impl-Display-for-RecvError"],[552,"impl-Debug-for-RecvError"],[553,"impl-Debug-for-State"],[554,"impl-Display-for-State"],[682,"impl-Display-for-Assembler"],[683,"impl-Debug-for-Assembler"],[770,"impl-Display-for-Instant"],[771,"impl-Debug-for-Instant"],[772,"impl-Debug-for-Duration"],[773,"impl-Display-for-Duration"],[801,"impl-Sub%3CDuration%3E-for-Instant"],[802,"impl-Sub-for-Instant"],[1705,"impl-Debug-for-Packet%3CT%3E"],[1706,"impl-Display-for-Packet%3CT%3E"],[1707,"impl-Display-for-Repr"],[1708,"impl-Debug-for-Repr"],[1714,"impl-Debug-for-EtherType"],[1715,"impl-Display-for-EtherType"],[1716,"impl-Debug-for-Address"],[1717,"impl-Display-for-Address"],[1718,"impl-Display-for-Frame%3CT%3E"],[1719,"impl-Debug-for-Frame%3CT%3E"],[1722,"impl-Debug-for-Message"],[1723,"impl-Display-for-Message"],[1724,"impl-Debug-for-DstUnreachable"],[1725,"impl-Display-for-DstUnreachable"],[1727,"impl-Display-for-TimeExceeded"],[1728,"impl-Debug-for-TimeExceeded"],[1730,"impl-Debug-for-Packet%3CT%3E"],[1731,"impl-Display-for-Packet%3C%26T%3E"],[1732,"impl-Display-for-Repr%3C\'a%3E"],[1733,"impl-Debug-for-Repr%3C\'a%3E"],[1734,"impl-Display-for-Message"],[1735,"impl-Debug-for-Message"],[1736,"impl-Display-for-DstUnreachable"],[1737,"impl-Debug-for-DstUnreachable"],[1738,"impl-Display-for-ParamProblem"],[1739,"impl-Debug-for-ParamProblem"],[1740,"impl-Display-for-TimeExceeded"],[1741,"impl-Debug-for-TimeExceeded"],[1744,"impl-Display-for-Version"],[1745,"impl-Debug-for-Version"],[1746,"impl-Display-for-Protocol"],[1747,"impl-Debug-for-Protocol"],[1748,"impl-Display-for-Address"],[1749,"impl-Debug-for-Address"],[1750,"impl-Display-for-Cidr"],[1751,"impl-Debug-for-Cidr"],[1752,"impl-Display-for-Endpoint"],[1753,"impl-Debug-for-Endpoint"],[1754,"impl-Debug-for-ListenEndpoint"],[1755,"impl-Display-for-ListenEndpoint"],[1758,"impl-Debug-for-Address"],[1759,"impl-Display-for-Address"],[1760,"impl-Debug-for-Cidr"],[1761,"impl-Display-for-Cidr"],[1762,"impl-Debug-for-Packet%3CT%3E"],[1763,"impl-Display-for-Packet%3C%26T%3E"],[1764,"impl-Display-for-Repr"],[1765,"impl-Debug-for-Repr"],[1766,"impl-Debug-for-Address"],[1767,"impl-Display-for-Address"],[1768,"impl-Display-for-Cidr"],[1769,"impl-Debug-for-Cidr"],[1770,"impl-Display-for-Packet%3C%26T%3E"],[1771,"impl-Debug-for-Packet%3CT%3E"],[1772,"impl-Debug-for-Repr"],[1773,"impl-Display-for-Repr"],[1776,"impl-Debug-for-Header%3CT%3E"],[1777,"impl-Display-for-Header%3C%26T%3E"],[1778,"impl-Display-for-Repr"],[1779,"impl-Debug-for-Repr"],[1780,"impl-Display-for-Type"],[1781,"impl-Debug-for-Type"],[1782,"impl-Debug-for-FailureType"],[1783,"impl-Display-for-FailureType"],[1784,"impl-Debug-for-Ipv6Option%3CT%3E"],[1785,"impl-Display-for-Ipv6Option%3C%26T%3E"],[1786,"impl-Display-for-Repr%3C\'a%3E"],[1787,"impl-Debug-for-Repr%3C\'a%3E"],[1789,"impl-Display-for-Type"],[1790,"impl-Debug-for-Type"],[1791,"impl-Debug-for-Header%3CT%3E"],[1792,"impl-Display-for-Header%3C%26T%3E"],[1793,"impl-Display-for-Repr%3C\'a%3E"],[1794,"impl-Debug-for-Repr%3C\'a%3E"],[1797,"impl-UpperHex-for-RouterFlags"],[1798,"impl-Debug-for-RouterFlags"],[1799,"impl-Binary-for-RouterFlags"],[1800,"impl-LowerHex-for-RouterFlags"],[1801,"impl-Octal-for-RouterFlags"],[1802,"impl-UpperHex-for-NeighborFlags"],[1803,"impl-LowerHex-for-NeighborFlags"],[1804,"impl-Octal-for-NeighborFlags"],[1805,"impl-Debug-for-NeighborFlags"],[1806,"impl-Binary-for-NeighborFlags"],[1808,"impl-Debug-for-Type"],[1809,"impl-Display-for-Type"],[1810,"impl-Octal-for-PrefixInfoFlags"],[1811,"impl-Debug-for-PrefixInfoFlags"],[1812,"impl-Binary-for-PrefixInfoFlags"],[1813,"impl-LowerHex-for-PrefixInfoFlags"],[1814,"impl-UpperHex-for-PrefixInfoFlags"],[1815,"impl-Debug-for-NdiscOption%3CT%3E"],[1816,"impl-Display-for-NdiscOption%3C%26T%3E"],[1819,"impl-Display-for-Repr%3C\'a%3E"],[1820,"impl-Debug-for-Repr%3C\'a%3E"],[1821,"impl-Debug-for-SeqNumber"],[1822,"impl-Display-for-SeqNumber"],[1823,"impl-Debug-for-Packet%3CT%3E"],[1824,"impl-Display-for-Packet%3C%26T%3E"],[1827,"impl-Debug-for-Repr%3C\'a%3E"],[1828,"impl-Display-for-Repr%3C\'a%3E"],[1829,"impl-Display-for-Packet%3C%26T%3E"],[1830,"impl-Debug-for-Packet%3CT%3E"],[1831,"impl-Display-for-Repr"],[1832,"impl-Debug-for-Repr"],[1833,"impl-Display-for-Error"],[1834,"impl-Debug-for-Error"],[1835,"impl-Display-for-HardwareAddress"],[1836,"impl-Debug-for-HardwareAddress"],[1837,"impl-Debug-for-RawHardwareAddress"],[1838,"impl-Display-for-RawHardwareAddress"],[1860,"impl-From%3CRepr%3C\'a%3E%3E-for-Repr%3C\'a%3E"],[1861,"impl-From%3CRepr%3C\'a%3E%3E-for-Repr%3C\'a%3E"],[1887,"impl-From%3CAddress%3E-for-Address"],[1888,"impl-From%3CAddress%3E-for-Address"],[1890,"impl-From%3CCidr%3E-for-Cidr"],[1892,"impl-From%3CCidr%3E-for-Cidr"],[1895,"impl-From%3CEndpoint%3E-for-ListenEndpoint"],[1896,"impl-From%3Cu16%3E-for-ListenEndpoint"],[1897,"impl-From%3C(T,+u16)%3E-for-ListenEndpoint"],[1899,"impl-From%3CRepr%3E-for-Repr"],[1900,"impl-From%3CRepr%3E-for-Repr"],[1918,"impl-From%3CType%3E-for-FailureType"],[1919,"impl-From%3Cu8%3E-for-FailureType"],[1951,"impl-From%3CHardwareAddress%3E-for-RawHardwareAddress"],[1952,"impl-From%3CAddress%3E-for-RawHardwareAddress"],[2547,"impl-Sub-for-SeqNumber"],[2548,"impl-Sub%3Cusize%3E-for-SeqNumber"],[3023,"impl-Display-for-PrettyIndent"],[3024,"impl-Debug-for-PrettyIndent"]]},\
"spin":{"doc":"This crate provides spin-based versions of the primitives …","t":"GGGCGCGCGGCAAAAAAADDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLGGGGGGDDCCLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLKLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Barrier","Lazy","Mutex","MutexGuard","Once","RelaxStrategy","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","Spin","barrier","lazy","lock_api","mutex","once","relax","rwlock","Barrier","BarrierWaitResult","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","is_leader","new","try_from","try_from","try_into","try_into","type_id","type_id","wait","Lazy","as_mut_ptr","borrow","borrow_mut","default","deref","fmt","force","from","into","new","try_from","try_into","type_id","Mutex","MutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","Mutex","MutexGuard","SpinMutex","SpinMutexGuard","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","spin","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","SpinMutex","SpinMutexGuard","as_mut_ptr","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref_mut","drop","fmt","fmt","fmt","force_unlock","from","from","from","from","get_mut","into","into","into_inner","is_locked","is_locked","leak","lock","lock","new","try_from","try_from","try_into","try_into","try_lock","try_lock","type_id","type_id","unlock","INIT","Once","as_mut_ptr","borrow","borrow_mut","call_once","default","drop","fmt","from","from","from","get","get_mut","get_mut_unchecked","get_unchecked","initialized","into","into_inner_unchecked","is_completed","new","poll","try_call_once","try_from","try_into","try_into_inner","type_id","wait","Loop","RelaxStrategy","Spin","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","relax","relax","relax","try_from","try_from","try_into","try_into","type_id","type_id","RwLock","RwLockReadGuard","RwLockUpgradableGuard","RwLockWriteGuard","as_mut_ptr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradeable","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_write_unlock","from","from","from","from","from","from","get_mut","into","into","into","into","into_inner","is_locked","leak","leak","leak","lock_exclusive","lock_shared","lock_upgradable","new","read","reader_count","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_lock_exclusive","try_lock_shared","try_lock_upgradable","try_read","try_upgrade","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","unlock_exclusive","unlock_shared","unlock_upgradable","upgrade","upgrade","upgradeable_read","write","writer_count"],"q":[[0,"spin"],[18,"spin::barrier"],[37,"spin::lazy"],[51,"spin::lock_api"],[57,"spin::mutex"],[96,"spin::mutex::spin"],[134,"spin::once"],[162,"spin::relax"],[182,"spin::rwlock"],[266,"core::result"],[267,"core::any"],[268,"core::default"],[269,"core::ops::function"],[270,"core::fmt"],[271,"core::fmt"],[272,"core::fmt"]],"d":["A primitive that synchronizes the execution of multiple …","A value which is initialized on the first access. See …","A primitive that synchronizes the execution of multiple …","","A primitive that provides lazy one-time initialization. …","","A lock that provides data access to either one writer or …","","A guard that provides immutable data access but can be …","A guard that provides mutable data access. See …","","Synchronization primitive allowing multiple threads to …","Synchronization primitives for lazy evaluation.","Spin synchronisation primitives, but compatible with …","Locks that have the same behaviour as a mutex.","Synchronization primitives for one-time evaluation.","Strategies that determine the behaviour of locks when …","A lock that provides data access to either one writer or …","A primitive that synchronizes the execution of multiple …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all threads …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether this thread from <code>wait</code> is the “leader …","Creates a new barrier that can block a given number of …","","","","","","","Blocks the current thread until all threads have …","A value which is initialized on the first access.","Retrieves a mutable pointer to the inner data.","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new lazy value with the given initializing …","","","","A lock that provides mutually exclusive data access …","A guard that provides mutable data access (compatible with …","A lock that provides data access to either one writer or …","A guard that provides immutable data access (compatible …","A guard that provides immutable data access but can be …","A guard that provides mutable data access (compatible with …","A spin-based lock providing mutually exclusive access to …","A generic guard that will protect some data access and …","","","","","","","","","","","","","Force unlock this <code>Mutex</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Mutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>Mutex</code> and returns a guard that permits access to …","Creates a new <code>Mutex</code> wrapping the supplied data.","A naïve spinning mutex.","","","","","","Try to lock this <code>Mutex</code>, returning a lock guard if …","","","","A spin lock providing mutually exclusive access to data.","A guard that provides mutable data access.","Returns a mutable pointer to the underlying data.","","","","","","","","The dropping of the MutexGuard will release the lock it …","","","","Force unlock this <code>SpinMutex</code>.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>SpinMutex</code> and unwraps the underlying data.","","Returns <code>true</code> if the lock is currently held.","Leak the lock guard, yielding a mutable reference to the …","","Locks the <code>SpinMutex</code> and returns a guard that permits …","Creates a new <code>SpinMutex</code> wrapping the supplied data.","","","","","Try to lock this <code>SpinMutex</code>, returning a lock guard if …","","","","","Initialization constant of <code>Once</code>.","A primitive that provides lazy one-time initialization.","Retrieve a pointer to the inner data.","","","Performs an initialization routine once and only once. The …","","","","","Returns the argument unchanged.","","Returns a reference to the inner value if the <code>Once</code> has …","Returns a mutable reference to the inner value if the <code>Once</code> …","Returns a mutable reference to the inner value","Returns a reference to the inner value on the unchecked …","Creates a new initialized <code>Once</code>.","Calls <code>U::from(self)</code>.","Returns a the inner value if the <code>Once</code> has been initialized.","Checks whether the value has been initialized.","Creates a new <code>Once</code>.","Like <code>Once::get</code>, but will spin if the <code>Once</code> is in the …","This method is similar to <code>call_once</code>, but allows the given …","","","Returns a the inner value if the <code>Once</code> has been initialized.","","Spins until the <code>Once</code> contains a value.","A strategy that rapidly spins, without telling the CPU to …","A trait implemented by spinning relax strategies.","A strategy that rapidly spins while informing the CPU that …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform the relaxing operation during a period of …","","","","","","","","","A lock that provides data access to either one writer or …","A guard that provides immutable data access.","A guard that provides immutable data access but can be …","A guard that provides mutable data access.","Returns a mutable pointer to the underying data.","","","","","","","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","Downgrades the writable lock guard to an upgradable, …","","","","","","","","","","","Force decrement the reader count.","Force unlock exclusive write access.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>RwLock</code>, returning the underlying data.","","Leak the lock guard, yielding a reference to the …","Leak the lock guard, yielding a mutable reference to the …","Leak the lock guard, yielding a reference to the …","","","","Creates a new spinlock wrapping the supplied data.","Locks this rwlock with shared read access, blocking the …","Return the number of readers that currently hold the lock …","","","","","","","","","","","","Attempt to acquire this lock with shared read access.","","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Lock this rwlock with exclusive write access, blocking the …","Return the number of writers that currently hold the lock."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,4,1,4,1,4,1,1,4,4,1,4,1,4,1,4,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,14,16,14,16,14,16,16,14,16,16,14,14,14,14,16,14,14,16,14,14,14,16,14,14,14,0,14,16,14,16,14,14,14,16,14,0,0,21,21,22,21,22,21,22,22,22,21,22,22,21,21,21,21,22,21,21,22,21,21,21,22,21,21,21,21,22,21,22,21,21,21,22,21,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,28,29,28,29,28,29,28,29,7,28,29,28,29,28,29,28,29,0,0,0,0,24,24,25,26,27,24,25,26,27,24,25,26,27,26,24,26,27,26,25,26,27,24,25,25,26,26,27,27,24,24,24,24,24,25,26,27,24,24,25,26,27,24,24,25,26,27,24,24,24,24,24,24,24,25,26,27,24,25,26,27,24,24,24,24,24,27,24,24,24,25,26,27,24,24,24,24,27,24,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[3,[[4,[-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],[[[4,[-1]]],1,7],0,[[[8,[-1,-2,-3]]],[],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[8,[-1,-2]]],9,[]],[[[8,[-1,-2,-3]]],-1,[],10,7],[[[8,[-1,-2,-3]],11],12,13,[],[]],[[[8,[-1,-2,-3]]],-1,[],10,7],[-1,-1,[]],[-1,-2,[],[]],[-1,[[8,[-2,-1,-3]]],[],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[14,[-1,-2]]],[15,9],[]],[[[16,[-1]]],-1,15],[[[16,[-1]]],-1,15],[[[14,[-1,-2]],11],12,[15,13],[]],[[[16,[-1]],11],12,[15,13]],[[[16,[-1]],11],12,[15,17]],[[[14,[-1,-2]]],18,15,[]],[-1,[[14,[-1,-2]]],[],[]],[19,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[14,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1,-2]]],-1,[],[]],[[[14,[18,-1]]],2,7],[[[14,[-1,-2]]],2,15,[]],[[[16,[-1]]],-1,15],[[[14,[18,-1]]],18,7],[[[14,[-1,-2]]],[[16,[-1]]],15,7],[-1,[[14,[-1,-2]]],[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[14,[18,-1]]],2,7],[[[14,[-1,-2]]],[[20,[[16,[-1]]]]],15,[]],[-1,6,[]],[-1,6,[]],[[[14,[18,-1]]],18,7],0,0,[[[21,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[21,[-1,-2]]],[15,9],[]],[[[22,[-1]]],-1,15],[[[22,[-1]]],-1,15],[[[22,[-1]]],18,15],[[[21,[-1,-2]],11],12,[15,13],[]],[[[22,[-1]],11],12,[15,13]],[[[22,[-1]],11],12,[15,17]],[[[21,[-1,-2]]],18,15,[]],[-1,-1,[]],[-1,[[21,[-1,-2]]],[],[]],[19,-1,[]],[-1,-1,[]],[[[21,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,-2]]],-1,[],[]],[[[21,[18,-1]]],2,7],[[[21,[-1,-2]]],2,15,[]],[[[22,[-1]]],-1,15],[[[21,[18,-1]]],18,7],[[[21,[-1,-2]]],[[22,[-1]]],15,7],[-1,[[21,[-1,-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[21,[-1,-2]]],[[20,[[22,[-1]]]]],15,[]],[[[21,[18,-1]]],2,7],[-1,6,[]],[-1,6,[]],[[[21,[18,-1]]],18,7],0,0,[[[23,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1,-2]],-3],-1,[],7,10],[[],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],18,[],[]],[[[23,[-1,-2]],11],12,13,[]],[-1,[[23,[-1,-2]]],[],[]],[-1,-1,[]],[19,-1,[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[[[23,[-1,-2]]],-1,[],[]],[[[23,[-1,-2]]],-1,[],[]],[-1,[[23,[-1,-2]]],[],[]],[-1,-2,[],[]],[[[23,[-1,-2]]],-1,[],[]],[[[23,[-1,-2]]],2,[],[]],[[],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],7],[[[23,[-1,-2]],-3],[[5,[-1,-4]]],[],7,10,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[23,[-1,-2]]],[[20,[-1]]],[],[]],[-1,6,[]],[[[23,[-1,-2]]],-1,[],7],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],18],[[],18],[[],18],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[-1,6,[]],0,0,0,0,[[[24,[-1,-2]]],[],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[24,[-1,-2]]],[15,9],[]],[[[25,[-1]]],-1,15],[[[26,[-1,-2]]],-1,15,[]],[[[27,[-1,-2]]],-1,15,[]],[[[26,[-1,-2]]],-1,15,[]],[[[24,[18,-1]]],18,7],[[[26,[-1,-2]]],[[25,[-1]]],15,[]],[[[27,[-1,-2]]],[[25,[-1]]],15,[]],[[[26,[-1,-2]]],[[27,[-1,-2]]],15,[]],[[[25,[-1]]],18,15],[[[26,[-1,-2]]],18,15,[]],[[[27,[-1,-2]]],18,15,[]],[[[24,[-1,-2]],11],12,[15,13],[]],[[[25,[-1]],11],12,[15,13]],[[[25,[-1]],11],12,[15,17]],[[[26,[-1,-2]],11],12,[15,17],[]],[[[26,[-1,-2]],11],12,[15,13],[]],[[[27,[-1,-2]],11],12,[15,17],[]],[[[27,[-1,-2]],11],12,[15,13],[]],[[[24,[-1,-2]]],18,15,[]],[[[24,[-1,-2]]],18,15,[]],[-1,-1,[]],[-1,[[24,[-1,-2]]],[],[]],[19,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[24,[-1,-2]]],-1,15,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,-2]]],-1,[],[]],[[[24,[18,-1]]],2,7],[[[25,[-1]]],-1,15],[[[26,[-1,-2]]],-1,15,[]],[[[27,[-1,-2]]],-1,15,[]],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[-1,[[24,[-1,-2]]],[],[]],[[[24,[-1,-2]]],[[25,[-1]]],15,7],[[[24,[-1,-2]]],3,15,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[24,[18,-1]]],2,7],[[[24,[18,-1]]],2,7],[[[24,[18,-1]]],2,7],[[[24,[-1,-2]]],[[20,[[25,[-1]]]]],15,[]],[[[24,[18,-1]]],2,7],[[[27,[-1,-2]]],[[5,[[26,[-1,-2]],[27,[-1,-2]]]]],15,[]],[[[24,[-1,-2]]],[[20,[[27,[-1,-2]]]]],15,[]],[[[24,[-1,-2]]],[[20,[[26,[-1,-2]]]]],15,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[24,[18,-1]]],18,7],[[[27,[-1,-2]]],[[26,[-1,-2]]],15,7],[[[24,[-1,-2]]],[[27,[-1,-2]]],15,7],[[[24,[-1,-2]]],[[26,[-1,-2]]],15,7],[[[24,[-1,-2]]],3,15,[]]],"c":[],"p":[[3,"BarrierWaitResult",18],[15,"bool"],[15,"usize"],[3,"Barrier",18],[4,"Result",266],[3,"TypeId",267],[8,"RelaxStrategy",162],[3,"Lazy",37],[8,"Default",268],[8,"FnOnce",269],[3,"Formatter",270],[6,"Result",270],[8,"Debug",270],[3,"Mutex",57],[8,"Sized",271],[3,"MutexGuard",57],[8,"Display",270],[15,"tuple"],[15,"never"],[4,"Option",272],[3,"SpinMutex",96],[3,"SpinMutexGuard",96],[3,"Once",134],[3,"RwLock",182],[3,"RwLockReadGuard",182],[3,"RwLockWriteGuard",182],[3,"RwLockUpgradableGuard",182],[3,"Spin",162],[3,"Loop",162]],"b":[[69,"impl-Debug-for-MutexGuard%3C\'a,+T%3E"],[70,"impl-Display-for-MutexGuard%3C\'a,+T%3E"],[80,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[81,"impl-Mutex%3CT,+R%3E"],[83,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[84,"impl-Mutex%3CT,+R%3E"],[91,"impl-RawMutex-for-Mutex%3C(),+R%3E"],[92,"impl-Mutex%3CT,+R%3E"],[108,"impl-Debug-for-SpinMutexGuard%3C\'a,+T%3E"],[109,"impl-Display-for-SpinMutexGuard%3C\'a,+T%3E"],[119,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[120,"impl-SpinMutex%3CT,+R%3E"],[122,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[123,"impl-SpinMutex%3CT,+R%3E"],[129,"impl-SpinMutex%3CT,+R%3E"],[130,"impl-RawMutex-for-SpinMutex%3C(),+R%3E"],[208,"impl-Debug-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[209,"impl-Display-for-RwLockReadGuard%3C\'rwlock,+T%3E"],[210,"impl-Display-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[211,"impl-Debug-for-RwLockWriteGuard%3C\'rwlock,+T,+R%3E"],[212,"impl-Display-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"],[213,"impl-Debug-for-RwLockUpgradableGuard%3C\'rwlock,+T,+R%3E"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref, …","t":"II","n":["CloneStableDeref","StableDeref"],"q":[[0,"stable_deref_trait"]],"d":["An unsafe marker trait for types where clones deref to the …","An unsafe marker trait for types that deref to a stable …"],"i":[0,0],"f":[0,0],"c":[],"p":[],"b":[]},\
"take_static":{"doc":"This crate provides the <code>take_static</code> macro to create …","t":"DLLLLLLLOLLL","n":["TakeStatic","borrow","borrow_mut","fmt","from","into","is_taken","take","take_static","try_from","try_into","type_id"],"q":[[0,"take_static"],[12,"core::fmt"],[13,"core::fmt"],[14,"core::option"],[15,"core::result"],[16,"core::any"]],"d":["A synchronization primitive which can be accessed only …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the mutable reference has been taken.","Takes the mutable reference to the wrapped value.","Declare a new static that provides mutable access—but …","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2],3,4],[-1,-1,[]],[-1,-2,[],[]],[[[1,[-1]]],5,4],[[[1,[-1]]],[[6,[-1]]],4],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]]],"c":[],"p":[[3,"TakeStatic",0],[3,"Formatter",12],[6,"Result",12],[8,"Sized",13],[15,"bool"],[4,"Option",14],[4,"Result",15],[3,"TypeId",16]],"b":[]},\
"talc":{"doc":"Talc","t":"DDDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AssumeUnlockable","ClaimOnOom","ErrOnOom","OomHandler","Span","Talc","Talck","TalckRef","above","alloc","allocate","allocator","below","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","claim","clone","clone","contains","contains_span","dealloc","deallocate","default","empty","eq","extend","extend","fit_over","fit_within","fmt","fmt","fmt","fmt","fmt","free","from","from","from","from","from","from","from","from","from","from","from","from","from_array","from_base_size","from_slice","get_allocated_span","get_base_acme","grow","grow","grow_zeroed","handle_oom","handle_oom","handle_oom","into","into","into","into","into","into","into","is_empty","is_sized","lock","lock","lock_assume_single_threaded","malloc","new","new","new","oom_handler","overlaps","realloc","shrink","shrink","size","talc","to_ptr_range","to_slice","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","word_align_inward","word_align_outward"],"q":[[0,"talc"],[122,"core::alloc::layout"],[123,"lock_api::mutex"],[124,"core::ptr::non_null"],[125,"core::alloc"],[126,"core::result"],[127,"core::clone"],[128,"core::fmt"],[129,"core::fmt"],[130,"core::option"],[131,"lock_api::mutex"]],"d":["A dummy RawMutex implementation to skip synchronization on …","An out-of-memory handler that attempts to claim the memory …","Doesn’t handle out-of-memory conditions, immediate …","","Represents an interval of memory <code>[base, acme)</code>","The Talc Allocator!","Talc lock: wrapper struct containing a mutex-locked <code>Talc</code>.","A reference to a <code>Talck</code> that implements the <code>Allocator</code> trait.","Raises <code>base</code> if <code>base</code> is smaller than <code>min</code>.","","","Get a reference that implements the <code>Allocator</code> API.","Lowers <code>acme</code> if <code>acme</code> is greater than <code>max</code>.","","","","","","","","","","","","","","","Attempt to initialize a new heap for the allocator.","","","Returns whether <code>self</code> contains <code>addr</code>.","Returns whether <code>self</code> contains <code>other</code>.","","","","Create an empty span.","","Increase the extent of a heap. The new extent of the heap …","Lower <code>base</code> by <code>low</code> and raise <code>acme</code> by <code>high</code>.","Returns a span that contains <code>other</code> by extending <code>self</code>.","Returns a span that <code>other</code> contains by raising <code>base</code> or …","","","","","","Free previously allocated/reallocated memory.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Creates a <code>Span</code> given a <code>base</code> and a <code>size</code>.","","Returns the minimum <code>Span</code> containing this heap’s …","If <code>self</code> isn’t empty, returns <code>(base, acme)</code>","Grow a previously allocated/reallocated region of memory …","","","Given the allocator and the <code>layout</code> of the allocation that …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether <code>base &gt;= acme</code>.","Returns whether <code>base &lt; acme</code>.","","Wrap in <code>Talck</code>, a mutex-locked wrapper struct using <code>lock_api</code>…","Wrap in a <code>Talck</code> without a synchronizing lock. ","Allocate a contiguous region of memory according to <code>layout</code>…","Safety","Returns an uninitialized <code>Talc</code>.","Create a new span.","The user-specified OOM handler. ","Returns whether some of <code>self</code> overlaps with <code>other</code>.","","Shrink a previously allocated/reallocated region of memory …","","Returns the size of the span, else zero if <code>base &gt;= span</code>.","Lock the mutex and access the inner <code>Talc</code>.","Returns <code>None</code> if <code>self</code> is empty.","Returns <code>None</code> if <code>self</code> is empty.","Reduce the extent of a heap. The new extent must encompass …","Raise <code>base</code> by <code>low</code> and lower <code>acme</code> by <code>high</code>.","","","","","","","","","","","","","","","","","","","","","","","","Aligns <code>base</code> upward and <code>acme</code> downward by <code>align_of::&lt;usize&gt;()</code>…","Aligns <code>base</code> downward and <code>acme</code> upward by <code>align_of::&lt;usize&gt;()</code>…"],"i":[0,0,0,0,0,0,0,0,1,3,7,3,1,25,23,24,12,3,7,1,25,23,24,12,3,7,1,12,7,1,1,1,3,7,1,1,1,12,1,1,1,12,3,7,1,1,12,25,23,24,12,3,7,1,1,1,1,1,1,1,1,1,12,1,12,7,7,6,23,24,25,23,24,12,3,7,1,1,1,25,12,12,12,24,12,1,12,1,3,12,7,1,3,1,1,12,1,25,23,24,12,3,7,1,25,23,24,12,3,7,1,25,25,23,24,12,3,7,1,25,1,1],"f":[0,0,0,0,0,0,0,0,[[1,2],1],[[[3,[-1,-2]],4],2,5,6],[[[7,[-1,-2]],4],[[11,[[9,[[8,[2]]]],10]]],5,6],[[[3,[-1,-2]]],[[7,[-1,-2]]],5,6],[[1,2],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[12,[-1]],1],[[11,[1,13]]],6],[[[7,[-1,-2]]],[[7,[-1,-2]]],[14,5],[14,6]],[1,1],[[1,2],15],[[1,1],15],[[[3,[-1,-2]],2,4],13,5,6],[[[7,[-1,-2]],[9,[2]],4],13,5,6],[[],1],[[],1],[[1,1],15],[[[12,[-1]],1,1],1,6],[[1,16,16],1],[[1,1],1],[[1,1],1],[[[12,[-1]],17],18,6],[[[3,[-1,-2]],17],18,[19,5],[19,6]],[[[7,[-1,-2]],17],18,[19,5],[19,6]],[[1,17],18],[[1,17],18],[[[12,[-1]],[9,[2]],4],13,6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[8,[-1]]],1,[]],[8,1],[-1,-1,[]],[20,1],[21,1],[[[20,[-1]]],1,[]],[20,1],[[2,16],1],[8,1],[[[12,[-1]],1],1,6],[1,[[22,[[13,[2,2]]]]]],[[[12,[-1]],[9,[2]],4,16],[[11,[[9,[2]],13]]],6],[[[7,[-1,-2]],[9,[2]],4,4],[[11,[[9,[[8,[2]]]],10]]],5,6],[[[7,[-1,-2]],[9,[2]],4,4],[[11,[[9,[[8,[2]]]],10]]],5,6],[[[12,[-1]],4],[[11,[13,13]]],[]],[[[12,[23]],4],[[11,[13,13]]]],[[[12,[24]],4],[[11,[13,13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,15],[1,15],[25,13],[[[12,[-1]]],[[3,[-2,-1]]],6,5],[[[12,[-1]]],[[3,[25,-1]]],6],[[[12,[-1]],4],[[11,[[9,[2]],13]]],6],[1,24],[-1,[[12,[-1]]],6],[[2,2],1],0,[[1,1],15],[[[3,[-1,-2]],2,4,16],2,5,6],[[[12,[-1]],[9,[2]],4,16],13,6],[[[7,[-1,-2]],[9,[2]],4,4],[[11,[[9,[[8,[2]]]],10]]],5,6],[1,16],[[[3,[-1,-2]]],[[26,[-1,[12,[-2]]]]],5,6],[1,[[22,[[21,[2]]]]]],[1,[[22,[8]]]],[[[12,[-1]],1,1],1,6],[[1,16,16],1],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[25,15],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[25,13],[1,1],[1,1]],"c":[],"p":[[3,"Span",0],[15,"u8"],[3,"Talck",0],[3,"Layout",122],[8,"RawMutex",123],[8,"OomHandler",0],[3,"TalckRef",0],[15,"slice"],[3,"NonNull",124],[3,"AllocError",125],[4,"Result",126],[3,"Talc",0],[15,"tuple"],[8,"Clone",127],[15,"bool"],[15,"usize"],[3,"Formatter",128],[6,"Result",128],[8,"Debug",128],[15,"array"],[3,"Range",129],[4,"Option",130],[3,"ErrOnOom",0],[3,"ClaimOnOom",0],[3,"AssumeUnlockable",0],[3,"MutexGuard",123],[3,"TypeId",131]],"b":[[44,"impl-Debug-for-Span"],[45,"impl-Display-for-Span"],[53,"impl-From%3C%26mut+%5BT%5D%3E-for-Span"],[54,"impl-From%3C*mut+%5BT%5D%3E-for-Span"],[56,"impl-From%3C*mut+%5BT;+N%5D%3E-for-Span"],[57,"impl-From%3CRange%3C*mut+T%3E%3E-for-Span"],[58,"impl-From%3C%26mut+%5BT;+N%5D%3E-for-Span"]]},\
"time":{"doc":"Feature flags","t":"NNSDNDNCNNSNNNSSSSSSSSSSNNNESNNDNDGSNNNNDNSSDSNESLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDNDNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKKKKKKKKKKKKKKKFFFF","n":["April","August","DAY","Date","December","Duration","Err","Error","February","Friday","HOUR","January","July","June","MAX","MAX","MAX","MICROSECOND","MIDNIGHT","MILLISECOND","MIN","MIN","MIN","MINUTE","March","May","Monday","Month","NANOSECOND","November","October","OffsetDateTime","Ok","PrimitiveDateTime","Result","SECOND","Saturday","September","Sunday","Thursday","Time","Tuesday","UNIX_EPOCH","UTC","UtcOffset","WEEK","Wednesday","Weekday","ZERO","abs","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_hms","as_hms","as_hms","as_hms_micro","as_hms_micro","as_hms_milli","as_hms_milli","as_hms_nano","as_hms_nano","as_seconds_f32","as_seconds_f64","assume_offset","assume_utc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_add","checked_add","checked_add_std","checked_div","checked_mul","checked_seconds_f32","checked_seconds_f64","checked_sub","checked_sub","checked_sub","checked_sub","checked_sub_std","checked_to_offset","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","convert","date","date","day","day","day","days","default","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","ext","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","fmt_with_metadata","from","from","from","from","from","from","from","from","from_calendar_date","from_hms","from_hms","from_hms_micro","from_hms_milli","from_hms_nano","from_iso_week_date","from_julian_day","from_ordinal_date","from_str","from_str","from_unix_timestamp","from_unix_timestamp_nanos","from_whole_seconds","hash","hash","hash","hash","hash","hash","hash","hash","hour","hour","hour","hours","into","into","into","into","into","into","into","into","is_negative","is_negative","is_positive","is_positive","is_utc","is_zero","iso_week","iso_week","iso_week","metadata","metadata","metadata","metadata","metadata","metadata","metadata","microsecond","microsecond","microsecond","microseconds","midnight","millisecond","millisecond","millisecond","milliseconds","minute","minute","minute","minutes","minutes_past_hour","monday_based_week","monday_based_week","monday_based_week","month","month","month","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","nanosecond","nanosecond","nanosecond","nanoseconds","neg","neg","new","new","next","next","next_day","next_occurrence","nth_next","nth_next","nth_next_occurrence","nth_prev","nth_prev","nth_prev_occurrence","number_days_from_monday","number_days_from_sunday","number_from_monday","number_from_sunday","offset","ordinal","ordinal","ordinal","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prev_occurrence","previous","previous","previous_day","replace_date","replace_date","replace_date_time","replace_day","replace_day","replace_day","replace_hour","replace_hour","replace_hour","replace_microsecond","replace_microsecond","replace_microsecond","replace_millisecond","replace_millisecond","replace_millisecond","replace_minute","replace_minute","replace_minute","replace_month","replace_month","replace_month","replace_nanosecond","replace_nanosecond","replace_nanosecond","replace_offset","replace_second","replace_second","replace_second","replace_time","replace_time","replace_year","replace_year","replace_year","saturating_add","saturating_add","saturating_add","saturating_add","saturating_mul","saturating_seconds_f32","saturating_seconds_f64","saturating_sub","saturating_sub","saturating_sub","saturating_sub","second","second","second","seconds","seconds_f32","seconds_f64","seconds_past_minute","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subsec_microseconds","subsec_milliseconds","subsec_nanoseconds","sum","sum","sunday_based_week","sunday_based_week","sunday_based_week","time","time","to_calendar_date","to_calendar_date","to_calendar_date","to_hms","to_hms_micro","to_hms_milli","to_hms_nano","to_iso_week_date","to_iso_week_date","to_iso_week_date","to_julian_day","to_julian_day","to_julian_day","to_offset","to_ordinal_date","to_ordinal_date","to_ordinal_date","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unix_timestamp","unix_timestamp_nanos","unsigned_abs","util","weekday","weekday","weekday","weeks","whole_days","whole_hours","whole_hours","whole_microseconds","whole_milliseconds","whole_minutes","whole_minutes","whole_nanoseconds","whole_seconds","whole_seconds","whole_weeks","with_hms","with_hms_micro","with_hms_milli","with_hms_nano","with_time","year","year","year","Day","Hour","Microsecond","Millisecond","Minute","Nanosecond","Second","Week","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","per","per","per","per","per","per","per","per","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ComponentRange","ComponentRange","ConversionRange","ConversionRange","DifferentVariant","DifferentVariant","Error","InvalidVariant","InvalidVariant","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","is_conditional","name","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","NumericalDuration","NumericalStdDuration","days","hours","microseconds","milliseconds","minutes","nanoseconds","seconds","std_days","std_hours","std_microseconds","std_milliseconds","std_minutes","std_nanoseconds","std_seconds","std_weeks","weeks","days_in_year","days_in_year_month","is_leap_year","weeks_in_year"],"q":[[0,"time"],[474,"time::convert"],[562,"time::error"],[635,"time::ext"],[653,"time::util"],[657,"core::time"],[658,"core::option"],[659,"core::cmp"],[660,"core::fmt"],[661,"core::fmt"],[662,"powerfmt::smart_display"],[663,"core::hash"],[664,"powerfmt::smart_display"],[665,"core::any"],[666,"core::marker"]],"d":["","","Equivalent to <code>1.days()</code>.","Date in the proleptic Gregorian calendar.","","A span of time with nanosecond precision.","Contains the error value","","","","Equivalent to <code>1.hours()</code>.","","","","The maximum valid <code>Date</code>.","The maximum possible duration. Adding any positive …","The largest value that can be represented by …","Equivalent to <code>1.microseconds()</code>.","Create a <code>Time</code> that is exactly midnight.","Equivalent to <code>1.milliseconds()</code>.","The minimum valid <code>Date</code>.","The minimum possible duration. Adding any negative …","The smallest value that can be represented by …","Equivalent to <code>1.minutes()</code>.","","","","Months of the year.","Equivalent to <code>1.nanoseconds()</code>.","","","A <code>PrimitiveDateTime</code> with a <code>UtcOffset</code>.","Contains the success value","Combined date and time.","An alias for [<code>std::result::Result</code>] with a generic error …","Equivalent to <code>1.seconds()</code>.","","","","","The clock time within a given date. Nanosecond precision.","","Midnight, 1 January, 1970 (UTC).","A <code>UtcOffset</code> that is UTC.","An offset from UTC.","Equivalent to <code>1.weeks()</code>.","","Days of the week.","Equivalent to <code>0.seconds()</code>.","Get the absolute value of the duration.","","","","","","","","","Add the sub-day time of the <code>Duration</code> to the <code>Time</code>. Wraps on …","Add the sub-day time of the [<code>std::time::Duration</code>] to the …","","","","","","","","","","","Get the clock hour, minute, and second.","Get the clock hour, minute, and second.","Obtain the UTC offset as its hours, minutes, and seconds. …","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and nanosecond.","Get the clock hour, minute, second, and nanosecond.","Get the number of fractional seconds in the duration.","Get the number of fractional seconds in the duration.","Assuming that the existing <code>PrimitiveDateTime</code> represents a …","Assuming that the existing <code>PrimitiveDateTime</code> represents a …","","","","","","","","","","","","","","","","","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self + rhs</code>, returning <code>None</code> if an overflow …","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self + duration</code>, returning <code>None</code> if an overflow …","Computes <code>self / rhs</code>, returning <code>None</code> if <code>rhs == 0</code> or if the …","Computes <code>self * rhs</code>, returning <code>None</code> if an overflow …","Creates a new <code>Duration</code> from the specified number of seconds","Creates a new <code>Duration</code> from the specified number of seconds","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Computes <code>self - rhs</code>, returning <code>None</code> if an overflow …","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Computes <code>self - duration</code>, returning <code>None</code> if an overflow …","Convert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …","","","","","","","","","","","","","","","Conversion between units of time.","Get the <code>Date</code> in the stored offset.","Get the <code>Date</code> component of the <code>PrimitiveDateTime</code>.","Get the day of the month.","Get the day of the date in the stored offset.","Get the day of the date.","Create a new <code>Duration</code> with the given number of days. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Various error types returned by methods in the time crate.","Extension traits.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to create a <code>Date</code> from the year, month, and day.","Attempt to create a <code>Time</code> from the hour, minute, and second.","Create a <code>UtcOffset</code> representing an offset by the number of …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Time</code> from the hour, minute, second, …","Attempt to create a <code>Date</code> from the ISO year, week, and …","Create a <code>Date</code> from the Julian day.","Attempt to create a <code>Date</code> from the year and ordinal day …","","","Create an <code>OffsetDateTime</code> from the provided Unix timestamp. …","Construct an <code>OffsetDateTime</code> from the provided Unix …","Create a <code>UtcOffset</code> representing an offset by the number of …","","","","","","","","","Get the clock hour in the stored offset.","Get the clock hour.","Get the clock hour.","Create a new <code>Duration</code> with the given number of hours. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check if a duration is negative.","Check if the offset is negative, or west of UTC.","Check if a duration is positive.","Check if the offset is positive, or east of UTC.","Check if the offset is exactly UTC.","Check if a duration is exactly zero.","Get the ISO week number.","Get the ISO week number of the date in the stored offset.","Get the ISO week number.","","","","","","","","Get the microseconds within the second in the stored …","Get the microseconds within the second.","Get the microseconds within the second.","Create a new <code>Duration</code> with the given number of …","Create a <code>PrimitiveDateTime</code> using the existing date. The …","Get the milliseconds within the second in the stored …","Get the milliseconds within the second.","Get the milliseconds within the second.","Create a new <code>Duration</code> with the given number of …","Get the minute within the hour in the stored offset.","Get the minute within the hour.","Get the minute within the hour.","Create a new <code>Duration</code> with the given number of minutes. …","Obtain the number of minutes past the hour the offset is …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the month.","Get the month of the date in the stored offset.","Get the month of the date.","","","","","","","","","","","","","","","","","Get the nanoseconds within the second in the stored offset.","Get the nanoseconds within the second.","Get the nanoseconds within the second.","Create a new <code>Duration</code> with the given number of nanoseconds.","","","Create a new <code>Duration</code> with the provided seconds and …","Create a new <code>PrimitiveDateTime</code> from the provided <code>Date</code> and …","Get the next month.","Get the next weekday.","Get the next calendar date.","Calculates the first occurrence of a weekday that is …","Get n-th next month.","Get n-th next day.","Calculates the <code>n</code>th occurrence of a weekday that is …","Get n-th previous month.","Get n-th previous day.","Calculates the <code>n</code>th occurrence of a weekday that is …","Get the zero-indexed number of days from Monday.","Get the zero-indexed number of days from Sunday.","Get the one-indexed number of days from Monday.","Get the one-indexed number of days from Sunday.","Get the <code>UtcOffset</code>.","Get the day of the year.","Get the day of the year of the date in the stored offset.","Get the day of the year.","","","","","","","","Calculates the first occurrence of a weekday that is …","Get the previous month.","Get the previous weekday.","Get the previous calendar date.","Replace the date, which is assumed to be in the stored …","Replace the date, preserving the time.","Replace the date and time, which are assumed to be in the …","Replace the day of the month.","Replace the day of the month.","Replace the day of the month.","Replace the clock hour.","Replace the clock hour.","Replace the clock hour.","Replace the microseconds within the second.","Replace the microseconds within the second.","Replace the microseconds within the second.","Replace the milliseconds within the second.","Replace the milliseconds within the second.","Replace the milliseconds within the second.","Replace the minutes within the hour.","Replace the minutes within the hour.","Replace the minutes within the hour.","Replace the month of the year.","Replace the month of the year.","Replace the month of the year.","Replace the nanoseconds within the second.","Replace the nanoseconds within the second.","Replace the nanoseconds within the second.","Replace the offset. The date and time components remain …","Replace the seconds within the minute.","Replace the seconds within the minute.","Replace the seconds within the minute.","Replace the time, which is assumed to be in the stored …","Replace the time, preserving the date.","Replace the year. The month and day will be unchanged.","Replace the year. The month and day will be unchanged.","Replace the year. The month and day will be unchanged.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self + rhs</code>, saturating if an overflow occurred.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self + duration</code>, saturating value on overflow.","Computes <code>self * rhs</code>, saturating if an overflow occurred.","Creates a new <code>Duration</code> from the specified number of seconds","Creates a new <code>Duration</code> from the specified number of seconds","Computes <code>self - duration</code>, saturating value on overflow.","Computes <code>self - rhs</code>, saturating if an overflow occurred.","Computes <code>self - duration</code>, saturating value on overflow.","Computes <code>self - duration</code>, saturating value on overflow.","Get the second within the minute in the stored offset.","Get the second within the minute.","Get the second within the minute.","Create a new <code>Duration</code> with the given number of seconds.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Obtain the number of seconds past the minute the offset is …","","","","","","","","","","","","Subtract two <code>Time</code>s, returning the <code>Duration</code> between. This …","Subtract the sub-day time of the <code>Duration</code> from the <code>Time</code>. …","Subtract the sub-day time of the [<code>std::time::Duration</code>] …","","","","","","","","","","","Get the number of microseconds past the number of whole …","Get the number of milliseconds past the number of whole …","Get the number of nanoseconds past the number of whole …","","","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the week number where week 1 begins on the first …","Get the <code>Time</code> in the stored offset.","Get the <code>Time</code> component of the <code>PrimitiveDateTime</code>.","Get the year, month, and day.","Get the year, month, and day.","Get the year, month, and day.","Get the clock hour, minute, and second.","Get the clock hour, minute, second, and microsecond.","Get the clock hour, minute, second, and millisecond.","Get the clock hour, minute, second, and nanosecond.","Get the ISO 8601 year, week number, and weekday.","Get the ISO 8601 year, week number, and weekday.","Get the ISO 8601 year, week number, and weekday.","Get the Julian day for the date.","Get the Julian day for the date. The time is not taken …","Get the Julian day for the date. The time is not taken …","Convert the <code>OffsetDateTime</code> from the current <code>UtcOffset</code> to …","Get the year and ordinal day number.","Get the year and ordinal day number.","Get the year and ordinal day number.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the Unix timestamp.","Get the Unix timestamp in nanoseconds.","Convert the existing <code>Duration</code> to a <code>std::time::Duration</code> and …","Utility functions.","Get the weekday.","Get the weekday of the date in the stored offset.","Get the weekday.","Create a new <code>Duration</code> with the given number of weeks. …","Get the number of whole days in the duration.","Get the number of whole hours in the duration.","Obtain the number of whole hours the offset is from UTC. A …","Get the number of whole microseconds in the duration.","Get the number of whole milliseconds in the duration.","Get the number of whole minutes in the duration.","Obtain the number of whole minutes the offset is from UTC. …","Get the number of nanoseconds in the duration.","Get the number of whole seconds in the duration.","Obtain the number of whole seconds the offset is from UTC. …","Get the number of whole weeks in the duration.","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Attempt to create a <code>PrimitiveDateTime</code> using the existing …","Create a <code>PrimitiveDateTime</code> using the existing date and the …","Get the year of the date.","Get the year of the date in the stored offset.","Get the year of the date.","A unit of time representing exactly one day.","A unit of time representing exactly one hour.","A unit of time representing exactly one microsecond.","A unit of time representing exactly one millisecond.","A unit of time representing exactly one minute.","A unit of time representing exactly one nanosecond.","A unit of time representing exactly one second.","A unit of time representing exactly one week.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Obtain the number of times <code>Nanosecond</code> can fit into <code>T</code>. If <code>T</code> …","Obtain the number of times <code>Microsecond</code> can fit into <code>T</code>. If <code>T</code>…","Obtain the number of times <code>Millisecond</code> can fit into <code>T</code>. If <code>T</code>…","Obtain the number of times <code>Second</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Minute</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Hour</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Day</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Week</code> can fit into <code>T</code>. If <code>T</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","An error type indicating that a component provided to a …","","An error type indicating that a conversion failed because …","","An error type indicating that a <code>TryFrom</code> call failed …","","A unified error type for anything returned by a method in …","An error type indicating that a <code>FromStr</code> call failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the value’s permitted range is conditional, i.e. …","Obtain the name of the component whose value was out of …","","","","","","","","","","","","","","","","","","","","Create <code>Duration</code>s from numeric literals.","Create [<code>std::time::Duration</code>]s from numeric literals.","Create a <code>Duration</code> from the number of days.","Create a <code>Duration</code> from the number of hours.","Create a <code>Duration</code> from the number of microseconds.","Create a <code>Duration</code> from the number of milliseconds.","Create a <code>Duration</code> from the number of minutes.","Create a <code>Duration</code> from the number of nanoseconds.","Create a <code>Duration</code> from the number of seconds.","Create a [<code>std::time::Duration</code>] from the number of days.","Create a [<code>std::time::Duration</code>] from the number of hours.","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of minutes.","Create a [<code>std::time::Duration</code>] from the number of …","Create a [<code>std::time::Duration</code>] from the number of seconds.","Create a [<code>std::time::Duration</code>] from the number of weeks.","Create a <code>Duration</code> from the number of weeks.","Get the number of calendar days in a given year.","Get the number of days in the month of a given year.","Returns if the provided year is a leap year in the …","Get the number of weeks in the ISO year."],"i":[17,17,1,0,17,0,48,0,17,18,1,17,17,17,2,1,5,1,6,1,2,1,5,1,17,17,18,0,1,17,17,0,48,0,0,1,18,17,18,18,0,18,4,9,0,1,18,0,1,1,2,2,1,1,4,4,5,5,6,6,2,2,1,1,4,4,5,5,6,6,5,6,9,5,6,5,6,5,6,1,1,5,5,2,1,17,4,5,6,9,18,2,1,17,4,5,6,9,18,2,1,4,5,2,1,1,1,1,2,1,4,5,2,4,2,1,17,4,5,6,9,18,2,1,4,5,6,9,0,4,5,2,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,17,4,5,6,9,18,0,0,2,2,1,1,17,17,17,4,4,5,5,6,6,9,9,18,18,18,2,4,5,6,9,2,1,17,4,5,6,9,18,2,6,9,6,6,6,2,2,2,17,18,4,4,9,2,1,17,4,5,6,9,18,4,5,6,1,2,1,17,4,5,6,9,18,1,9,1,9,9,1,2,4,5,2,17,4,5,6,9,18,4,5,6,1,2,4,5,6,1,4,5,6,1,9,2,4,5,2,4,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,5,6,1,1,9,1,5,17,18,2,2,17,18,2,17,18,2,18,18,18,18,4,2,4,5,2,1,1,4,5,6,9,2,17,18,2,4,5,4,2,4,5,4,5,6,4,5,6,4,5,6,4,5,6,2,4,5,4,5,6,4,4,5,6,4,5,2,4,5,2,1,4,5,1,1,1,2,1,4,5,4,5,6,1,1,1,9,2,2,2,1,1,4,4,4,5,5,5,6,6,6,2,2,1,1,4,4,5,5,6,6,1,1,1,1,1,2,4,5,4,5,2,4,5,4,4,4,4,2,4,5,2,4,5,4,2,4,5,2,1,1,17,17,4,5,6,9,18,2,1,17,4,5,6,9,18,2,1,17,4,5,6,9,18,4,4,1,0,2,4,5,1,1,1,9,1,1,1,9,1,1,9,1,2,2,2,2,2,2,4,5,0,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,36,37,38,39,40,41,42,43,0,47,0,47,0,47,0,0,47,28,34,45,46,47,28,34,45,46,47,28,34,45,46,28,34,45,46,28,28,34,34,45,45,46,46,47,47,28,34,45,46,47,47,47,47,47,28,28,34,45,46,47,28,28,28,28,34,34,45,45,46,46,47,28,34,45,46,47,28,34,45,46,47,0,0,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,49,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[2,1]],[[2,3]],[[1,3]],[[1,1]],[[4,1]],[[4,3]],[[5,3]],[[5,1]],[[6,1]],[[6,3]],[[2,1],7],[[2,3],7],[[1,3],7],[[1,1],7],[[4,3],7],[[4,1],7],[[5,1],7],[[5,3],7],[[6,1],7],[[6,3],7],[5,[[7,[8,8,8]]]],[6,[[7,[8,8,8]]]],[9,[[7,[10,10,10]]]],[5,[[7,[8,8,8,11]]]],[6,[[7,[8,8,8,11]]]],[5,[[7,[8,8,8,12]]]],[6,[[7,[8,8,8,12]]]],[5,[[7,[8,8,8,11]]]],[6,[[7,[8,8,8,11]]]],[1,13],[1,14],[[5,9],4],[5,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,1],[[15,[2]]]],[[1,1],[[15,[1]]]],[[4,1],[[15,[4]]]],[[5,1],[[15,[5]]]],[[2,3],[[15,[2]]]],[[1,16],[[15,[1]]]],[[1,16],[[15,[1]]]],[13,[[15,[1]]]],[14,[[15,[1]]]],[[2,1],[[15,[2]]]],[[1,1],[[15,[1]]]],[[4,1],[[15,[4]]]],[[5,1],[[15,[5]]]],[[2,3],[[15,[2]]]],[[4,9],[[15,[4]]]],[2,2],[1,1],[17,17],[4,4],[5,5],[6,6],[9,9],[18,18],[[2,2],19],[[1,1],19],[[4,4],19],[[5,5],19],[[6,6],19],[[9,9],19],0,[4,2],[5,2],[2,8],[4,8],[5,8],[20,1],[[],1],[[1,12]],[[1,10]],[[1,21]],[[1,14]],[[1,13]],[[1,1]],[[1,8]],[[1,3]],[[1,11]],[[1,16]],[[1,14],7],[[1,16],7],[[1,8],7],[[1,21],7],[[1,11],7],[[1,10],7],[[1,12],7],[[1,13],7],[[2,2],22],[[1,1],22],[[1,3],22],[[17,17],22],[[4,4],22],[[5,5],22],[[6,6],22],[[9,9],22],[[18,18],22],0,0,[[2,23],24],[[2,23],[[26,[7,25]]]],[[1,23],24],[[1,23],24],[[17,23],24],[[17,23],24],[[17,23],24],[[4,23],24],[[4,23],24],[[5,23],24],[[5,23],24],[[6,23],24],[[6,23],24],[[9,23],24],[[9,23],24],[[18,23],24],[[18,23],24],[[18,23],24],[[2,23,[27,[2]]],24],[[4,23,[27,[4]]],24],[[5,23,[27,[5]]],24],[[6,23,[27,[6]]],24],[[9,23,[27,[9]]],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[16,17,8],[[26,[2,28]]]],[[8,8,8],[[26,[6,28]]]],[[10,10,10],[[26,[9,28]]]],[[8,8,8,11],[[26,[6,28]]]],[[8,8,8,12],[[26,[6,28]]]],[[8,8,8,11],[[26,[6,28]]]],[[16,8,18],[[26,[2,28]]]],[16,[[26,[2,28]]]],[[16,12],[[26,[2,28]]]],[29,[[26,[17]]]],[29,[[26,[18]]]],[20,[[26,[4,28]]]],[30,[[26,[4,28]]]],[16,[[26,[9,28]]]],[[2,-1],7,31],[[1,-1],7,31],[[17,-1],7,31],[[4,-1],7,31],[[5,-1],7,31],[[6,-1],7,31],[[9,-1],7,31],[[18,-1],7,31],[4,8],[5,8],[6,8],[20,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,22],[9,22],[1,22],[9,22],[9,22],[1,22],[2,8],[4,8],[5,8],[[2,32],[[27,[2]]]],[[17,32],[[27,[17]]]],[[4,32],[[27,[4]]]],[[5,32],[[27,[5]]]],[[6,32],[[27,[6]]]],[[9,32],[[27,[9]]]],[[18,32],[[27,[18]]]],[4,11],[5,11],[6,11],[20,1],[2,5],[4,12],[5,12],[6,12],[20,1],[4,8],[5,8],[6,8],[20,1],[9,10],[2,8],[4,8],[5,8],[2,17],[4,17],[5,17],[[1,8]],[[1,21]],[[1,10]],[[1,12]],[[1,13]],[[1,11]],[[1,14]],[[1,16]],[[1,13],7],[[1,10],7],[[1,12],7],[[1,14],7],[[1,8],7],[[1,11],7],[[1,21],7],[[1,16],7],[4,11],[5,11],[6,11],[20,1],[1],[9],[[20,16],1],[[2,6],5],[17,17],[18,18],[2,[[15,[2]]]],[[2,18],2],[[17,8],17],[[18,8],18],[[2,18,8],2],[[17,8],17],[[18,8],18],[[2,18,8],2],[18,8],[18,8],[18,8],[18,8],[4,9],[2,12],[4,12],[5,12],[[2,2],[[15,[19]]]],[[1,1],[[15,[19]]]],[[1,3],[[15,[19]]]],[[4,4],[[15,[19]]]],[[5,5],[[15,[19]]]],[[6,6],[[15,[19]]]],[[9,9],[[15,[19]]]],[[2,18],2],[17,17],[18,18],[2,[[15,[2]]]],[[4,2],4],[[5,2],5],[[4,5],4],[[2,8],[[26,[2,28]]]],[[4,8],[[26,[4,28]]]],[[5,8],[[26,[5,28]]]],[[4,8],[[26,[4,28]]]],[[5,8],[[26,[5,28]]]],[[6,8],[[26,[6,28]]]],[[4,11],[[26,[4,28]]]],[[5,11],[[26,[5,28]]]],[[6,11],[[26,[6,28]]]],[[4,12],[[26,[4,28]]]],[[5,12],[[26,[5,28]]]],[[6,12],[[26,[6,28]]]],[[4,8],[[26,[4,28]]]],[[5,8],[[26,[5,28]]]],[[6,8],[[26,[6,28]]]],[[2,17],[[26,[2,28]]]],[[4,17],[[26,[4,28]]]],[[5,17],[[26,[5,28]]]],[[4,11],[[26,[4,28]]]],[[5,11],[[26,[5,28]]]],[[6,11],[[26,[6,28]]]],[[4,9],4],[[4,8],[[26,[4,28]]]],[[5,8],[[26,[5,28]]]],[[6,8],[[26,[6,28]]]],[[4,6],4],[[5,6],5],[[2,16],[[26,[2,28]]]],[[4,16],[[26,[4,28]]]],[[5,16],[[26,[5,28]]]],[[2,1],2],[[1,1],1],[[4,1],4],[[5,1],5],[[1,16],1],[13,1],[14,1],[[2,1],2],[[1,1],1],[[4,1],4],[[5,1],5],[4,8],[5,8],[6,8],[20,1],[13,1],[14,1],[9,10],[[2,3]],[[2,1]],[[2,2]],[[1,3]],[[1,1]],[[4,4]],[[4,3]],[[4,1]],[[5,5]],[[5,3]],[[5,1]],[[6,6]],[[6,1]],[[6,3]],[[2,3],7],[[2,1],7],[[1,3],7],[[1,1],7],[[4,3],7],[[4,1],7],[[5,1],7],[[5,3],7],[[6,3],7],[[6,1],7],[1,16],[1,21],[1,16],[-1,1,33],[-1,1,33],[2,8],[4,8],[5,8],[4,6],[5,6],[2,[[7,[16,17,8]]]],[4,[[7,[16,17,8]]]],[5,[[7,[16,17,8]]]],[4,[[7,[8,8,8]]]],[4,[[7,[8,8,8,11]]]],[4,[[7,[8,8,8,12]]]],[4,[[7,[8,8,8,11]]]],[2,[[7,[16,8,18]]]],[4,[[7,[16,8,18]]]],[5,[[7,[16,8,18]]]],[2,16],[4,16],[5,16],[[4,9],4],[2,[[7,[16,12]]]],[4,[[7,[16,12]]]],[5,[[7,[16,12]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[3,[[26,[1,34]]]],[-1,[[26,[-2]]],[],[]],[8,[[26,[17]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[4,20],[4,30],[1,3],0,[2,18],[4,18],[5,18],[20,1],[1,20],[1,20],[9,10],[1,30],[1,30],[1,20],[9,21],[1,30],[1,20],[9,16],[1,20],[[2,8,8,8],[[26,[5,28]]]],[[2,8,8,8,11],[[26,[5,28]]]],[[2,8,8,8,12],[[26,[5,28]]]],[[2,8,8,8,11],[[26,[5,28]]]],[[2,6],5],[2,16],[4,16],[5,16],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[[36,23],[[26,[7,25]]]],[[37,23],[[26,[7,25]]]],[[38,23],[[26,[7,25]]]],[[39,23],[[26,[7,25]]]],[[40,23],[[26,[7,25]]]],[[41,23],[[26,[7,25]]]],[[42,23],[[26,[7,25]]]],[[43,23],[[26,[7,25]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[],44],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,28],[34,34],[45,45],[46,46],[[28,28],22],[[34,34],22],[[45,45],22],[[46,46],22],[[28,23],24],[[28,23],24],[[34,23],24],[[34,23],24],[[45,23],24],[[45,23],24],[[46,23],24],[[46,23],24],[[47,23],24],[[47,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,47],[45,47],[46,47],[28,47],[[28,-1],7,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,22],[28,29],[47,[[26,[28]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[47,[[26,[34]]]],[47,[[26,[45]]]],[-1,[[26,[-2]]],[],[]],[47,[[26,[46]]]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,1,[]],[16,12],[[16,17],8],[16,22],[16,8]],"c":[],"p":[[3,"Duration",0],[3,"Date",0],[3,"Duration",657],[3,"OffsetDateTime",0],[3,"PrimitiveDateTime",0],[3,"Time",0],[15,"tuple"],[15,"u8"],[3,"UtcOffset",0],[15,"i8"],[15,"u32"],[15,"u16"],[15,"f32"],[15,"f64"],[4,"Option",658],[15,"i32"],[4,"Month",0],[4,"Weekday",0],[4,"Ordering",659],[15,"i64"],[15,"i16"],[15,"bool"],[3,"Formatter",660],[6,"Result",660],[3,"Error",660],[4,"Result",661],[3,"Metadata",662],[3,"ComponentRange",562],[15,"str"],[15,"i128"],[8,"Hasher",663],[3,"FormatterOptions",662],[8,"Iterator",664],[3,"ConversionRange",562],[3,"TypeId",665],[3,"Nanosecond",474],[3,"Microsecond",474],[3,"Millisecond",474],[3,"Second",474],[3,"Minute",474],[3,"Hour",474],[3,"Day",474],[3,"Week",474],[8,"Copy",666],[3,"DifferentVariant",562],[3,"InvalidVariant",562],[4,"Error",562],[6,"Result",0],[8,"NumericalDuration",635],[8,"NumericalStdDuration",635]],"b":[[50,"impl-Add%3CDuration%3E-for-Date"],[51,"impl-Add%3CDuration%3E-for-Date"],[52,"impl-Add%3CDuration%3E-for-Duration"],[53,"impl-Add-for-Duration"],[54,"impl-Add%3CDuration%3E-for-OffsetDateTime"],[55,"impl-Add%3CDuration%3E-for-OffsetDateTime"],[56,"impl-Add%3CDuration%3E-for-PrimitiveDateTime"],[57,"impl-Add%3CDuration%3E-for-PrimitiveDateTime"],[58,"impl-Add%3CDuration%3E-for-Time"],[59,"impl-Add%3CDuration%3E-for-Time"],[60,"impl-AddAssign%3CDuration%3E-for-Date"],[61,"impl-AddAssign%3CDuration%3E-for-Date"],[62,"impl-AddAssign%3CDuration%3E-for-Duration"],[63,"impl-AddAssign-for-Duration"],[64,"impl-AddAssign%3CDuration%3E-for-OffsetDateTime"],[65,"impl-AddAssign%3CDuration%3E-for-OffsetDateTime"],[66,"impl-AddAssign%3CDuration%3E-for-PrimitiveDateTime"],[67,"impl-AddAssign%3CDuration%3E-for-PrimitiveDateTime"],[68,"impl-AddAssign%3CDuration%3E-for-Time"],[69,"impl-AddAssign%3CDuration%3E-for-Time"],[136,"impl-Div%3Cu16%3E-for-Duration"],[137,"impl-Div%3Ci8%3E-for-Duration"],[138,"impl-Div%3Ci16%3E-for-Duration"],[139,"impl-Div%3Cf64%3E-for-Duration"],[140,"impl-Div%3Cf32%3E-for-Duration"],[141,"impl-Div-for-Duration"],[142,"impl-Div%3Cu8%3E-for-Duration"],[143,"impl-Div%3CDuration%3E-for-Duration"],[144,"impl-Div%3Cu32%3E-for-Duration"],[145,"impl-Div%3Ci32%3E-for-Duration"],[146,"impl-DivAssign%3Cf64%3E-for-Duration"],[147,"impl-DivAssign%3Ci32%3E-for-Duration"],[148,"impl-DivAssign%3Cu8%3E-for-Duration"],[149,"impl-DivAssign%3Ci16%3E-for-Duration"],[150,"impl-DivAssign%3Cu32%3E-for-Duration"],[151,"impl-DivAssign%3Ci8%3E-for-Duration"],[152,"impl-DivAssign%3Cu16%3E-for-Duration"],[153,"impl-DivAssign%3Cf32%3E-for-Duration"],[155,"impl-PartialEq-for-Duration"],[156,"impl-PartialEq%3CDuration%3E-for-Duration"],[165,"impl-Display-for-Date"],[166,"impl-Debug-for-Date"],[167,"impl-Display-for-Duration"],[168,"impl-Debug-for-Duration"],[169,"impl-Debug-for-Month"],[170,"impl-SmartDisplay-for-Month"],[171,"impl-Display-for-Month"],[172,"impl-Debug-for-OffsetDateTime"],[173,"impl-Display-for-OffsetDateTime"],[174,"impl-Display-for-PrimitiveDateTime"],[175,"impl-Debug-for-PrimitiveDateTime"],[176,"impl-Display-for-Time"],[177,"impl-Debug-for-Time"],[178,"impl-Debug-for-UtcOffset"],[179,"impl-Display-for-UtcOffset"],[180,"impl-SmartDisplay-for-Weekday"],[181,"impl-Display-for-Weekday"],[182,"impl-Debug-for-Weekday"],[266,"impl-Mul%3Cu8%3E-for-Duration"],[267,"impl-Mul%3Ci16%3E-for-Duration"],[268,"impl-Mul%3Ci8%3E-for-Duration"],[269,"impl-Mul%3Cu16%3E-for-Duration"],[270,"impl-Mul%3Cf32%3E-for-Duration"],[271,"impl-Mul%3Cu32%3E-for-Duration"],[272,"impl-Mul%3Cf64%3E-for-Duration"],[273,"impl-Mul%3Ci32%3E-for-Duration"],[274,"impl-MulAssign%3Cf32%3E-for-Duration"],[275,"impl-MulAssign%3Ci8%3E-for-Duration"],[276,"impl-MulAssign%3Cu16%3E-for-Duration"],[277,"impl-MulAssign%3Cf64%3E-for-Duration"],[278,"impl-MulAssign%3Cu8%3E-for-Duration"],[279,"impl-MulAssign%3Cu32%3E-for-Duration"],[280,"impl-MulAssign%3Ci16%3E-for-Duration"],[281,"impl-MulAssign%3Ci32%3E-for-Duration"],[309,"impl-PartialOrd-for-Duration"],[310,"impl-PartialOrd%3CDuration%3E-for-Duration"],[370,"impl-Sub%3CDuration%3E-for-Date"],[371,"impl-Sub%3CDuration%3E-for-Date"],[372,"impl-Sub-for-Date"],[373,"impl-Sub%3CDuration%3E-for-Duration"],[374,"impl-Sub-for-Duration"],[375,"impl-Sub-for-OffsetDateTime"],[376,"impl-Sub%3CDuration%3E-for-OffsetDateTime"],[377,"impl-Sub%3CDuration%3E-for-OffsetDateTime"],[378,"impl-Sub-for-PrimitiveDateTime"],[379,"impl-Sub%3CDuration%3E-for-PrimitiveDateTime"],[380,"impl-Sub%3CDuration%3E-for-PrimitiveDateTime"],[381,"impl-Sub-for-Time"],[382,"impl-Sub%3CDuration%3E-for-Time"],[383,"impl-Sub%3CDuration%3E-for-Time"],[384,"impl-SubAssign%3CDuration%3E-for-Date"],[385,"impl-SubAssign%3CDuration%3E-for-Date"],[386,"impl-SubAssign%3CDuration%3E-for-Duration"],[387,"impl-SubAssign-for-Duration"],[388,"impl-SubAssign%3CDuration%3E-for-OffsetDateTime"],[389,"impl-SubAssign%3CDuration%3E-for-OffsetDateTime"],[390,"impl-SubAssign%3CDuration%3E-for-PrimitiveDateTime"],[391,"impl-SubAssign%3CDuration%3E-for-PrimitiveDateTime"],[392,"impl-SubAssign%3CDuration%3E-for-Time"],[393,"impl-SubAssign%3CDuration%3E-for-Time"],[397,"impl-Sum%3C%26Duration%3E-for-Duration"],[398,"impl-Sum-for-Duration"],[589,"impl-Debug-for-ComponentRange"],[590,"impl-Display-for-ComponentRange"],[591,"impl-Display-for-ConversionRange"],[592,"impl-Debug-for-ConversionRange"],[593,"impl-Display-for-DifferentVariant"],[594,"impl-Debug-for-DifferentVariant"],[595,"impl-Debug-for-InvalidVariant"],[596,"impl-Display-for-InvalidVariant"],[597,"impl-Display-for-Error"],[598,"impl-Debug-for-Error"],[604,"impl-From%3CConversionRange%3E-for-Error"],[605,"impl-From%3CDifferentVariant%3E-for-Error"],[606,"impl-From%3CInvalidVariant%3E-for-Error"],[607,"impl-From%3CComponentRange%3E-for-Error"]],"a":{"from_julian_date":[203],"iso_weekday_number":[302]}},\
"time_core":{"doc":"Core items for <code>time</code>.","t":"AADDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFF","n":["convert","util","Day","Hour","Microsecond","Millisecond","Minute","Nanosecond","Second","Week","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","per","per","per","per","per","per","per","per","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","days_in_year","is_leap_year","weeks_in_year"],"q":[[0,"time_core"],[2,"time_core::convert"],[90,"time_core::util"],[93,"core::fmt"],[94,"core::fmt"],[95,"core::result"],[96,"core::any"]],"d":["Conversion between units of time.","Utility functions.","A unit of time representing exactly one day.","A unit of time representing exactly one hour.","A unit of time representing exactly one microsecond.","A unit of time representing exactly one millisecond.","A unit of time representing exactly one minute.","A unit of time representing exactly one nanosecond.","A unit of time representing exactly one second.","A unit of time representing exactly one week.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Obtain the number of times <code>Nanosecond</code> can fit into <code>T</code>. If <code>T</code> …","Obtain the number of times <code>Microsecond</code> can fit into <code>T</code>. If <code>T</code>…","Obtain the number of times <code>Millisecond</code> can fit into <code>T</code>. If <code>T</code>…","Obtain the number of times <code>Second</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Minute</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Hour</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Day</code> can fit into <code>T</code>. If <code>T</code> is …","Obtain the number of times <code>Week</code> can fit into <code>T</code>. If <code>T</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","Get the number of calendar days in a given year.","Returns if the provided year is a leap year in the …","Get the number of weeks in the ISO year."],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[7,9],10],[[8,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[],11],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[14,15],[14,16],[14,17]],"c":[],"p":[[3,"Nanosecond",2],[3,"Microsecond",2],[3,"Millisecond",2],[3,"Second",2],[3,"Minute",2],[3,"Hour",2],[3,"Day",2],[3,"Week",2],[3,"Formatter",93],[6,"Result",93],[8,"Copy",94],[4,"Result",95],[3,"TypeId",96],[15,"i32"],[15,"u16"],[15,"bool"],[15,"u8"]],"b":[]},\
"uart_16550":{"doc":"Minimal support for serial communication through UART …","t":"DDLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["MmioSerialPort","SerialPort","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","init","init","into","into","new","new","receive","receive","send","send","send_raw","try_from","try_from","try_into","try_into","type_id","type_id","write_str","write_str"],"q":[[0,"uart_16550"],[29,"core::fmt"],[30,"core::fmt"],[31,"core::any"]],"d":["A memory-mapped UART.","A x86 I/O port-mapped UART.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initializes the memory-mapped UART.","Initializes the serial port.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new UART interface on the given memory mapped …","Creates a new serial port interface on the given I/O base …","Receives a byte on the serial port.","Receives a byte on the serial port.","Sends a byte on the serial port.","Sends a byte on the serial port.","Sends a raw byte on the serial port, intended for binary …","","","","","","","",""],"i":[0,0,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,4,1,4,1,4,1,4,1,4],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2],3],[[4,2],3],[-1,-1,[]],[-1,-1,[]],[1,5],[4,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,1],[7,4],[1,8],[4,8],[[1,8],5],[[4,8],5],[[4,8],5],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]],[-1,10,[]],[[1,11],3],[[4,11],3]],"c":[],"p":[[3,"MmioSerialPort",0],[3,"Formatter",29],[6,"Result",29],[3,"SerialPort",0],[15,"tuple"],[15,"usize"],[15,"u16"],[15,"u8"],[4,"Result",30],[3,"TypeId",31],[15,"str"]],"b":[]},\
"volatile":{"doc":"Provides the wrapper type <code>Volatile</code>, which wraps a …","t":"DALLLLLLLLLLLLLLLLLLLLLLLLLDDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Volatile","access","as_mut_slice","as_slice","borrow","borrow_mut","clone","extract_inner","fmt","fmt","from","index","index_mut","into","map","map_mut","new","new_read_only","new_write_only","read","read_only","try_from","try_into","type_id","update","write","write_only","ReadOnly","ReadWrite","Readable","Writable","WriteOnly","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","fmt","fmt","fmt","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"volatile"],[27,"volatile::access"],[59,"core::ops::deref"],[60,"core::ops::deref"],[61,"core::fmt"],[62,"core::fmt"],[63,"core::ops::function"],[64,"core::marker"],[65,"core::marker"],[66,"core::any"]],"d":["Wraps a reference to make accesses to the referenced value …","Allows creating read-only and write-only <code>Volatile</code> values.","Converts a mutable array reference to a mutable slice.","Converts an array reference to a shared slice.","","","","Extracts the inner value stored in the wrapper type.","","","Returns the argument unchanged.","Applies the index operation on the wrapped slice.","Applies the mutable index operation on the wrapped slice.","Calls <code>U::from(self)</code>.","Constructs a new <code>Volatile</code> reference by mapping the wrapped …","Constructs a new mutable <code>Volatile</code> reference by mapping the …","Constructs a new volatile instance wrapping the given …","Constructs a new read-only volatile instance wrapping the …","Constructs a new write-only volatile instance wrapping the …","Performs a volatile read of the contained value.","Restricts access permissions to read-only.","","","","Updates the contained value using the given closure and …","Performs a volatile write, setting the contained value to …","Restricts access permissions to write-only.","Zero-sized marker type for allowing only read access.","Zero-sized marker type for allowing both read and write …","Helper trait that is implemented by <code>ReadWrite</code> and <code>ReadOnly</code>.","Helper trait that is implemented by <code>ReadWrite</code> and <code>WriteOnly</code>…","Zero-sized marker type for allowing only write access.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,19,13,6,19,13,6,19,13,6,19,13,6,19,13,6,19,13,6,19,13,6,19,13,6,19,13,6],"f":[0,0,[[[1,[-1,-2]]],[[1,[[2,[-3]],-2]]],[3,4],[],[]],[[[1,[-1,-2]]],[[1,[[2,[-3]],-2]]],4,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]]],[[1,[-1,-2]]],5,5],[[[1,[-1,-2]]],-1,[],[]],[[[1,[-1,6]],7],8,4],[[[1,[-1,-2]],7],8,4,9],[-1,-1,[]],[[[1,[-1,-2]],-4],[[1,[-2]]],4,[],[],[[10,[[2,[-3]]]]]],[[[1,[-1,-2]],-4],[[1,[-2]]],[3,4],[],[],[[10,[[2,[-3]]]]]],[-1,-2,[],[]],[[[1,[-1,-2]],-3],[[1,[-4,-2]]],4,[],11,12],[[[1,[-1,-2]],-3],[[1,[-4,-2]]],[3,4],[],11,12],[-1,[[1,[-1]]],[]],[-1,[[1,[-1,13]]],[]],[-1,[[1,[-1,6]]],[]],[[[1,[-1,-2]]],-3,4,9,14],[[[1,[-1]]],[[1,[-1,13]]],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[[[1,[-1,-2]],-3],17,[3,4],[9,18],11],[[[1,[-1,-2]],-3],17,[3,4],18,14],[[[1,[-1]]],[[1,[-1,6]]],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[13,13],[6,6],[[19,7],8],[[13,7],8],[[6,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[3,"Volatile",0],[15,"slice"],[8,"DerefMut",59],[8,"Deref",59],[8,"Clone",60],[3,"WriteOnly",27],[3,"Formatter",61],[6,"Result",61],[8,"Readable",27],[8,"SliceIndex",62],[8,"FnOnce",63],[8,"Sized",64],[3,"ReadOnly",27],[8,"Copy",64],[4,"Result",65],[3,"TypeId",66],[15,"tuple"],[8,"Writable",27],[3,"ReadWrite",27]],"b":[[8,"impl-Debug-for-Volatile%3CR,+WriteOnly%3E"],[9,"impl-Debug-for-Volatile%3CR,+A%3E"]]},\
"x86":{"doc":"","t":"ENNNNAAAALLLAAAAALALLOOFOLAAAAFAOAAALLLANNIENNEEEENNDNNENNNNNNNNNNENNNLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLAKKKKLKLLLLLLLLLLLLLLLLKKLLLLLLLLLKALLLADLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLAAAAADSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLSSRRRSSSSDRDSSRSSDSSGDDSGDDSSDSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMMMMMMMMMMMMMMMMMLLMMLMMMLMMMMLLLAAAAAAAASSSSSRRRSSSSSSRDDRDRRRSSSSSRSSDSSSSSGDDGDDGDDRGDDSSGDDSSSSSDSSSSSSSSSSSSSSSSSSSSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFSSSSSSSSSSSSSSSSSSSSSDLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLCLLLLLLLLDSLLLLLLOOLFFFLLLFLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDLLLLLLLMMLMMMMMLLLLLFFFFFFFFFSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFNDENNNNNRNDDEDDENDDNDDENNNDNNNDDDEEDDDDDDNNNNEDNNNNNDDDDDNDDNDNNNNNDDNNDDDDDDNNNDDNNNDEDDDDNDNDNDEDNNNNNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFSSSSSRSSEEENNNNNNNNNNDDSSSNNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLFFFMFLLFFLLLFFFFFFFFFRRRRRRRRHRSRRDRRRSRSDSRRRSRSRLLLLLLLLLLLLLLLLMLFLFLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLMLLLLLLLLLLLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFIIKKFFFFFFFFINNNEEDDNNNNNNNNINNNNNISSSSSNNNNNNNNIDEESSNNNINNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLFKLLLLLFLLLLLLFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLKLLLLLLLLLLLLLLLLKLLLCFFFFFMLLLLLLLLLLLLLLLLFLLLKLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLMFCFFFFFNNGENNLLLLLLLLAAAAASRRSSSSSRRSSRRRRRRRSSSSSSSSSSSSSRRSSRRRRRRRRRRRRRSRRRSDDSSSSSSRRRRSSSSSSSSSSSSSRRSSSRRSSRRRRRSRRRRDDSSSSSSSSSRRRSDRRRRRSSSSSSSSSSSSRRRRSRRRRRRRRRRRRRRRRRRSRRRSRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["Ring","Ring0","Ring1","Ring2","Ring3","apic","bits16","bits32","bits64","borrow","borrow_mut","clone","controlregs","cpuid","current","debugregs","dtables","eq","fence","fmt","from","fs_deref","gs_deref","halt","int","into","io","irq","msr","random","rdpid","segmentation","syscall","task","time","tlb","try_from","try_into","type_id","vmx","AllExcludingSelf","AllIncludingSelf","ApicControl","ApicId","Assert","Deassert","DeliveryMode","DeliveryStatus","DestinationMode","DestinationShorthand","Edge","Fixed","Icr","Idle","Init","Level","Level","Logical","LowestPriority","Myself","NMI","NoShorthand","Physical","SMI","SendPending","StartUp","TriggerMode","X2Apic","XApic","_Reserved","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bsp","clone","eoi","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_x2apic","for_xapic","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","ioapic","ipi_init","ipi_init_deassert","ipi_startup","logical_id","lower","send_ipi","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_enable","tsc_set","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upper","version","x2apic","x2apic_logical_cluster_address","x2apic_logical_cluster_id","x2apic_logical_id","xapic","IoApic","borrow","borrow_mut","disable_all","enable","from","id","into","new","supported_interrupts","try_from","try_into","type_id","version","X2APIC","attach","borrow","borrow_mut","bsp","default","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","send_self_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","XAPIC","XAPIC_EOI","XAPIC_ESR","XAPIC_ICR0","XAPIC_ICR1","XAPIC_ID","XAPIC_IRR0","XAPIC_IRR1","XAPIC_IRR2","XAPIC_IRR3","XAPIC_IRR4","XAPIC_IRR5","XAPIC_IRR6","XAPIC_IRR7","XAPIC_ISR0","XAPIC_ISR1","XAPIC_ISR2","XAPIC_ISR3","XAPIC_ISR4","XAPIC_ISR5","XAPIC_ISR6","XAPIC_ISR7","XAPIC_LDR","XAPIC_LVT_CMCI","XAPIC_LVT_ERROR","XAPIC_LVT_LINT0","XAPIC_LVT_LINT1","XAPIC_LVT_PMI","XAPIC_LVT_THERMAL","XAPIC_LVT_TIMER","XAPIC_PPR","XAPIC_SVR","XAPIC_TIMER_CURRENT_COUNT","XAPIC_TIMER_DIV_CONF","XAPIC_TIMER_INIT_COUNT","XAPIC_TMR0","XAPIC_TMR1","XAPIC_TMR2","XAPIC_TMR3","XAPIC_TMR4","XAPIC_TMR5","XAPIC_TMR6","XAPIC_TMR7","XAPIC_TPR","XAPIC_VERSION","attach","borrow","borrow_mut","bsp","detach","eoi","fmt","from","id","into","ipi_init","ipi_init_deassert","ipi_startup","logical_id","new","send_ipi","try_from","try_into","tsc_enable","tsc_set","type_id","version","segmentation","eflags","paging","segmentation","task","EFlags","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","remove","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","G","G","IOAddr","LARGE_PAGE_SIZE","LargePage","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PD","PDEntry","PDFlags","PS","PT","PTEntry","PTFlags","PWT","PWT","Page","RW","RW","US","US","VAddr","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","as_mut_ptr","as_mut_ptr","as_ptr","as_ptr","as_u32","as_u32","as_u32","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_u32","from_usize","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_global","is_global","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","set","set","shr","shr","shr","shr","shr","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","zero","zero","zero","TaskStateSegment","borrow","borrow_mut","clone","cr3","cs","ds","eax","ebp","ebx","ecx","edi","edx","eflags","eip","es","esi","esp","esp0","esp1","esp2","fmt","from","fs","gs","into","iobp_offset","ldtr","link","new","ss","ss0","ss1","ss2","try_from","try_into","type_id","paging","registers","rflags","segmentation","sgx","syscall","task","vmx","A","A","A","A","A","BASE_PAGE_SHIFT","BASE_PAGE_SIZE","CACHE_LINE_SIZE","D","D","D","G","G","G","HUGE_PAGE_SIZE","HugePage","IOAddr","LARGE_PAGE_SIZE","LargePage","MAXPHYADDR","MAXVADDR","MAXVADDR_BITS","P","P","P","P","P","PAGE_SIZE_ENTRIES","PAT","PAT","PAddr","PCD","PCD","PCD","PCD","PCD","PD","PDEntry","PDFlags","PDPT","PDPTEntry","PDPTFlags","PML4","PML4Entry","PML4Flags","PML4_SLOT_SIZE","PML5","PML5Entry","PML5Flags","PS","PS","PT","PTEntry","PTFlags","PWT","PWT","PWT","PWT","PWT","Page","RW","RW","RW","RW","RW","US","US","US","US","US","USER_10","USER_10","USER_10","USER_10","USER_10","USER_11","USER_11","USER_11","USER_11","USER_11","USER_9","USER_9","USER_9","USER_9","USER_9","VAddr","XD","XD","XD","XD","XD","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","address","address","address","address","address","align_down_to_base_page","align_down_to_base_page","align_down_to_base_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_huge_page","align_down_to_large_page","align_down_to_large_page","align_down_to_large_page","align_up_to_base_page","align_up_to_base_page","align_up_to_base_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_huge_page","align_up_to_large_page","align_up_to_large_page","align_up_to_large_page","all","all","all","all","all","as_mut_ptr","as_ptr","as_u64","as_u64","as_u64","as_usize","as_usize","as_usize","base_page_offset","base_page_offset","base_page_offset","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_u64","from_usize","hash","hash","hash","hash","hash","hash","hash","hash","huge_page_offset","huge_page_offset","huge_page_offset","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_accessed","is_accessed","is_accessed","is_accessed","is_accessed","is_aligned","is_aligned","is_aligned","is_all","is_all","is_all","is_all","is_all","is_base_page_aligned","is_base_page_aligned","is_base_page_aligned","is_dirty","is_dirty","is_empty","is_empty","is_empty","is_empty","is_empty","is_global","is_global","is_huge_page_aligned","is_huge_page_aligned","is_huge_page_aligned","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_instruction_fetching_disabled","is_large_page_aligned","is_large_page_aligned","is_large_page_aligned","is_page","is_page","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_level_cache_disabled","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_page_write_through","is_pat","is_pat","is_present","is_present","is_present","is_present","is_present","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_user_mode_allowed","is_writeable","is_writeable","is_writeable","is_writeable","is_writeable","is_zero","is_zero","is_zero","large_page_offset","large_page_offset","large_page_offset","new","new","new","new","new","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pd_index","pdpt_index","pml4_index","pml5_index","pt_index","rem","rem","rem","rem","rem","rem","rem","rem","rem","remove","remove","remove","remove","remove","set","set","set","set","set","shr","shr","shr","shr","shr","split","split","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","zero","zero","zero","rbp","rip","rsp","FLAGS_A1","FLAGS_AC","FLAGS_AF","FLAGS_CF","FLAGS_DF","FLAGS_ID","FLAGS_IF","FLAGS_IOPL0","FLAGS_IOPL1","FLAGS_IOPL2","FLAGS_IOPL3","FLAGS_NT","FLAGS_OF","FLAGS_PF","FLAGS_RF","FLAGS_SF","FLAGS_TF","FLAGS_VIF","FLAGS_VIP","FLAGS_VM","FLAGS_ZF","RFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clac","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_priv","from_raw","hash","insert","intersection","intersects","into","is_all","is_empty","new","not","partial_cmp","read","remove","set","set","stac","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","Descriptor64","NULL","borrow","borrow_mut","clone","default","fmt","from","fs_deref","gs_deref","into","load_cs","rdfsbase","rdgsbase","set_base_limit","set_ist","set_selector_offset","swapgs","try_from","try_into","type_id","wrfsbase","wrgsbase","encls_create","encls_eadd","encls_eaug","encls_eblock","encls_edbgrd","encls_edbgwr","encls_eextend","encls_einit","encls_eldb","encls_eldu","encls_emodpr","encls_emodt","encls_epa","encls_eremove","encls_etrack","encls_ewb","enclu_eaccept","enclu_eacceptcopy","enclu_eenter","enclu_eexit","enclu_egetkey","enclu_emodepe","enclu_ereport","enclu_eresume","syscall0","syscall1","syscall2","syscall3","syscall4","syscall5","syscall6","TaskStateSegment","borrow","borrow_mut","clone","default","fmt","from","into","iomap_base","ist","new","reserved","reserved2","reserved3","reserved4","rsp","set_ist","set_rsp","try_from","try_into","type_id","vmclear","vmlaunch","vmptrld","vmptrst","vmread","vmresume","vmwrite","vmxoff","vmxon","CR0_ALIGNMENT_MASK","CR0_CACHE_DISABLE","CR0_EMULATE_COPROCESSOR","CR0_ENABLE_PAGING","CR0_EXTENSION_TYPE","CR0_MONITOR_COPROCESSOR","CR0_NOT_WRITE_THROUGH","CR0_NUMERIC_ERROR","CR0_PROTECTED_MODE","CR0_TASK_SWITCHED","CR0_WRITE_PROTECT","CR4_DEBUGGING_EXTENSIONS","CR4_ENABLE_FSGSBASE","CR4_ENABLE_GLOBAL_PAGES","CR4_ENABLE_LA57","CR4_ENABLE_MACHINE_CHECK","CR4_ENABLE_OS_XSAVE","CR4_ENABLE_PAE","CR4_ENABLE_PCID","CR4_ENABLE_PPMC","CR4_ENABLE_PROTECTION_KEY","CR4_ENABLE_PSE","CR4_ENABLE_SMAP","CR4_ENABLE_SMEP","CR4_ENABLE_SMX","CR4_ENABLE_SSE","CR4_ENABLE_UMIP","CR4_ENABLE_VME","CR4_ENABLE_VMX","CR4_TIME_STAMP_DISABLE","CR4_UNMASKED_SSE","CR4_VIRTUAL_INTERRUPTS","Cr0","Cr4","XCR0_AVX_STATE","XCR0_BNDCSR_STATE","XCR0_BNDREG_STATE","XCR0_FPU_MMX_STATE","XCR0_HI16_ZMM_STATE","XCR0_OPMASK_STATE","XCR0_PKRU_STATE","XCR0_SSE_STATE","XCR0_ZMM_HI256_STATE","Xcr0","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","cr0","cr0_write","cr2","cr2_write","cr3","cr3_write","cr4","cr4_write","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","union","xcr0","xcr0_write","ACRN","ApmInfo","Associativity","Avx","Avx512Opmask","Avx512ZmmHi16","Avx512ZmmHi256","Bhyve","CACHE_INFO_TABLE","Cache","CacheInfo","CacheInfoIter","CacheInfoType","CacheParameter","CacheParametersIter","CacheType","Core","CpuId","CpuIdResult","DTLB","DatInfo","DatIter","DatType","Data","DataTLB","Die","DirectCacheAccessInfo","DirectMapped","Disabled","Epc","EpcSection","ExtendedFeatures","ExtendedProcessorFeatureIdentifiers","ExtendedRegisterStateLocation","ExtendedRegisterType","ExtendedState","ExtendedStateInfo","ExtendedStateIter","ExtendedTopologyIter","ExtendedTopologyLevel","FeatureInfo","FullyAssociative","General","Hdc","HyperV","Hypervisor","HypervisorInfo","Ia32Xss","Instruction","InstructionTLB","Invalid","KVM","L1CacheTlbInfo","L2And3CacheTlbInfo","L2CatInfo","L3CatInfo","L3MonitoringInfo","LoadOnly","MemBwAllocationInfo","MemoryEncryptionInfo","Module","MonitorMwaitInfo","MpxBndcsr","MpxBndregs","NWay","Null","Null","PerformanceMonitoringInfo","PerformanceOptimizationInfo","Pkru","Prefetch","ProcessorBrandString","ProcessorCapacityAndFeatureInfo","ProcessorFrequencyInfo","ProcessorSerial","ProcessorTopologyInfo","ProcessorTraceInfo","Pt","QEMU","QNX","RdtAllocationInfo","RdtMonitoringInfo","Reserved","SMT","STLB","SgxInfo","SgxSectionInfo","SgxSectionIter","SoCVendorAttributesIter","SoCVendorBrand","SoCVendorInfo","StoreOnly","SvmFeatures","TLB","ThermalPowerInfo","Tile","Tlb1gbPageInfo","TopologyType","TscInfo","Unified","UnifiedTLB","Unknown","Unknown","Unknown","Unknown","VMware","VendorInfo","Xcr0","Xen","all_zero","apic_frequency","apic_id_size","as_str","as_str","as_str","as_string","as_string","associativity","base_family_id","base_model_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brand_id","brand_index","bus_frequency","c_bit_position","cache_level","cache_type","cache_type","capacity_mask_length","capacity_mask_length","cflush_cache_line_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","coherency_line_size","configurable_address_ranges","conversion_factor","core_id","counter_bit_width","cpu_pwr_sample_time_ratio","cpuid","dcache_associativity","dcache_line_size","dcache_lines_per_tag","dcache_size","default","denominator","desc","dtlb_2m_4m_associativity","dtlb_2m_4m_associativity","dtlb_2m_4m_size","dtlb_2m_4m_size","dtlb_4k_associativity","dtlb_4k_associativity","dtlb_4k_size","dtlb_4k_size","dtlb_l1_1gb_associativity","dtlb_l1_1gb_size","dtlb_l2_1gb_associativity","dtlb_l2_1gb_size","dts_irq_threshold","eax","ebx","ebx_length","ecx","edx","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extended_family_id","extended_model_id","extended_signature","extensions_supported","family_id","fixed_function_counters","fixed_function_counters_bit_width","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_advanced_power_mgmt_info","get_cache_info","get_cache_parameters","get_dca_cap_value","get_deterministic_address_translation_info","get_direct_cache_access_info","get_extended_feature_info","get_extended_processor_and_feature_identifiers","get_extended_state_info","get_extended_topology_info","get_extended_topology_info_v2","get_feature_info","get_hypervisor_info","get_l1_cache_and_tlb_info","get_l2_l3_cache_and_tlb_info","get_memory_encryption_info","get_monitor_mwait_info","get_performance_monitoring_info","get_performance_optimization_info","get_processor_brand_string","get_processor_capacity_feature_info","get_processor_frequency_info","get_processor_serial","get_processor_topology_info","get_processor_trace_info","get_project_id","get_rdt_allocation_info","get_rdt_monitoring_info","get_sgx_info","get_soc_vendor_id","get_soc_vendor_info","get_stepping_id","get_svm_info","get_thermal_power_info","get_tlb_1gb_page_info","get_tsc_info","get_vendor_attributes","get_vendor_brand","get_vendor_info","guest_physical_address_bits","has_100mhz_steps","has_1gb_entries","has_1gib_pages","has_2mb_entries","has_3dnow","has_4k_entries","has_4mb_entries","has_64bit_mode","has_64bit_mode","has_acpi","has_addr_mask_extension","has_adx","has_aesni","has_alt_mov_cr8","has_alternate_injection","has_amd_3dnow_extensions","has_any_thread_deprecation","has_apic","has_arat","has_av512vbmi2","has_avic","has_avx","has_avx2","has_avx512_ifma","has_avx512bitalg","has_avx512bw","has_avx512cd","has_avx512dq","has_avx512er","has_avx512f","has_avx512pf","has_avx512vl","has_avx512vnni","has_avx512vpopcntdq","has_bmi1","has_bmi2","has_cet_ss","has_cl_zero","has_clflush","has_clflushopt","has_clwb","has_cmov","has_cmp_legacy","has_cmpxchg16b","has_cmpxchg8b","has_cnxtid","has_code_data_prioritization","has_complex_indexing","has_configurable_psb_and_cycle_accurate_mode","has_cpb","has_cpl","has_data_access_bkpt_extension","has_dca","has_de","has_debug_swap","has_decode_assists","has_ds","has_ds_area","has_dts","has_ecmd","has_eist","has_encls_leaves_etrackc_erdinfo_eldbc_elduc","has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","has_energy_bias_pref","has_execute_disable","has_ext_apic_space","has_f16c","has_fast_fxsave_fxstor","has_fdp","has_feedback_iface","has_flexible_hwp","has_flush_by_asid","has_fma","has_fma4","has_fp128","has_fp256","has_fpu","has_fpu_cs_ds_deprecated","has_freq_id_ctrl","has_fsgsbase","has_fxsave_fxstor","has_gfni","has_gif","has_gmet","has_hdc","has_hle","has_host_mce_override","has_htt","has_hw_coord_feedback","has_hw_enforced_cache_coh","has_hw_pstate","has_hwa","has_hwp","has_hwp_activity_window","has_hwp_capabilities","has_hwp_energy_performance_preference","has_hwp_fast_access_mode","has_hwp_notification","has_hwp_package_level_request","has_hwp_peci_override","has_hypervisor","has_ibs","has_ignore_idle_processor_hwp_request","has_inst_ret_cntr_msr","has_int_wbinvd","has_invariant_tsc","has_invlpgb","has_invlpgb_nested","has_invpcid","has_ip_tracestop_filtering","has_l2_cat","has_l3_cat","has_l3_monitoring","has_la57","has_lahf_sahf","has_lbr_virtualization","has_linear_response_delay","has_lip_with_cs_base","has_local_bandwidth_monitoring","has_lwp","has_lzcnt","has_mca","has_mca_overflow_recovery","has_mce","has_mcommit","has_memory_bandwidth_allocation","has_misaligned_sse_mode","has_mmx","has_mmx_extensions","has_monitor_mwait","has_monitorx_mwaitx","has_movbe","has_movu","has_mpx","has_msr","has_mtc_timing_packet_coefi_suppression","has_mtrr","has_nb_perf_cntr_extensions","has_nested_paging","has_nrip","has_occupancy_monitoring","has_ospke","has_osvw","has_oxsave","has_pae","has_page_flush_msr","has_pat","has_pause_filter","has_pause_filter_threshold","has_pbe","has_pcid","has_pclmulqdq","has_pdcm","has_perf_cntr_extensions","has_perf_cntr_llc_extensions","has_perf_tsc","has_pge","has_pku","has_pln","has_popcnt","has_power_event_trace","has_power_reporting_iface","has_prefetchw","has_prefetchwt1","has_prevent_host_ibs","has_processor_trace","has_pse","has_pse36","has_psn","has_ptm","has_ptwrite","has_rdpid","has_rdpru","has_rdrand","has_rdseed","has_rdta","has_rdtm","has_rdtscp","has_rep_movsb_stosb","has_restore_fp_error_ptrs","has_restricted_injection","has_ro_effective_freq_iface","has_rtit_cr3_match","has_rtm","has_sev","has_sev_es","has_sev_snp","has_sgx","has_sgx1","has_sgx2","has_sgx_lc","has_sha","has_single_range_output_scheme","has_skinit","has_smap","has_sme","has_smep","has_smx","has_spec_ctrl","has_ss","has_sse","has_sse2","has_sse3","has_sse41","has_sse42","has_sse4a","has_sss_check","has_ssse3","has_succor","has_svm","has_svm_lock","has_syscall_sysret","has_sysenter_sysexit","has_tbm","has_thermtrip","has_tlb_ctrl","has_tm","has_tm","has_tm2","has_tme_en","has_topa","has_topa_maximum_entries","has_topology_extensions","has_total_bandwidth_monitoring","has_trace_transport_subsystem","has_ts","has_tsc","has_tsc_adjust_msr","has_tsc_deadline","has_tsc_rate_msr","has_turbo_boost","has_turbo_boost3","has_umip","has_unsupported_efer_lmsle","has_vaes","has_vmcb_clean_bits","has_vme","has_vmpl","has_vmsave_virtualization","has_vmx","has_volt_id_ctrl","has_vpclmulqdq","has_vte","has_waitpkg","has_wbnoinvd","has_wdt","has_x2apic","has_xgetbv","has_xop","has_xsave","has_xsavec","has_xsaveopt","has_xsaves_xrstors","highest_cos","highest_cos","highest_cos","ia32_xss_supports_hdc","ia32_xss_supports_pt","icache_associativity","icache_line_size","icache_lines_per_tag","icache_size","identify","initial_local_apic_id","interrupts_as_break_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invlpgb_max_pages","is_branch_inst_ret_ev_unavailable","is_branch_midpred_ev_unavailable","is_cache_ref_ev_unavailable","is_compacted_format","is_core_cyc_ev_unavailable","is_fully_associative","is_fully_associative","is_in_ia32_xss","is_in_xcr0","is_inclusive","is_inst_ret_ev_unavailable","is_ll_cache_miss_ev_unavailable","is_ref_cycle_ev_unavailable","is_self_initializing","is_write_back_invalidate","isolation_bitmap","isolation_bitmap","iter","iter","itlb_2m_4m_associativity","itlb_2m_4m_associativity","itlb_2m_4m_size","itlb_2m_4m_size","itlb_4k_associativity","itlb_4k_associativity","itlb_4k_size","itlb_4k_size","itlb_l1_1gb_associativity","itlb_l1_1gb_size","itlb_l2_1gb_associativity","itlb_l2_1gb_size","l2_cat","l2cache_associativity","l2cache_line_size","l2cache_lines_per_tag","l2cache_size","l3_cat","l3_monitoring","l3cache_associativity","l3cache_line_size","l3cache_lines_per_tag","l3cache_size","largest_monitor_line","level","level_number","level_type","linear_address_bits","location","mawau_value","max_addressable_ids","max_cores_for_cache","max_cores_for_package","max_enclave_size_64bit","max_enclave_size_non_64bit","max_encrypted_guests","max_hba_throttling","max_logical_processor_ids","max_rdpru_id","maximum_logical_processors","maximum_rmid_range","memory_bandwidth_allocation","min_sev_no_es_asid","miscselect","model_id","native_cpuid","new","next","next","next","next","next","next","next","node_id","nodes_per_processor","nominal_frequency","num","num_phys_threads","number_of_counters","numerator","offset","partitioning","perf_tsc_size","physical_address_bits","physical_address_reduction","physical_base","physical_line_partitions","pkg_type","processor_base_frequency","processor_max_frequency","processors","register","revision","rmid_range","secs_attributes","serial","serial_all","serial_lower","serial_middle","serial_upper","sets","sets","shift_right_for_next_apic_id","size","size","smallest_monitor_line","stepping_id","subleaf","supported_asids","supported_c0_states","supported_c1_states","supported_c2_states","supported_c3_states","supported_c4_states","supported_c5_states","supported_c6_states","supported_c7_states","supported_cycle_threshold_value_encodings","supported_mtc_period_encodings","supported_psb_frequency_encodings","threads_per_core","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tsc_frequency","tsc_frequency","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_id","ways","with_cpuid_fn","x2apic_id","x2apic_id","xcr0_supports_avx512_opmask","xcr0_supports_avx512_zmm_hi16","xcr0_supports_avx512_zmm_hi256","xcr0_supports_avx_256","xcr0_supports_legacy_x87","xcr0_supports_mpx_bndcsr","xcr0_supports_mpx_bndregs","xcr0_supports_pkru","xcr0_supports_sse_128","xsave_area_size_enabled_features","xsave_area_size_supported_features","xsave_size","cpuid_count","B0","B1","B2","B3","BD","BREAKPOINT_REGS","BS","BT","BreakCondition","BreakSize","Breakpoint","Bytes1","Bytes2","Bytes4","Bytes8","DataReadsWrites","DataWrites","Dr0","Dr1","Dr2","Dr3","Dr6","Dr7","EMPTY","GD_BIT","GE_BIT","Instructions","IoReadsWrites","LE_BIT","RTM","RTM_BIT","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","complement","configure","configure_bp","contains","default","difference","disable_bp","disable_global","disable_local","dr","dr0","dr0_write","dr1","dr1_write","dr2","dr2_write","dr3","dr3_write","dr6","dr6_write","dr7","dr7_write","empty","enable_bp","enable_exact_global_bp","enable_exact_local_bp","enable_general_detect","enable_global","enable_local","enable_rtm","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","write","DescriptorTablePointer","base","borrow","borrow_mut","default","fmt","from","into","ldtr","lgdt","lidt","limit","load_ldtr","new","new_from_slice","sgdt","sidt","try_from","try_into","type_id","lfence","mfence","sfence","inb","inl","inw","outb","outl","outw","ALIGNMENT_CHECK_VECTOR","BOUND_RANGE_EXCEEDED_VECTOR","BREAKPOINT_VECTOR","COPROCESSOR_SEGMENT_OVERRUN_VECTOR","DEBUG_VECTOR","DEVICE_NOT_AVAILABLE_VECTOR","DIVIDE_ERROR_VECTOR","DOUBLE_FAULT_VECTOR","EXCEPTIONS","GENERAL_PROTECTION_FAULT_VECTOR","ID","INVALID_OPCODE_VECTOR","INVALID_TSS_VECTOR","InterruptDescription","MACHINE_CHECK_VECTOR","NONMASKABLE_INTERRUPT_VECTOR","OVERFLOW_VECTOR","P","PAGE_FAULT_VECTOR","PK","PageFaultError","RSVD","SEGMENT_NOT_PRESENT_VECTOR","SIMD_FLOATING_POINT_VECTOR","STACK_SEGEMENT_FAULT_VECTOR","US","VIRTUALIZATION_VECTOR","WR","X87_FPU_VECTOR","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","description","difference","disable","empty","enable","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","irqtype","is_all","is_empty","mnemonic","not","partial_cmp","remove","set","source","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","vector","APIC_BASE","BIOS_UPDT_TRIG","DEBUGCTLMSR","EBL_CR_POWERON","IA32_APERF","IA32_APIC_BASE","IA32_A_PMC0","IA32_A_PMC1","IA32_A_PMC2","IA32_A_PMC3","IA32_A_PMC4","IA32_A_PMC5","IA32_A_PMC6","IA32_A_PMC7","IA32_BIOS_SIGN_ID","IA32_BIOS_UPDT_TRIG","IA32_CLOCK_MODULATION","IA32_CPU_DCA_CAP","IA32_CSTAR","IA32_DCA_0_CAP","IA32_DEBUGCTL","IA32_DS_AREA","IA32_EFER","IA32_ENERGY_PERF_BIAS","IA32_FEATURE_CONTROL","IA32_FIXED_CTR0","IA32_FIXED_CTR1","IA32_FIXED_CTR2","IA32_FIXED_CTR_CTRL","IA32_FMASK","IA32_FS_BASE","IA32_GS_BASE","IA32_KERNEL_GSBASE","IA32_LSTAR","IA32_MC0_ADDR","IA32_MC0_ADDR1","IA32_MC0_CTL","IA32_MC0_CTL2","IA32_MC0_MISC","IA32_MC0_STATUS","IA32_MC10_ADDR1","IA32_MC10_CTL","IA32_MC10_CTL2","IA32_MC10_MISC","IA32_MC10_STATUS","IA32_MC11_ADDR1","IA32_MC11_CTL","IA32_MC11_CTL2","IA32_MC11_MISC","IA32_MC11_STATUS","IA32_MC12_ADDR1","IA32_MC12_CTL","IA32_MC12_CTL2","IA32_MC12_MISC","IA32_MC12_STATUS","IA32_MC13_ADDR1","IA32_MC13_CTL","IA32_MC13_CTL2","IA32_MC13_MISC","IA32_MC13_STATUS","IA32_MC14_ADDR1","IA32_MC14_CTL","IA32_MC14_CTL2","IA32_MC14_MISC","IA32_MC14_STATUS","IA32_MC15_ADDR1","IA32_MC15_CTL","IA32_MC15_CTL2","IA32_MC15_MISC","IA32_MC15_STATUS","IA32_MC16_ADDR1","IA32_MC16_CTL","IA32_MC16_CTL2","IA32_MC16_MISC","IA32_MC16_STATUS","IA32_MC17_ADDR1","IA32_MC17_CTL","IA32_MC17_CTL2","IA32_MC17_MISC","IA32_MC17_STATUS","IA32_MC18_ADDR1","IA32_MC18_CTL","IA32_MC18_CTL2","IA32_MC18_MISC","IA32_MC18_STATUS","IA32_MC19_ADDR1","IA32_MC19_CTL","IA32_MC19_CTL2","IA32_MC19_MISC","IA32_MC19_STATUS","IA32_MC1_ADDR","IA32_MC1_ADDR2","IA32_MC1_CTL","IA32_MC1_CTL2","IA32_MC1_MISC","IA32_MC1_STATUS","IA32_MC20_ADDR1","IA32_MC20_CTL","IA32_MC20_CTL2","IA32_MC20_MISC","IA32_MC20_STATUS","IA32_MC21_ADDR1","IA32_MC21_CTL","IA32_MC21_CTL2","IA32_MC21_MISC","IA32_MC21_STATUS","IA32_MC2_ADDR","IA32_MC2_ADDR1","IA32_MC2_CTL","IA32_MC2_CTL2","IA32_MC2_MISC","IA32_MC2_STATUS","IA32_MC3_ADDR","IA32_MC3_ADDR1","IA32_MC3_CTL","IA32_MC3_CTL2","IA32_MC3_MISC","IA32_MC3_STATUS","IA32_MC4_ADDR","IA32_MC4_ADDR1","IA32_MC4_CTL","IA32_MC4_CTL2","IA32_MC4_MISC","IA32_MC4_STATUS","IA32_MC5_ADDR1","IA32_MC5_CTL","IA32_MC5_CTL2","IA32_MC5_MISC","IA32_MC5_STATUS","IA32_MC6_ADDR1","IA32_MC6_CTL","IA32_MC6_CTL2","IA32_MC6_MISC","IA32_MC6_STATUS","IA32_MC7_ADDR1","IA32_MC7_CTL","IA32_MC7_CTL2","IA32_MC7_MISC","IA32_MC7_STATUS","IA32_MC8_ADDR1","IA32_MC8_CTL","IA32_MC8_CTL2","IA32_MC8_MISC","IA32_MC8_STATUS","IA32_MC9_ADDR1","IA32_MC9_CTL","IA32_MC9_CTL2","IA32_MC9_MISC","IA32_MC9_STATUS","IA32_MCG_CAP","IA32_MCG_CTL","IA32_MCG_STATUS","IA32_MISC_ENABLE","IA32_MONITOR_FILTER_LINE_SIZE","IA32_MONITOR_FILTER_SIZE","IA32_MPERF","IA32_MTRRCAP","IA32_MTRR_DEF_TYPE","IA32_MTRR_FIX16K_80000","IA32_MTRR_FIX16K_A0000","IA32_MTRR_FIX4K_C0000","IA32_MTRR_FIX4K_C8000","IA32_MTRR_FIX4K_D0000","IA32_MTRR_FIX4K_D8000","IA32_MTRR_FIX4K_E0000","IA32_MTRR_FIX4K_E8000","IA32_MTRR_FIX4K_F0000","IA32_MTRR_FIX4K_F8000","IA32_MTRR_FIX64K_00000","IA32_MTRR_PHYSBASE0","IA32_MTRR_PHYSBASE1","IA32_MTRR_PHYSBASE2","IA32_MTRR_PHYSBASE3","IA32_MTRR_PHYSBASE4","IA32_MTRR_PHYSBASE5","IA32_MTRR_PHYSBASE6","IA32_MTRR_PHYSBASE7","IA32_MTRR_PHYSBASE8","IA32_MTRR_PHYSBASE9","IA32_MTRR_PHYSMASK0","IA32_MTRR_PHYSMASK1","IA32_MTRR_PHYSMASK2","IA32_MTRR_PHYSMASK3","IA32_MTRR_PHYSMASK4","IA32_MTRR_PHYSMASK5","IA32_MTRR_PHYSMASK6","IA32_MTRR_PHYSMASK7","IA32_MTRR_PHYSMASK8","IA32_MTRR_PHYSMASK9","IA32_P5_MC_ADDR","IA32_P5_MC_TYPE","IA32_PACKAGE_THERM_INTERRUPT","IA32_PACKAGE_THERM_STATUS","IA32_PAT","IA32_PEBS_ENABLE","IA32_PERFEVTSEL0","IA32_PERFEVTSEL1","IA32_PERFEVTSEL2","IA32_PERFEVTSEL3","IA32_PERFEVTSEL4","IA32_PERFEVTSEL5","IA32_PERFEVTSEL6","IA32_PERFEVTSEL7","IA32_PERF_CAPABILITIES","IA32_PERF_CTL","IA32_PERF_GLOBAL_CTRL","IA32_PERF_GLOBAL_OVF_CTRL","IA32_PERF_GLOBAL_STAUS","IA32_PERF_STATUS","IA32_PLATFORM_DCA_CAP","IA32_PLATFORM_ID","IA32_PMC0","IA32_PMC1","IA32_PMC2","IA32_PMC3","IA32_PMC4","IA32_PMC5","IA32_PMC6","IA32_PMC7","IA32_PQR_ASSOC","IA32_QM_CTR","IA32_QM_EVTSEL","IA32_SMBASE","IA32_SMM_MONITOR_CTL","IA32_SMRR_PHYSBASE","IA32_SMRR_PHYSMASK","IA32_STAR","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IA32_THERM_INTERRUPT","IA32_THERM_STATUS","IA32_TIME_STAMP_COUNTER","IA32_TSC_ADJUST","IA32_TSC_AUX","IA32_TSC_DEADLINE","IA32_VMX_BASIC","IA32_VMX_CR0_FIXED0","IA32_VMX_CR0_FIXED1","IA32_VMX_CR4_FIXED0","IA32_VMX_CR4_FIXED1","IA32_VMX_CRO_FIXED0","IA32_VMX_CRO_FIXED1","IA32_VMX_ENTRY_CTLS","IA32_VMX_EPT_VPID_CAP","IA32_VMX_EPT_VPID_ENUM","IA32_VMX_EXIT_CTLS","IA32_VMX_FMFUNC","IA32_VMX_MISC","IA32_VMX_PINBASED_CTLS","IA32_VMX_PROCBASED_CTLS","IA32_VMX_PROCBASED_CTLS2","IA32_VMX_TRUE_ENTRY_CTLS","IA32_VMX_TRUE_EXIT_CTLS","IA32_VMX_TRUE_PINBASED_CTLS","IA32_VMX_TRUE_PROCBASED_CTLS","IA32_VMX_VMCS_ENUM","IA32_VMX_VMFUNC","IA32_X2APIC_APICID","IA32_X2APIC_CUR_COUNT","IA32_X2APIC_DIV_CONF","IA32_X2APIC_EOI","IA32_X2APIC_ESR","IA32_X2APIC_ICR","IA32_X2APIC_INIT_COUNT","IA32_X2APIC_IRR0","IA32_X2APIC_IRR1","IA32_X2APIC_IRR2","IA32_X2APIC_IRR3","IA32_X2APIC_IRR4","IA32_X2APIC_IRR5","IA32_X2APIC_IRR6","IA32_X2APIC_IRR7","IA32_X2APIC_ISR0","IA32_X2APIC_ISR1","IA32_X2APIC_ISR2","IA32_X2APIC_ISR3","IA32_X2APIC_ISR4","IA32_X2APIC_ISR5","IA32_X2APIC_ISR6","IA32_X2APIC_ISR7","IA32_X2APIC_LDR","IA32_X2APIC_LVT_CMCI","IA32_X2APIC_LVT_ERROR","IA32_X2APIC_LVT_LINT0","IA32_X2APIC_LVT_LINT1","IA32_X2APIC_LVT_PMI","IA32_X2APIC_LVT_THERMAL","IA32_X2APIC_LVT_TIMER","IA32_X2APIC_PPR","IA32_X2APIC_SELF_IPI","IA32_X2APIC_SIVR","IA32_X2APIC_TMR0","IA32_X2APIC_TMR1","IA32_X2APIC_TMR2","IA32_X2APIC_TMR3","IA32_X2APIC_TMR4","IA32_X2APIC_TMR5","IA32_X2APIC_TMR6","IA32_X2APIC_TMR7","IA32_X2APIC_TPR","IA32_X2APIC_VERSION","LASTBRANCHFROMIP","LASTBRANCHTOIP","LASTINTFROMIP","LASTINTTOIP","MC0_ADDR","MC0_CTL","MC0_MISC","MC0_STATUS","MC1_ADDR","MC1_CTL","MC1_MISC","MC1_STATUS","MC2_ADDR","MC2_CTL","MC2_MISC","MC2_STATUS","MC3_ADDR","MC3_CTL","MC3_MISC","MC3_STATUS","MC4_ADDR","MC4_CTL","MC4_MISC","MC4_STATUS","MCG_CAP","MCG_CTL","MCG_STATUS","MSR_ALF_ESCR0","MSR_ALF_ESCR1","MSR_B0_PMON_BOX_CTRL","MSR_B0_PMON_BOX_OVF_CTRL","MSR_B0_PMON_BOX_STATUS","MSR_B0_PMON_CTR0","MSR_B0_PMON_CTR1","MSR_B0_PMON_CTR2","MSR_B0_PMON_CTR3","MSR_B0_PMON_EVNT_SEL0","MSR_B0_PMON_EVNT_SEL1","MSR_B0_PMON_EVNT_SEL2","MSR_B0_PMON_EVNT_SEL3","MSR_B0_PMON_MASK","MSR_B0_PMON_MATCH","MSR_B1_PMON_BOX_CTRL","MSR_B1_PMON_BOX_OVF_CTRL","MSR_B1_PMON_BOX_STATUS","MSR_B1_PMON_CTR0","MSR_B1_PMON_CTR1","MSR_B1_PMON_CTR2","MSR_B1_PMON_CTR3","MSR_B1_PMON_EVNT_SEL0","MSR_B1_PMON_EVNT_SEL1","MSR_B1_PMON_EVNT_SEL2","MSR_B1_PMON_EVNT_SEL3","MSR_B1_PMON_MASK","MSR_B1_PMON_MATCH","MSR_BBL_CR_CTL","MSR_BBL_CR_CTL3","MSR_BPU_CCCR0","MSR_BPU_CCCR1","MSR_BPU_CCCR2","MSR_BPU_CCCR3","MSR_BPU_COUNTER0","MSR_BPU_COUNTER1","MSR_BPU_COUNTER2","MSR_BPU_COUNTER3","MSR_BPU_ESCR0","MSR_BPU_ESCR1","MSR_BSU_ESCR0","MSR_BSU_ESCR1","MSR_C0_PMON_BOX_CTRL","MSR_C0_PMON_BOX_OVF_CTRL","MSR_C0_PMON_BOX_STATUS","MSR_C0_PMON_CTR0","MSR_C0_PMON_CTR1","MSR_C0_PMON_CTR2","MSR_C0_PMON_CTR3","MSR_C0_PMON_CTR4","MSR_C0_PMON_CTR5","MSR_C0_PMON_EVNT_SEL0","MSR_C0_PMON_EVNT_SEL1","MSR_C0_PMON_EVNT_SEL2","MSR_C0_PMON_EVNT_SEL3","MSR_C0_PMON_EVNT_SEL4","MSR_C0_PMON_EVNT_SEL5","MSR_C1_PMON_BOX_CTRL","MSR_C1_PMON_BOX_OVF_CTRL","MSR_C1_PMON_BOX_STATUS","MSR_C1_PMON_CTR0","MSR_C1_PMON_CTR1","MSR_C1_PMON_CTR2","MSR_C1_PMON_CTR3","MSR_C1_PMON_CTR4","MSR_C1_PMON_CTR5","MSR_C1_PMON_EVNT_SEL0","MSR_C1_PMON_EVNT_SEL1","MSR_C1_PMON_EVNT_SEL2","MSR_C1_PMON_EVNT_SEL3","MSR_C1_PMON_EVNT_SEL4","MSR_C1_PMON_EVNT_SEL5","MSR_C2_PMON_BOX_CTRL","MSR_C2_PMON_BOX_OVF_CTRL","MSR_C2_PMON_BOX_STATUS","MSR_C2_PMON_CTR0","MSR_C2_PMON_CTR1","MSR_C2_PMON_CTR2","MSR_C2_PMON_CTR3","MSR_C2_PMON_CTR4","MSR_C2_PMON_CTR5","MSR_C2_PMON_EVNT_SEL0","MSR_C2_PMON_EVNT_SEL1","MSR_C2_PMON_EVNT_SEL2","MSR_C2_PMON_EVNT_SEL3","MSR_C2_PMON_EVNT_SEL4","MSR_C2_PMON_EVNT_SEL5","MSR_C3_PMON_BOX_CTRL","MSR_C3_PMON_BOX_OVF_CTRL","MSR_C3_PMON_BOX_STATUS","MSR_C3_PMON_CTR0","MSR_C3_PMON_CTR1","MSR_C3_PMON_CTR2","MSR_C3_PMON_CTR3","MSR_C3_PMON_CTR4","MSR_C3_PMON_CTR5","MSR_C3_PMON_EVNT_SEL0","MSR_C3_PMON_EVNT_SEL1","MSR_C3_PMON_EVNT_SEL2","MSR_C3_PMON_EVNT_SEL3","MSR_C3_PMON_EVNT_SEL4","MSR_C3_PMON_EVNT_SEL5","MSR_C4_PMON_BOX_CTRL","MSR_C4_PMON_BOX_OVF_CTRL","MSR_C4_PMON_BOX_STATUS","MSR_C4_PMON_CTR0","MSR_C4_PMON_CTR1","MSR_C4_PMON_CTR2","MSR_C4_PMON_CTR3","MSR_C4_PMON_CTR4","MSR_C4_PMON_CTR5","MSR_C4_PMON_EVNT_SEL0","MSR_C4_PMON_EVNT_SEL1","MSR_C4_PMON_EVNT_SEL2","MSR_C4_PMON_EVNT_SEL3","MSR_C4_PMON_EVNT_SEL4","MSR_C4_PMON_EVNT_SEL5","MSR_C5_PMON_BOX_CTRL","MSR_C5_PMON_BOX_OVF_CTRL","MSR_C5_PMON_BOX_STATUS","MSR_C5_PMON_CTR0","MSR_C5_PMON_CTR1","MSR_C5_PMON_CTR2","MSR_C5_PMON_CTR3","MSR_C5_PMON_CTR4","MSR_C5_PMON_CTR5","MSR_C5_PMON_EVNT_SEL0","MSR_C5_PMON_EVNT_SEL1","MSR_C5_PMON_EVNT_SEL2","MSR_C5_PMON_EVNT_SEL3","MSR_C5_PMON_EVNT_SEL4","MSR_C5_PMON_EVNT_SEL5","MSR_C6_PMON_BOX_CTRL","MSR_C6_PMON_BOX_OVF_CTRL","MSR_C6_PMON_BOX_STATUS","MSR_C6_PMON_CTR0","MSR_C6_PMON_CTR1","MSR_C6_PMON_CTR2","MSR_C6_PMON_CTR3","MSR_C6_PMON_CTR4","MSR_C6_PMON_CTR5","MSR_C6_PMON_EVNT_SEL0","MSR_C6_PMON_EVNT_SEL1","MSR_C6_PMON_EVNT_SEL2","MSR_C6_PMON_EVNT_SEL3","MSR_C6_PMON_EVNT_SEL4","MSR_C6_PMON_EVNT_SEL5","MSR_C7_PMON_BOX_CTRL","MSR_C7_PMON_BOX_OVF_CTRL","MSR_C7_PMON_BOX_STATUS","MSR_C7_PMON_CTR0","MSR_C7_PMON_CTR1","MSR_C7_PMON_CTR2","MSR_C7_PMON_CTR3","MSR_C7_PMON_CTR4","MSR_C7_PMON_CTR5","MSR_C7_PMON_EVNT_SEL0","MSR_C7_PMON_EVNT_SEL1","MSR_C7_PMON_EVNT_SEL2","MSR_C7_PMON_EVNT_SEL3","MSR_C7_PMON_EVNT_SEL4","MSR_C7_PMON_EVNT_SEL5","MSR_C8_PMON_BOX_CTRL","MSR_C8_PMON_BOX_OVF_CTRL","MSR_C8_PMON_BOX_STATUS","MSR_C8_PMON_CTR0","MSR_C8_PMON_CTR1","MSR_C8_PMON_CTR2","MSR_C8_PMON_CTR3","MSR_C8_PMON_CTR4","MSR_C8_PMON_CTR5","MSR_C8_PMON_EVNT_SEL0","MSR_C8_PMON_EVNT_SEL1","MSR_C8_PMON_EVNT_SEL2","MSR_C8_PMON_EVNT_SEL3","MSR_C8_PMON_EVNT_SEL4","MSR_C8_PMON_EVNT_SEL5","MSR_C9_PMON_BOX_CTRL","MSR_C9_PMON_BOX_OVF_CTRL","MSR_C9_PMON_BOX_STATUS","MSR_C9_PMON_CTR0","MSR_C9_PMON_CTR1","MSR_C9_PMON_CTR2","MSR_C9_PMON_CTR3","MSR_C9_PMON_CTR4","MSR_C9_PMON_CTR5","MSR_C9_PMON_EVNT_SEL0","MSR_C9_PMON_EVNT_SEL1","MSR_C9_PMON_EVNT_SEL2","MSR_C9_PMON_EVNT_SEL3","MSR_C9_PMON_EVNT_SEL4","MSR_C9_PMON_EVNT_SEL5","MSR_CONFIG_TDP_CONTROL","MSR_CONFIG_TDP_LEVEL1","MSR_CONFIG_TDP_LEVEL2","MSR_CONFIG_TDP_NOMINAL","MSR_CORE_C1_RESIDENCY","MSR_CORE_C3_RESIDENCY","MSR_CORE_C4_RESIDENCY","MSR_CORE_C6_RESIDENCY","MSR_CORE_C7_RESIDENCY","MSR_CRU_ESCR0","MSR_CRU_ESCR1","MSR_CRU_ESCR2","MSR_CRU_ESCR3","MSR_CRU_ESCR4","MSR_CRU_ESCR5","MSR_DAC_ESCR0","MSR_DAC_ESCR1","MSR_DEBUGCTLA","MSR_DEBUGCTLB","MSR_DRAM_ENERGY_STATUS","MSR_DRAM_PERF_STATUS","MSR_DRAM_POWER_INFO","MSR_DRAM_POWER_LIMIT","MSR_EBC_FREQUENCY_ID","MSR_EBC_HARD_POWERON","MSR_EBC_SOFT_POWERON","MSR_EBL_CR_POWERON","MSR_EFSB_DRDY0","MSR_EFSB_DRDY1","MSR_EMON_L3_CTR_CTL0","MSR_EMON_L3_CTR_CTL1","MSR_EMON_L3_CTR_CTL2","MSR_EMON_L3_CTR_CTL3","MSR_EMON_L3_CTR_CTL4","MSR_EMON_L3_CTR_CTL5","MSR_EMON_L3_CTR_CTL6","MSR_EMON_L3_CTR_CTL7","MSR_EMON_L3_GL_CTL","MSR_ERROR_CONTROL","MSR_FIRM_ESCR0","MSR_FIRM_ESCR1","MSR_FLAME_CCCR0","MSR_FLAME_CCCR1","MSR_FLAME_CCCR2","MSR_FLAME_CCCR3","MSR_FLAME_COUNTER0","MSR_FLAME_COUNTER1","MSR_FLAME_COUNTER2","MSR_FLAME_COUNTER3","MSR_FLAME_ESCR0","MSR_FLAME_ESCR1","MSR_FSB_ESCR0","MSR_FSB_ESCR1","MSR_FSB_FREQ","MSR_GQ_SNOOP_MESF","MSR_IA32_ADDR0_END","MSR_IA32_ADDR0_START","MSR_IA32_ADDR1_END","MSR_IA32_ADDR1_START","MSR_IA32_ADDR2_END","MSR_IA32_ADDR2_START","MSR_IA32_ADDR3_END","MSR_IA32_ADDR3_START","MSR_IA32_CR3_MATCH","MSR_IA32_RTIT_CTL","MSR_IA32_RTIT_OUTPUT_BASE","MSR_IA32_RTIT_OUTPUT_MASK_PTRS","MSR_IA32_RTIT_STATUS","MSR_IA32_TSX_CTRL","MSR_IFSB_BUSQ0","MSR_IFSB_BUSQ1","MSR_IFSB_CNTR7","MSR_IFSB_CTL6","MSR_IFSB_SNPQ0","MSR_IFSB_SNPQ1","MSR_IQ_CCCR0","MSR_IQ_CCCR1","MSR_IQ_CCCR2","MSR_IQ_CCCR3","MSR_IQ_CCCR4","MSR_IQ_CCCR5","MSR_IQ_COUNTER4","MSR_IQ_COUNTER5","MSR_IQ_ESCR0","MSR_IQ_ESCR1","MSR_IS_ESCR0","MSR_IS_ESCR1","MSR_ITLB_ESCR0","MSR_ITLB_ESCR1","MSR_IX_ESCR0","MSR_LASTBRANCH_0","MSR_LASTBRANCH_0_FROM_IP","MSR_LASTBRANCH_0_TO_IP","MSR_LASTBRANCH_1","MSR_LASTBRANCH_10_FROM_IP","MSR_LASTBRANCH_10_TO_IP","MSR_LASTBRANCH_11_FROM_IP","MSR_LASTBRANCH_11_TO_IP","MSR_LASTBRANCH_12_FROM_IP","MSR_LASTBRANCH_12_TO_IP","MSR_LASTBRANCH_13_FROM_IP","MSR_LASTBRANCH_13_TO_IP","MSR_LASTBRANCH_14_FROM_IP","MSR_LASTBRANCH_14_TO_IP","MSR_LASTBRANCH_15_FROM_IP","MSR_LASTBRANCH_15_TO_IP","MSR_LASTBRANCH_1_FROM_IP","MSR_LASTBRANCH_1_TO_IP","MSR_LASTBRANCH_2","MSR_LASTBRANCH_2_FROM_IP","MSR_LASTBRANCH_2_TO_IP","MSR_LASTBRANCH_3","MSR_LASTBRANCH_3_FROM_IP","MSR_LASTBRANCH_3_TO_IP","MSR_LASTBRANCH_4","MSR_LASTBRANCH_4_FROM_IP","MSR_LASTBRANCH_4_TO_IP","MSR_LASTBRANCH_5","MSR_LASTBRANCH_5_FROM_IP","MSR_LASTBRANCH_5_TO_IP","MSR_LASTBRANCH_6","MSR_LASTBRANCH_6_FROM_IP","MSR_LASTBRANCH_6_TO_IP","MSR_LASTBRANCH_7","MSR_LASTBRANCH_7_FROM_IP","MSR_LASTBRANCH_7_TO_IP","MSR_LASTBRANCH_8_FROM_IP","MSR_LASTBRANCH_8_TO_IP","MSR_LASTBRANCH_9_FROM_IP","MSR_LASTBRANCH_9_TO_IP","MSR_LASTBRANCH_TOS","MSR_LBR_SELECT","MSR_LER_FROM_LIP","MSR_LER_TO_LIP","MSR_M0_PMON_ADDR_MASK","MSR_M0_PMON_ADDR_MATCH","MSR_M0_PMON_BOX_CTRL","MSR_M0_PMON_BOX_OVF_CTRL","MSR_M0_PMON_BOX_STATUS","MSR_M0_PMON_CTR0","MSR_M0_PMON_CTR1","MSR_M0_PMON_CTR2","MSR_M0_PMON_CTR3","MSR_M0_PMON_CTR4","MSR_M0_PMON_CTR5","MSR_M0_PMON_DSP","MSR_M0_PMON_EVNT_SEL0","MSR_M0_PMON_EVNT_SEL1","MSR_M0_PMON_EVNT_SEL2","MSR_M0_PMON_EVNT_SEL3","MSR_M0_PMON_EVNT_SEL4","MSR_M0_PMON_EVNT_SEL5","MSR_M0_PMON_ISS","MSR_M0_PMON_MAP","MSR_M0_PMON_MM_CONFIG","MSR_M0_PMON_MSC_THR","MSR_M0_PMON_PGT","MSR_M0_PMON_PLD","MSR_M0_PMON_TIMESTAMP","MSR_M0_PMON_ZDP","MSR_M1_PMON_ADDR_MASK","MSR_M1_PMON_ADDR_MATCH","MSR_M1_PMON_BOX_CTRL","MSR_M1_PMON_BOX_OVF_CTRL","MSR_M1_PMON_BOX_STATUS","MSR_M1_PMON_CTR0","MSR_M1_PMON_CTR1","MSR_M1_PMON_CTR2","MSR_M1_PMON_CTR3","MSR_M1_PMON_CTR4","MSR_M1_PMON_CTR5","MSR_M1_PMON_DSP","MSR_M1_PMON_EVNT_SEL0","MSR_M1_PMON_EVNT_SEL1","MSR_M1_PMON_EVNT_SEL2","MSR_M1_PMON_EVNT_SEL3","MSR_M1_PMON_EVNT_SEL4","MSR_M1_PMON_EVNT_SEL5","MSR_M1_PMON_ISS","MSR_M1_PMON_MAP","MSR_M1_PMON_MM_CONFIG","MSR_M1_PMON_MSC_THR","MSR_M1_PMON_PGT","MSR_M1_PMON_PLD","MSR_M1_PMON_TIMESTAMP","MSR_M1_PMON_ZDP","MSR_MC0_MISC","MSR_MC10_ADDR","MSR_MC10_CTL","MSR_MC10_MISC","MSR_MC10_STATUS","MSR_MC11_ADDR","MSR_MC11_CTL","MSR_MC11_MISC","MSR_MC11_STATUS","MSR_MC12_ADDR","MSR_MC12_CTL","MSR_MC12_MISC","MSR_MC12_STATUS","MSR_MC13_ADDR","MSR_MC13_CTL","MSR_MC13_MISC","MSR_MC13_STATUS","MSR_MC14_ADDR","MSR_MC14_CTL","MSR_MC14_MISC","MSR_MC14_STATUS","MSR_MC15_ADDR","MSR_MC15_CTL","MSR_MC15_MISC","MSR_MC15_STATUS","MSR_MC16_ADDR","MSR_MC16_CTL","MSR_MC16_MISC","MSR_MC16_STATUS","MSR_MC17_ADDR","MSR_MC17_CTL","MSR_MC17_MISC","MSR_MC17_STATUS","MSR_MC18_ADDR","MSR_MC18_CTL","MSR_MC18_MISC","MSR_MC18_STATUS","MSR_MC19_ADDR","MSR_MC19_CTL","MSR_MC19_MISC","MSR_MC19_STATUS","MSR_MC1_MISC","MSR_MC20_ADDR","MSR_MC20_CTL","MSR_MC20_MISC","MSR_MC20_STATUS","MSR_MC21_ADDR","MSR_MC21_CTL","MSR_MC21_MISC","MSR_MC21_STATUS","MSR_MC22_ADDR","MSR_MC22_CTL","MSR_MC22_MISC","MSR_MC22_STATUS","MSR_MC23_ADDR","MSR_MC23_CTL","MSR_MC23_MISC","MSR_MC23_STATUS","MSR_MC24_ADDR","MSR_MC24_CTL","MSR_MC24_MISC","MSR_MC24_STATUS","MSR_MC25_ADDR","MSR_MC25_CTL","MSR_MC25_MISC","MSR_MC25_STATUS","MSR_MC26_ADDR","MSR_MC26_CTL","MSR_MC26_MISC","MSR_MC26_STATUS","MSR_MC2_MISC","MSR_MC3_ADDR","MSR_MC3_CTL","MSR_MC3_MISC","MSR_MC3_STATUS","MSR_MC4_ADDR","MSR_MC4_CTL","MSR_MC4_CTL2","MSR_MC4_MISC","MSR_MC4_STATUS","MSR_MC5_ADDR","MSR_MC5_CTL","MSR_MC5_MISC","MSR_MC5_STATUS","MSR_MC6_ADDR","MSR_MC6_CTL","MSR_MC6_MISC","MSR_MC6_STATUS","MSR_MC7_ADDR","MSR_MC7_CTL","MSR_MC7_MISC","MSR_MC7_STATUS","MSR_MC8_ADDR","MSR_MC8_CTL","MSR_MC8_MISC","MSR_MC8_STATUS","MSR_MC9_ADDR","MSR_MC9_CTL","MSR_MC9_MISC","MSR_MC9_STATUS","MSR_MCG_MISC","MSR_MCG_R10","MSR_MCG_R11","MSR_MCG_R12","MSR_MCG_R13","MSR_MCG_R14","MSR_MCG_R8","MSR_MCG_R9","MSR_MCG_RAX","MSR_MCG_RBP","MSR_MCG_RBX","MSR_MCG_RCX","MSR_MCG_RDI","MSR_MCG_RDX","MSR_MCG_RFLAGS","MSR_MCG_RIP","MSR_MCG_RSI","MSR_MISC_PWR_MGMT","MSR_MOB_ESCR0","MSR_MOB_ESCR1","MSR_MS_CCCR0","MSR_MS_CCCR1","MSR_MS_CCCR2","MSR_MS_CCCR3","MSR_MS_COUNTER0","MSR_MS_COUNTER1","MSR_MS_COUNTER2","MSR_MS_COUNTER3","MSR_MS_ESCR0","MSR_MS_ESCR1","MSR_OFFCORE_RSP_0","MSR_OFFCORE_RSP_1","MSR_PEBS_ENABLE","MSR_PEBS_LD_LAT","MSR_PEBS_MATRIX_VERT","MSR_PEBS_NUM_ALT","MSR_PERF_CAPABILITIES","MSR_PERF_FIXED_CTR0","MSR_PERF_FIXED_CTR1","MSR_PERF_FIXED_CTR2","MSR_PERF_FIXED_CTR_CTRL","MSR_PERF_GLOBAL_CTRL","MSR_PERF_GLOBAL_OVF_CTRL","MSR_PERF_GLOBAL_STAUS","MSR_PERF_STATUS","MSR_PKGC3_IRTL","MSR_PKGC6_IRTL","MSR_PKGC7_IRTL","MSR_PKG_C10_RESIDENCY","MSR_PKG_C2_RESIDENCY","MSR_PKG_C3_RESIDENCY","MSR_PKG_C4_RESIDENCY","MSR_PKG_C6C_RESIDENCY","MSR_PKG_C6_RESIDENCY","MSR_PKG_C7_RESIDENCY","MSR_PKG_C9_RESIDENCY","MSR_PKG_CST_CONFIG_CONTROL","MSR_PKG_ENERGY_STATUS","MSR_PKG_PERF_STATUS","MSR_PKG_POWER_INFO","MSR_PKG_POWER_LIMIT","MSR_PLATFORM_BRV","MSR_PLATFORM_ID","MSR_PLATFORM_INFO","MSR_PMG_IO_CAPTURE_BASE","MSR_PMH_ESCR0","MSR_PMH_ESCR1","MSR_POWER_CTL","MSR_PP0_ENERGY_STATUS","MSR_PP0_PERF_STATUS","MSR_PP0_POLICY","MSR_PP0_POWER_LIMIT","MSR_PP1_ENERGY_STATUS","MSR_PP1_POLICY","MSR_PP1_POWER_LIMIT","MSR_R0_PMON_BOX_CTRL","MSR_R0_PMON_BOX_OVF_CTRL","MSR_R0_PMON_BOX_STATUS","MSR_R0_PMON_CTR0","MSR_R0_PMON_CTR1","MSR_R0_PMON_CTR2","MSR_R0_PMON_CTR3","MSR_R0_PMON_CTR4","MSR_R0_PMON_CTR5","MSR_R0_PMON_CTR6","MSR_R0_PMON_CTR7","MSR_R0_PMON_EVNT_SEL0","MSR_R0_PMON_EVNT_SEL1","MSR_R0_PMON_EVNT_SEL2","MSR_R0_PMON_EVNT_SEL3","MSR_R0_PMON_EVNT_SEL4","MSR_R0_PMON_EVNT_SEL5","MSR_R0_PMON_EVNT_SEL6","MSR_R0_PMON_EVNT_SEL7","MSR_R0_PMON_IPERF0_P0","MSR_R0_PMON_IPERF0_P1","MSR_R0_PMON_IPERF0_P2","MSR_R0_PMON_IPERF0_P3","MSR_R0_PMON_IPERF0_P4","MSR_R0_PMON_IPERF0_P5","MSR_R0_PMON_IPERF0_P6","MSR_R0_PMON_IPERF0_P7","MSR_R0_PMON_QLX_P0","MSR_R0_PMON_QLX_P1","MSR_R0_PMON_QLX_P2","MSR_R0_PMON_QLX_P3","MSR_R1_PMON_BOX_CTRL","MSR_R1_PMON_BOX_OVF_CTRL","MSR_R1_PMON_BOX_STATUS","MSR_R1_PMON_CTR10","MSR_R1_PMON_CTR11","MSR_R1_PMON_CTR12","MSR_R1_PMON_CTR13","MSR_R1_PMON_CTR14","MSR_R1_PMON_CTR15","MSR_R1_PMON_CTR8","MSR_R1_PMON_CTR9","MSR_R1_PMON_EVNT_SEL10","MSR_R1_PMON_EVNT_SEL11","MSR_R1_PMON_EVNT_SEL12","MSR_R1_PMON_EVNT_SEL13","MSR_R1_PMON_EVNT_SEL14","MSR_R1_PMON_EVNT_SEL15","MSR_R1_PMON_EVNT_SEL8","MSR_R1_PMON_EVNT_SEL9","MSR_R1_PMON_IPERF1_P10","MSR_R1_PMON_IPERF1_P11","MSR_R1_PMON_IPERF1_P12","MSR_R1_PMON_IPERF1_P13","MSR_R1_PMON_IPERF1_P14","MSR_R1_PMON_IPERF1_P15","MSR_R1_PMON_IPERF1_P8","MSR_R1_PMON_IPERF1_P9","MSR_R1_PMON_QLX_P4","MSR_R1_PMON_QLX_P5","MSR_R1_PMON_QLX_P6","MSR_R1_PMON_QLX_P7","MSR_RAPL_POWER_UNIT","MSR_RAT_ESCR0","MSR_RAT_ESCR1","MSR_S0_PMON_BOX_CTRL","MSR_S0_PMON_BOX_OVF_CTRL","MSR_S0_PMON_BOX_STATUS","MSR_S0_PMON_CTR0","MSR_S0_PMON_CTR1","MSR_S0_PMON_CTR2","MSR_S0_PMON_CTR3","MSR_S0_PMON_EVNT_SEL0","MSR_S0_PMON_EVNT_SEL1","MSR_S0_PMON_EVNT_SEL2","MSR_S0_PMON_EVNT_SEL3","MSR_S0_PMON_MASK","MSR_S0_PMON_MATCH","MSR_S1_PMON_BOX_CTRL","MSR_S1_PMON_BOX_OVF_CTRL","MSR_S1_PMON_BOX_STATUS","MSR_S1_PMON_CTR0","MSR_S1_PMON_CTR1","MSR_S1_PMON_CTR2","MSR_S1_PMON_CTR3","MSR_S1_PMON_EVNT_SEL0","MSR_S1_PMON_EVNT_SEL1","MSR_S1_PMON_EVNT_SEL2","MSR_S1_PMON_EVNT_SEL3","MSR_S1_PMON_MASK","MSR_S1_PMON_MATCH","MSR_SAAT_ESCR0","MSR_SAAT_ESCR1","MSR_SMI_COUNT","MSR_SMM_BLOCKED","MSR_SMM_DELAYED","MSR_SMM_FEATURE_CONTROL","MSR_SMM_MCA_CAP","MSR_SMRR_PHYSMASK","MSR_SSU_ESCR0","MSR_TBPU_ESCR0","MSR_TBPU_ESCR1","MSR_TC_ESCR0","MSR_TC_ESCR1","MSR_TEMPERATURE_TARGET","MSR_THERM2_CTL","MSR_TURBO_ACTIVATION_RATIO","MSR_TURBO_POWER_CURRENT_LIMIT","MSR_TURBO_RATIO_LIMIT","MSR_U2L_ESCR0","MSR_U2L_ESCR1","MSR_UNCORE_ADDR_OPCODE_MATCH","MSR_UNCORE_FIXED_CTR0","MSR_UNCORE_FIXED_CTR_CTRL","MSR_UNCORE_PERFEVTSEL0","MSR_UNCORE_PERFEVTSEL1","MSR_UNCORE_PERFEVTSEL2","MSR_UNCORE_PERFEVTSEL3","MSR_UNCORE_PERFEVTSEL4","MSR_UNCORE_PERFEVTSEL5","MSR_UNCORE_PERFEVTSEL6","MSR_UNCORE_PERFEVTSEL7","MSR_UNCORE_PERF_GLOBAL_CTRL","MSR_UNCORE_PERF_GLOBAL_OVF_CTRL","MSR_UNCORE_PERF_GLOBAL_STATUS","MSR_UNCORE_PMC0","MSR_UNCORE_PMC1","MSR_UNCORE_PMC2","MSR_UNCORE_PMC3","MSR_UNCORE_PMC4","MSR_UNCORE_PMC5","MSR_UNCORE_PMC6","MSR_UNCORE_PMC7","MSR_UNC_ARB_PERFEVTSEL0","MSR_UNC_ARB_PERFEVTSEL1","MSR_UNC_ARB_PER_CTR0","MSR_UNC_ARB_PER_CTR1","MSR_UNC_CBO_0_PERFEVTSEL0","MSR_UNC_CBO_0_PERFEVTSEL1","MSR_UNC_CBO_0_PER_CTR0","MSR_UNC_CBO_0_PER_CTR1","MSR_UNC_CBO_1_PERFEVTSEL0","MSR_UNC_CBO_1_PERFEVTSEL1","MSR_UNC_CBO_1_PER_CTR0","MSR_UNC_CBO_1_PER_CTR1","MSR_UNC_CBO_2_PERFEVTSEL0","MSR_UNC_CBO_2_PERFEVTSEL1","MSR_UNC_CBO_2_PER_CTR0","MSR_UNC_CBO_2_PER_CTR1","MSR_UNC_CBO_3_PERFEVTSEL0","MSR_UNC_CBO_3_PERFEVTSEL1","MSR_UNC_CBO_3_PER_CTR0","MSR_UNC_CBO_3_PER_CTR1","MSR_UNC_CBO_CONFIG","MSR_UNC_PERF_FIXED_CTR","MSR_UNC_PERF_FIXED_CTRL","MSR_UNC_PERF_GLOBAL_CTRL","MSR_UNC_PERF_GLOBAL_STATUS","MSR_U_PMON_CTR","MSR_U_PMON_EVNT_SEL","MSR_U_PMON_GLOBAL_CTRL","MSR_U_PMON_GLOBAL_OVF_CTRL","MSR_U_PMON_GLOBAL_STATUS","MSR_W_PMON_BOX_CTRL","MSR_W_PMON_BOX_OVF_CTRL","MSR_W_PMON_BOX_STATUS","MSR_W_PMON_CTR0","MSR_W_PMON_CTR1","MSR_W_PMON_CTR2","MSR_W_PMON_CTR3","MSR_W_PMON_EVNT_SEL0","MSR_W_PMON_EVNT_SEL1","MSR_W_PMON_EVNT_SEL2","MSR_W_PMON_EVNT_SEL3","MSR_W_PMON_FIXED_CTR","MSR_W_PMON_FIXED_CTR_CTL","P5_MC_ADDR","P5_MC_TYPE","ROB_CR_BKUPTMPDR6","SYSENTER_CS_MSR","SYSENTER_EIP_MSR","SYSENTER_ESP_MSR","TEST_CTL","TSC","rdmsr","wrmsr","RdRand","RdSeed","fill_random","fill_random","rdrand16","rdrand32","rdrand64","rdrand_slice","rdseed16","rdseed32","rdseed64","rdseed_slice","BuildDescriptor","CallGate","CallGate16","CallGate32","CodeSegmentType","DataSegmentType","Descriptor","DescriptorBuilder","Execute","ExecuteAccessed","ExecuteConforming","ExecuteConformingAccessed","ExecuteRead","ExecuteReadAccessed","ExecuteReadConforming","ExecuteReadConformingAccessed","GateDescriptorBuilder","InterruptGate","InterruptGate16","InterruptGate32","LDT","LDT","LdtDescriptorBuilder","NULL","RPL_0","RPL_1","RPL_2","RPL_3","ReadExpand","ReadExpandAccessed","ReadOnly","ReadOnlyAccessed","ReadWrite","ReadWriteAccessed","ReadWriteExpand","ReadWriteExpandAccessed","SegmentDescriptorBuilder","SegmentSelector","SystemDescriptorTypes32","SystemDescriptorTypes64","TI_GDT","TI_LDT","TSSAvailable16","TSSBusy16","TaskGate","TaskGateDescriptorBuilder","TrapGate","TrapGate16","TrapGate32","TssAvailable","TssAvailable32","TssBusy","TssBusy32","all","as_u64","avl","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","call_gate_descriptor","clone","clone","clone","clone","clone","clone","cmp","code_descriptor","code_descriptor","complement","contains","cs","data_descriptor","data_descriptor","db","default","difference","dpl","ds","empty","eq","eq","eq","eq","eq","es","extend","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","fs","gs","hash","index","insert","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","interrupt_descriptor","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","ist","l","ldt_descriptor","ldt_descriptor","ldt_descriptor","limit_granularity_4kb","load_cs","load_ds","load_es","load_fs","load_gs","load_ss","lower","new","not","partial_cmp","present","remove","set","set_avl","set_base_limit","set_db","set_dpl","set_g","set_l","set_p","set_s","set_selector_offset","set_type","ss","sub","sub_assign","symmetric_difference","task_gate_descriptor","task_gate_descriptor","toggle","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","trap_gate_descriptor","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_descriptor","tss_descriptor","tss_descriptor","tss_descriptor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upper","load_tr","segmentation","tr","rdtsc","rdtscp","flush","flush_all","Err","Ok","Result","VmFail","VmFailInvalid","VmFailValid","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","vmcs","control","guest","host","ro","ACK_INTERRUPT_ON_EXIT","APIC_ACCESS_ADDR_FULL","APIC_ACCESS_ADDR_HIGH","CLEAR_IA32_BNDCFGS","CLEAR_IA32_RTIT_CTL","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CONCEAL_VMX_FROM_PT","CR0_GUEST_HOST_MASK","CR0_READ_SHADOW","CR3_LOAD_EXITING","CR3_STORE_EXITING","CR3_TARGET_COUNT","CR3_TARGET_VALUE0","CR3_TARGET_VALUE1","CR3_TARGET_VALUE2","CR3_TARGET_VALUE3","CR4_GUEST_HOST_MASK","CR4_READ_SHADOW","CR8_LOAD_EXITING","CR8_STORE_EXITING","DEACTIVATE_DUAL_MONITOR","DTABLE_EXITING","ENABLE_EPT","ENABLE_INVPCID","ENABLE_PML","ENABLE_RDTSCP","ENABLE_USER_WAIT_PAUSE","ENABLE_VM_FUNCTIONS","ENABLE_VPID","ENABLE_XSAVES_XRSTORS","ENCLS_EXITING","ENCLS_EXITING_BITMAP_FULL","ENCLS_EXITING_BITMAP_HIGH","ENCLV_EXITING","ENTRY_TO_SMM","EOI_EXIT0_FULL","EOI_EXIT0_HIGH","EOI_EXIT1_FULL","EOI_EXIT1_HIGH","EOI_EXIT2_FULL","EOI_EXIT2_HIGH","EOI_EXIT3_FULL","EOI_EXIT3_HIGH","EPTP_FULL","EPTP_HIGH","EPTP_INDEX","EPTP_LIST_ADDR_FULL","EPTP_LIST_ADDR_HIGH","EPT_VIOLATION_VE","EXCEPTION_BITMAP","EXECUTIVE_VMCS_PTR_FULL","EXECUTIVE_VMCS_PTR_HIGH","EXTERNAL_INTERRUPT_EXITING","EntryControls","ExitControls","HLT_EXITING","HOST_ADDRESS_SPACE_SIZE","IA32E_MODE_GUEST","INTEL_PT_GUEST_PHYSICAL","INTERRUPT_WINDOW_EXITING","INVLPG_EXITING","IO_BITMAP_A_ADDR_FULL","IO_BITMAP_A_ADDR_HIGH","IO_BITMAP_B_ADDR_FULL","IO_BITMAP_B_ADDR_HIGH","LOAD_DEBUG_CONTROLS","LOAD_IA32_BNDCFGS","LOAD_IA32_EFER","LOAD_IA32_EFER","LOAD_IA32_PAT","LOAD_IA32_PAT","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_PERF_GLOBAL_CTRL","LOAD_IA32_RTIT_CTL","MODE_BASED_EPT","MONITOR_EXITING","MONITOR_TRAP_FLAG","MOV_DR_EXITING","MSR_BITMAPS_ADDR_FULL","MSR_BITMAPS_ADDR_HIGH","MWAIT_EXITING","NMI_EXITING","NMI_WINDOW_EXITING","PAGE_FAULT_ERR_CODE_MASK","PAGE_FAULT_ERR_CODE_MATCH","PAUSE_EXITING","PAUSE_LOOP_EXITING","PINBASED_EXEC_CONTROLS","PLE_GAP","PLE_WINDOW","PML_ADDR_FULL","PML_ADDR_HIGH","POSTED_INTERRUPTS","POSTED_INTERRUPT_DESC_ADDR_FULL","POSTED_INTERRUPT_DESC_ADDR_HIGH","POSTED_INTERRUPT_NOTIFICATION_VECTOR","PRIMARY_PROCBASED_EXEC_CONTROLS","PinbasedControls","PrimaryControls","RDPMC_EXITING","RDRAND_EXITING","RDSEED_EXITING","RDTSC_EXITING","SAVE_DEBUG_CONTROLS","SAVE_IA32_EFER","SAVE_IA32_PAT","SAVE_VMX_PREEMPTION_TIMER","SECONDARY_CONTROLS","SECONDARY_PROCBASED_EXEC_CONTROLS","SUBPAGE_PERM_TABLE_PTR_FULL","SUBPAGE_PERM_TABLE_PTR_HIGH","SUB_PAGE_EPT","SecondaryControls","TPR_THRESHOLD","TSC_MULTIPLIER_FULL","TSC_MULTIPLIER_HIGH","TSC_OFFSET_FULL","TSC_OFFSET_HIGH","UNCOND_IO_EXITING","UNRESTRICTED_GUEST","USE_IO_BITMAPS","USE_MSR_BITMAPS","USE_TPR_SHADOW","USE_TSC_OFFSETTING","USE_TSC_SCALING","VIRTUALIZE_APIC","VIRTUALIZE_APIC_REGISTER","VIRTUALIZE_X2APIC","VIRTUAL_INTERRUPT_DELIVERY","VIRTUAL_NMIS","VIRT_APIC_ADDR_FULL","VIRT_APIC_ADDR_HIGH","VIRT_EXCEPTION_INFO_ADDR_FULL","VIRT_EXCEPTION_INFO_ADDR_HIGH","VMCS_SHADOWING","VMENTRY_CONTROLS","VMENTRY_EXCEPTION_ERR_CODE","VMENTRY_INSTRUCTION_LEN","VMENTRY_INTERRUPTION_INFO_FIELD","VMENTRY_MSR_LOAD_ADDR_FULL","VMENTRY_MSR_LOAD_ADDR_HIGH","VMENTRY_MSR_LOAD_COUNT","VMEXIT_CONTROLS","VMEXIT_MSR_LOAD_ADDR_FULL","VMEXIT_MSR_LOAD_ADDR_HIGH","VMEXIT_MSR_LOAD_COUNT","VMEXIT_MSR_STORE_ADDR_FULL","VMEXIT_MSR_STORE_ADDR_HIGH","VMEXIT_MSR_STORE_COUNT","VMREAD_BITMAP_ADDR_FULL","VMREAD_BITMAP_ADDR_HIGH","VMWRITE_BITMAP_ADDR_FULL","VMWRITE_BITMAP_ADDR_HIGH","VMX_PREEMPTION_TIMER","VM_FUNCTION_CONTROLS_FULL","VM_FUNCTION_CONTROLS_HIGH","VPID","WBINVD_EXITING","XSS_EXITING_BITMAP_FULL","XSS_EXITING_BITMAP_HIGH","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ACTIVITY_STATE","CR0","CR3","CR4","CS_ACCESS_RIGHTS","CS_BASE","CS_LIMIT","CS_SELECTOR","DR7","DS_ACCESS_RIGHTS","DS_BASE","DS_LIMIT","DS_SELECTOR","ES_ACCESS_RIGHTS","ES_BASE","ES_LIMIT","ES_SELECTOR","FS_ACCESS_RIGHTS","FS_BASE","FS_LIMIT","FS_SELECTOR","GDTR_BASE","GDTR_LIMIT","GS_ACCESS_RIGHTS","GS_BASE","GS_LIMIT","GS_SELECTOR","IA32_BNDCFGS_FULL","IA32_BNDCFGS_HIGH","IA32_DEBUGCTL_FULL","IA32_DEBUGCTL_HIGH","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_RTIT_CTL_FULL","IA32_RTIT_CTL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","IDTR_LIMIT","INTERRUPTIBILITY_STATE","INTERRUPT_STATUS","LDTR_ACCESS_RIGHTS","LDTR_BASE","LDTR_LIMIT","LDTR_SELECTOR","LINK_PTR_FULL","LINK_PTR_HIGH","PDPTE0_FULL","PDPTE0_HIGH","PDPTE1_FULL","PDPTE1_HIGH","PDPTE2_FULL","PDPTE2_HIGH","PDPTE3_FULL","PDPTE3_HIGH","PENDING_DBG_EXCEPTIONS","PML_INDEX","RFLAGS","RIP","RSP","SMBASE","SS_ACCESS_RIGHTS","SS_BASE","SS_LIMIT","SS_SELECTOR","TR_ACCESS_RIGHTS","TR_BASE","TR_LIMIT","TR_SELECTOR","VMX_PREEMPTION_TIMER_VALUE","CR0","CR3","CR4","CS_SELECTOR","DS_SELECTOR","ES_SELECTOR","FS_BASE","FS_SELECTOR","GDTR_BASE","GS_BASE","GS_SELECTOR","IA32_EFER_FULL","IA32_EFER_HIGH","IA32_PAT_FULL","IA32_PAT_HIGH","IA32_PERF_GLOBAL_CTRL_FULL","IA32_PERF_GLOBAL_CTRL_HIGH","IA32_SYSENTER_CS","IA32_SYSENTER_EIP","IA32_SYSENTER_ESP","IDTR_BASE","RIP","RSP","SS_SELECTOR","TR_BASE","TR_SELECTOR","EXIT_QUALIFICATION","EXIT_REASON","GUEST_LINEAR_ADDR","GUEST_PHYSICAL_ADDR_FULL","GUEST_PHYSICAL_ADDR_HIGH","IDT_VECTORING_ERR_CODE","IDT_VECTORING_INFO","IO_RCX","IO_RDI","IO_RIP","IO_RSI","VMEXIT_INSTRUCTION_INFO","VMEXIT_INSTRUCTION_LEN","VMEXIT_INTERRUPTION_ERR_CODE","VMEXIT_INTERRUPTION_INFO","VM_INSTRUCTION_ERROR"],"q":[[0,"x86"],[40,"x86::apic"],[165,"x86::apic::ioapic"],[179,"x86::apic::x2apic"],[204,"x86::apic::xapic"],[271,"x86::bits16"],[272,"x86::bits32"],[276,"x86::bits32::eflags"],[349,"x86::bits32::paging"],[708,"x86::bits32::task"],[745,"x86::bits64"],[753,"x86::bits64::paging"],[1391,"x86::bits64::registers"],[1394,"x86::bits64::rflags"],[1470,"x86::bits64::segmentation"],[1493,"x86::bits64::sgx"],[1517,"x86::bits64::syscall"],[1524,"x86::bits64::task"],[1545,"x86::bits64::vmx"],[1554,"x86::controlregs"],[1749,"x86::cpuid"],[2875,"x86::cpuid::native_cpuid"],[2876,"x86::debugregs"],[3021,"x86::dtables"],[3041,"x86::fence"],[3044,"x86::io"],[3050,"x86::irq"],[3143,"x86::msr"],[4211,"x86::random"],[4223,"x86::segmentation"],[4446,"x86::task"],[4449,"x86::time"],[4451,"x86::tlb"],[4453,"x86::vmx"],[4468,"x86::vmx::vmcs"],[4472,"x86::vmx::vmcs::control"],[4868,"x86::vmx::vmcs::guest"],[4943,"x86::vmx::vmcs::host"],[4969,"x86::vmx::vmcs::ro"],[4985,"core::fmt"],[4986,"core::fmt"],[4987,"core::any"],[4988,"core::cmp"],[4989,"core::iter::traits::collect"],[4990,"core::option"],[4991,"core::hash"],[4992,"core::convert"],[4993,"core::marker"],[4994,"core::fmt"]],"d":["x86 Protection levels","","","","","Register information and driver to program xAPIC, X2APIC …","Data structures and functions used by 16-bit mode.","Data structures and functions used by 32-bit mode.","Data structures and functions used by IA-32e but not …","","","","Functions to read and write control registers. See Intel …","Support for the CPUID instructions.","A short-cut to the architecture (bits32 or bits64) this …","Functions to read and write debug registers.","Functions and data-structures for working with descriptor …","","Intel fence instructions","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Stops instruction execution and places the processor in a …","Generate a software interrupt. This is a macro argument …","Calls <code>U::from(self)</code>.","I/O port functionality.","Shared interrupt description and set-up code. See the …","MSR value list and function to read and write them.","Instructions to generate random bits directly from the …","Read Processor ID","Functionality to manipulate segment registers, build …","","Helpers to program the task state segment. See Intel 3a, …","Functions to read time stamp counters on x86.","Functions to flush the translation lookaside buffer (TLB).","","","","Data structures and definitions used by Virtual Machine …","","","Abstracts common interface of local APIC (x2APIC, xAPIC) …","Encodes the id of a core.","","","Specify IPI Delivery Mode","Specify Delivery Status","Specify IPI Destination Mode.","IPI Destination Shorthand","","Delivers the interrupt specified in the vector field to …","Abstract the IPI control register","","Delivers an INIT request to the target processor or …","IPI Level","","","Same as fixed mode, except that the interrupt is delivered …","","Delivers an NMI interrupt to the target processor or …","","","Delivers an SMI interrupt to the target processor or …","","Sends a special start-up IPI (called a SIPI) to the target …","IPI Trigger Mode","A core destination encoded as an x2APIC ID.","A core destination encoded as an xAPIC ID.","Reserved","","","","","","","","","","","","","","","","","Is a bootstrap processor?","","End Of Interrupt – Acknowledge interrupt delivery.","","","","","","","","","","","","","","","","","Short-hand to create a Icr value that will work for an …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return APIC ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","To control an I/O APIC.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","Returns the logical APIC ID.","Get lower 32-bits of the Icr register.","Send a generic IPI.","","","","","","","","","","","","","","","","","Enable TSC deadline timer.","Set TSC deadline value.","","","","","","","","","Get upper 32-bits of the Icr register.","Read APIC version","x2APIC, the most recent APIC on x86 for large servers with …","Returns the logical address relative to a cluster for a …","Returns the cluster ID a given APIC ID belongs to …","Returns the Logical x2APIC ID.","Information about the xAPIC for the local APIC.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Instantiate a new IoApic.","Number of supported interrupts by this IO APIC.","","","","","Represents an x2APIC driver instance.","Attach to APIC (enable x2APIC mode, initialize LINT0)","","","Is a bootstrap processor?","","Detach from APIC (disable x2APIC and xAPIC mode).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local x2APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","In x2APIC mode, the 32-bit logical x2APIC ID, can be read …","Create a new x2APIC driver object for the local core.","Send a generic IPI.","Send an IPI to yourself.","","","Enable TSC timer","Set tsc deadline.","","Read APIC version.","State for the XAPIC driver.","EOI register. Write-only.","Error Status Register (ESR). Read/write. See Section …","Interrupt Command Register (ICR). Read/write. See Figure …","Interrupt Command Register (ICR). Read/write. See Figure …","Local APIC ID register. Read-only. See Section 10.12.5.1 …","Interrupt Request Register (IRR); bits 31:0. Read-only.","IRR bits 63:32. Read-only.","IRR bits 95:64. Read-only.","IRR bits 127:96. Read-only.","IRR bits 159:128. Read-only.","IRR bits 191:160. Read-only.","IRR bits 223:192. Read-only.","IRR bits 255:224. Read-only.","In-Service Register (ISR); bits 31:0. Read-only.","ISR bits 63:32. Read-only.","ISR bits 95:64. Read-only.","ISR bits 127:96. Read-only.","ISR bits 159:128. Read-only.","ISR bits 191:160. Read-only.","ISR bits 223:192. Read-only.","ISR bits 255:224. Read-only.","Logical Destination Register (LDR). Read/write in xAPIC …","LVT CMCI register. Read/write. See Figure 10-8 for …","LVT Error register. Read/write. See Figure 10-8 for …","LVT LINT0 register. Read/write. See Figure 10-8 for …","LVT LINT1 register. Read/write. See Figure 10-8 for …","LVT Performance Monitoring register. Read/write. See …","LVT Thermal Sensor register. Read/write. See Figure 10-8 …","LVT Timer register. Read/write. See Figure 10-8 for …","Processor Priority Register (PPR). Read-only.","Spurious Interrupt Vector Register (SVR). Read/write. See …","Current Count register (for Timer). Read-only.","Divide Configuration Register (DCR; for Timer). …","Initial Count register (for Timer). Read/write.","Trigger Mode Register (TMR); bits 31:0. Read-only.","TMR bits 63:32. Read-only.","TMR bits 95:64. Read-only.","TMR bits 127:96. Read-only.","TMR bits 159:128. Read-only.","TMR bits 191:160. Read-only.","TMR bits 223:192. Read-only.","TMR bits 255:224. Read-only.","Task Priority Register (TPR). Read/write. Bits 31:8 are …","Local APIC Version register. Read-only. Same version used …","Attach driver to the xAPIC (enables device).","","","Is this the bootstrap core?","Detach driver form the xAPIC (disables device).","End Of Interrupt – Acknowledge interrupt delivery.","","Returns the argument unchanged.","Read local APIC ID.","Calls <code>U::from(self)</code>.","Send a INIT IPI to a core.","Deassert INIT IPI.","Send a STARTUP IPI to a core.","","Create a new xAPIC object for the local CPU.","Send a generic IPI.","","","Enable TSC timer.","Set TSC deadline value.","","Read APIC version","","Processor state stored in the EFLAGS register.","Description of the data-structures for IA-32 paging mode.","","Helpers to program the task state segment. See Intel 3a, …","The EFLAGS register.","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","Clears the AC flag bit in EFLAGS register.","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets the AC flag bit in EFLAGS register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (4 MiB)","A type wrapping a large page with a 4 MiB buffer.","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 32 entries.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","A wrapper for a physical address.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","Page size; if set this entry maps a 4-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","A wrapper for a virtual address.","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Return address of nearest 4 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to mutable pointer.","Convert to pointer.","Convert to pointer.","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>u32</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Convert from <code>u32</code>","Convert from <code>usize</code>","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether software has accessed the …","Accessed; indicates whether software has accessed the …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if CR4.PGE = 1, determines whether the translation …","Global; if CR4.PGE = 1, determines whether the translation …","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Is this address aligned to a 4 MiB page?","Page size; if set this entry maps a 4-MByte page; …","Page-level cache disable.","Page-level cache disable.","Page-level write-through.","Page-level write-through.","If the PAT is supported, indirectly determines the memory …","If the PAT is supported, indirectly determines the memory …","Present; must be 1 to map a 4-MByte page.","Present; must be 1 to map a 4-KByte page.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Read/write; if 0, writes may not be allowed to the 4-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Offset within the 4 MiB page.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Description of the data-structures for IA-32e paging mode.","","Processor state stored in the RFLAGS register.","","Program x86 enclaves.","Invokes an OS system-call handler at privilege level 0.","Helpers to program the task state segment. See Intel 3a, …","Virtualize processor hardware for multiple software …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Accessed; indicates whether software has accessed the …","Log2 of base page size (12 bits).","Size of a base page (4 KiB)","Size of a cache-line","Dirty; if PS indicates whether software has written to the …","Dirty; if PS indicates whether software has written to the …","Dirty; indicates whether software has written to the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if CR4.PGE = 1, determines whether the translation …","Size of a huge page (1 GiB)","A type wrapping a huge page with a 1 GiB buffer.","A wrapper for an IO address (IOVA / DMA Address for …","Size of a large page (2 MiB)","A type wrapping a large page with a 2 MiB buffer.","MAXPHYADDR, which is at most 52; (use CPUID for finding …","Maximum virtual address.","Maximum supported bits for virtual addresses (with 5-level …","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a PML5 entry","Present; must be 1 to map a 1-GByte page or reference a …","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page.","Page tables have 512 = 4096 / 64 entries.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","A wrapper for a physical address.","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","A page directory.","A PD Entry consists of an address and a bunch of flags.","PD configuration bits description.","A page directory pointer table.","A PDPT Entry consists of an address and a bunch of flags.","PDPT configuration bit description.","A PML4 table.","A PML4 Entry consists of an address and a bunch of flags.","PML4 configuration bit description.","Size of a region covered by a PML4 Entry (512 GiB)","A PML5 table","A PML5 Entry consists of an address and a bunch of flags.","PML5 configuration bit description.","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","A page table.","A PT Entry consists of an address and a bunch of flags.","PT Entry bits description.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","A type wrapping a base page with a 4 KiB buffer.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 10)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 11)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","User defined flag – ignored by hardware (bit 9)","A wrapper for a virtual address.","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable If 1, instruction …","","","","","","","","","","","","","","","","","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Retrieves the physical address in this entry.","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 4 KiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 1 GiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 2 MiB page (lower or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 4 KiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 1 GiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Return address of nearest 2 MiB page (higher or equal than …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Convert to mutable pointer.","Convert to pointer.","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>u64</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Convert to <code>usize</code>","Offset within the 4 KiB page.","Offset within the 4 KiB page.","Offset within the 4 KiB page.","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","Returns the flags corresponding to this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Convert from <code>u64</code>","Convert from <code>usize</code>","","","","","","","","","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Offset within the 1 GiB page.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; if PS set indicates whether software has …","Accessed; if PS set indicates whether software has …","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Is this address aligned to <code>align</code>?","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Is this address aligned to a 4 KiB page?","Dirty; if PS set indicates whether software has written to …","Dirty; if PD_PS set indicates whether software has written …","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Global; if PS &amp;&amp; CR4.PGE = 1, determines whether the …","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","Is this address aligned to a 1 GiB page?","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","If IA32_EFER.NXE = 1, execute-disable. If 1, instruction …","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Is this address aligned to a 2 MiB page?","Page size; if set this entry maps a 1-GByte page; …","Page size; if set this entry maps a 2-MByte page; …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable.","Page-level cache disable.","Page-level cache disable.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through.","Page-level write-through.","Page-level write-through.","Indirectly determines the memory type used to access the …","Indirectly determines the memory type used to access the …","Is page present?","Is page present?","Is page present?","Present; must be 1 to map a 2-MByte page or reference a …","Present; must be 1 to map a 4-KByte page or reference a …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","User/supervisor; user-mode accesses are not allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Is zero?","Is zero?","Is zero?","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Offset within the 2 MiB page.","Creates a new PML4Entry.","Creates a new PML5Entry.","Creates a new PDPTEntry.","Creates a new PDEntry.","Creates a new PTEntry.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","Given virtual address calculate corresponding entry in PD.","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in …","Given virtual address calculate corresponding entry in PT.","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","Split <code>PAddr</code> into lower and higher 32-bits.","Split <code>IOAddr</code> into lower and higher 32-bits.","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Physical Address zero.","IO Address zero.","Virtual Address zero.","Read the RBP register (base pointer register).","Read the RIP register (instruction pointer).","Read the RSP register (stack pointer register).","Bit 1 is always 1.","Alignment Check (AC)","Auxiliary Carry Flag (AF)","Carry Flag (CF)","Direction Flag (DF)","ID Flag (ID)","Interrupt Enable Flag (IF)","I/O Privilege Level (IOPL) 0","I/O Privilege Level (IOPL) 1","I/O Privilege Level (IOPL) 2","I/O Privilege Level (IOPL) 3","Nested Task (NT)","Overflow Flag (OF)","Parity Flag (PF)","Resume Flag (RF)","Sign Flag (SF)","Trap Flag (TF)","Virtual Interrupt Flag (VIF)","Virtual Interrupt Pending (VIP)","Virtual-8086 Mode (VM)","Zero Flag (ZF)","The RFLAGS register. This is duplicated code from bits32 …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates a new Flags with the given I/O privilege level.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new Flags entry. Ensures bit 1 is set.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Entry for IDT, GDT or LDT.","","","","","","","Returns the argument unchanged.","“Dereferences” the fs register at <code>offset</code>.","“Dereferences” the gs register at <code>offset</code>.","Calls <code>U::from(self)</code>.","Reload code segment register.","Read FS Segment Base","Read GS Segment Base","Create a new segment, TSS or LDT descriptor by setting the …","Sets the interrupt stack table index. The 3-bit IST index …","Creates a new descriptor with selector and offset (for IDT …","Swap the GS register.","","","","Write FS Segment Base","Write GS Segment Base","Create an SECS page in the Enclave Page Cache","Add a Page to an Uninitialized Enclave.","Add a Page to an Initialized Enclave.","Mark a page in EPC as Blocked.","Read From a Debug Enclave.","Write to a Debug Enclave.","Extend Uninitialized Enclave Measurement by 256 Bytes","Initialize an Enclave for Execution","Loads and verifies an EPC page and marks the page as …","Loads, verifies an EPC page and marks the page as …","Restrict the Permissions of an EPC Page.","Change the Type of an EPC Page.","Add Version Array.","Remove a page from the EPC.","Activates EBLOCK Checks.","Invalidate an EPC Page and Write out to Main Memory.","Accept Changes to an EPC Page.","Initialize a Pending Page.","Enters an Enclave.","Exits an Enclave.","Retrieves a Cryptographic Key.","Extend an EPC Page Permissions.","Create a Cryptographic Report of the Enclave.","Re-Enters an Enclave.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Invoke a syscall.","Although hardware task-switching is not supported in …","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","The full 64-bit canonical forms of the interrupt stack …","Creates a new empty TSS.","","","","","The full 64-bit canonical forms of the stack pointers …","Sets the stack pointer (<code>stack_ptr</code>) to be used when an …","Sets the stack pointer (<code>stack_ptr</code>) to be used for when an …","","","","Clear VMCS.","Launch virtual machine.","Load current VMCS pointer.","Return current VMCS pointer.","Read a specified field from a VMCS.","Resume virtual machine.","Write to a specified field in a VMCS.","Disable VMX operation.","Enable VMX operation.","","","","","","","","","","","","If set, enables debug register based breaks on I/O space …","Enables the instructions RDFSBASE, RDGSBASE, WRFSBASE, and …","Enable shared (PDE or PTE) address translation between …","Enables 5-Level Paging.","Enable machine check interrupts.","Enable XSAVE and Processor Extended States.","Enable: Physical Address Extension (allows to address …","Enables process-context identifiers (PCIDs).","Enable Performance-Monitoring Counters","Enables use of Protection Keys (MPK).","Enable Page Size Extensions (allows for pages larger than …","Enable Supervisor Mode Access Prevention.","Enable Supervisor Mode Execution Protection.","Enables Safer Mode Extensions (Trusted Execution …","Enables Streaming SIMD Extensions (SSE) instructions and …","Enable User-Mode Instruction Prevention (the SGDT, SIDT, …","If set, enables support for the virtual interrupt flag …","Enables Virtual Machine Extensions.","If set, disables ability to take time-stamps.","Enables unmasked SSE exceptions.","If set, enables support for the virtual interrupt flag …","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read cr0","Write cr0.","Contains page-fault linear address.","Write cr2, for instance to reset cr2","Contains page-table root pointer.","Switch page-table PML4 pointer.","Contains various flags to control operations in protected …","Write cr4.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Read Extended Control Register XCR0. Only supported if …","Write to Extended Control Register XCR0. Only supported if …","","Processor Power Management and RAS Capabilities …","Info about cache Associativity.","","","","","","This table is taken from Intel manual (Section CPUID …","","Describes any kind of cache (TLB, Data and Instruction …","Iterates over cache information (LEAF=0x02).","What type of cache are we dealing with?","Information about an individual cache in the hierarchy.","Iterator over caches (LEAF=0x04).","Info about a what a given cache caches (instructions, …","","The main type used to query information about the CPU we’…","Low-level data-structure to store result of cpuid …","","Deterministic Address Translation Structure","Deterministic Address Translation Structure Iterator …","Deterministic Address Translation cache type (EDX bits 04 …","Data cache","","","Direct cache access info (LEAF=0x09).","","","","EBX:EAX and EDX:ECX provide information on the Enclave …","Structured Extended Feature Identifiers (LEAF=0x07).","Extended Processor and Processor Feature Identifiers …","Where the extended register state is stored.","What kidn of extended register state this is.","ExtendedState subleaf structure for things that need to be …","Information for saving/restoring extended register state …","Yields ExtendedState structs.","Information about topology (LEAF=0x0B).","Gives information about the current level in the topology.","Processor and Processor Feature Identifiers (LEAF=0x01).","","","","","Identifies the different Hypervisor products.","Information about Hypervisor (LEAF=0x4000_0001)","","Instruction cache","","","","L1 Cache and TLB Information (LEAF=0x8000_0005).","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","L2 Cache Allocation Technology Enumeration Sub-leaf …","L3 Cache Allocation Technology Enumeration Sub-leaf …","Information about L3 cache monitoring.","","Memory Bandwidth Allocation Enumeration Sub-leaf …","Encrypted Memory Capabilities (LEAF=0x8000_001F).","","Information about how monitor/mwait works on this CPU …","","","","Null - No more caches","Null (indicates this sub-leaf is not valid).","Info about performance monitoring – how many counters …","Performance Optimization Identifier (LEAF=0x8000_001A).","","","Processor name (LEAF=0x8000_0002..=0x8000_0004).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Processor Serial Number (LEAF=0x3).","Processor Topology Information (LEAF=0x8000_001E).","Intel Processor Trace Information (LEAF=0x14).","","QEMU is the hypervisor identity when QEMU is used without …","","Quality of service enforcement information (LEAF=0x10).","Intel Resource Director Technology RDT (LEAF=0x0F).","4-31 = Reserved","Hyper-thread (Simultaneous multithreading)","","Intel SGX Capability Enumeration Leaf (LEAF=0x12).","Intel SGX EPC Enumeration Leaf","Iterator over the SGX sub-leafs (ECX &gt;= 2).","Iterator for SoC vendor attributes.","A vendor brand string as queried from the cpuid leaf.","SoC vendor specific information (LEAF=0x17).","","Information about the SVM features that the processory …","","Query information about thermal and power management …","","TLB 1-GiB Pages Information (LEAF=0x8000_0019).","What type of core we have at this level in the topology …","Time Stamp Counter/Core Crystal Clock Information …","Data and Instruction cache","Some unified TLBs will allow a single TLB entry to satisfy …","","","","","","Vendor Info String (LEAF=0x0)","","","","(Virtual) Bus (local apic timer) frequency in kHz.","APIC ID size.","Return the processor brand string as a rust string.","Return vendor identification as human readable string.","Return the SocVendorBrand as a string.","","","Ways of associativity (Bits 31-22)","Version Information: Family","Version Information: Model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns brand ID on AMD.","Brand Index","Bus (Reference) Frequency (in MHz).","C-bit location in page table entry","Translation cache level (starts at 1)","Translation cache type field.","Cache Type","Length of the capacity bit mask.","Length of the capacity bit mask.","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)","","","","","","","","","","","","System Coherency Line Size (Bits 11-00)","Number of configurable Address Ranges for filtering (Bits …","Conversion factor from reported IA32_QM_CTR value to …","Core ID","Bit width of general-purpose, performance monitoring …","Specifies the ratio of the compute unit power accumulator …","Macro which queries cpuid directly.","L1 data cache associativity.","L1 data cache line size in bytes.","L1 data cache lines per tag.","L1 data cache size in KB","","An unsigned integer which is the denominator of the …","Description of the cache (from Intel Manual)","Data TLB associativity for 2-MB and 4-MB pages.","L2 Data TLB associativity for 2-MB and 4-MB pages.","Data TLB number of entries for 2-MB and 4-MB pages.","L2 Data TLB number of entries for 2-MB and 4-MB pages.","Data TLB associativity for 4K pages.","L2 Data TLB associativity for 4K pages.","Data TLB number of entries for 4K pages.","L2 Data TLB number of entries for 4K pages.","L1 Data TLB associativity for 1-GB pages.","L1 Data TLB number of entries for 1-GB pages.","L2 Data TLB associativity for 1-GB pages.","L2 Data TLB number of entries for 1-GB pages.","Number of Interrupt Thresholds in Digital Thermal Sensor","Return value EAX register","Return value EBX register","Length of EBX bit vector to enumerate architectural …","Return value ECX register","Return value EDX register","","","","","","","","","","","","","","","","","","","","","","","","","","","Version Information: Extended Family","Version Information: Extended Model","Extended Processor Signature.","Enumeration of Monitor-Mwait extensions (beyond EAX and …","","Number of fixed-function performance counters (if Version …","Bit width of fixed-function performance counters (if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Advanced Power Management Information (LEAF=0x8000_0007).","Query basic information about caches (LEAF=0x02).","Retrieve more elaborate information about caches …","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address …","Query deterministic address translation feature …","Direct cache access info (LEAF=0x09).","Find out about more features supported by this CPU …","Extended Processor and Processor Feature Identifiers …","Information for saving/restoring extended register state …","Information about topology (LEAF=0x0B).","Extended information about topology (LEAF=0x1F).","Query a set of features that are available on this CPU …","Returns information provided by the hypervisor, if running …","L1 Instruction Cache Information (LEAF=0x8000_0005)","L2/L3 Cache and TLB Information (LEAF=0x8000_0006).","Informations about memory encryption support …","Information about how monitor/mwait works on this CPU …","Info about performance monitoring (LEAF=0x0A).","Informations about performance optimization …","Retrieve processor brand string (LEAF=0x8000_000{2..4}).","Processor Capacity Parameters and Extended Feature …","Processor Frequency Information (LEAF=0x16).","Retrieve serial number of processor (LEAF=0x03).","Informations about processor topology (LEAF=0x8000_001E)","Intel Processor Trace Enumeration Information (LEAF=0x14).","","Quality of service enforcement information (LEAF=0x10).","Quality of service monitoring information (LEAF=0x0F).","Information about secure enclave support (LEAF=0x12).","","Contains SoC vendor specific information (LEAF=0x17).","","This function provides information about the SVM features …","Query information about thermal and power management …","TLB 1-GiB Pages Information (LEAF=0x8000_0019)","Time Stamp Counter/Core Crystal Clock Information …","","","Return information about the vendor (LEAF=0x00).","Guest Physical Address Bits","Has 100 MHz multiplier Control?","1GB page size entries supported by this structure","Is there support for 1GiB pages.","2MB page size entries supported by this structure","3DNow extensions.","4K page size entries supported by this structure","4MB page size entries supported by this structure","Check support for 64-bit mode.","SEV guest execution only allowed from a 64-bit host if set.","Thermal Monitor and Software Controlled Clock Facilities. …","Breakpoint Addressing masking extended to bit 31.","Supports ADX.","A value of 1 indicates that the processor supports the …","LOCK MOV CR0 means MOV CR8. See “MOV(CRn)” in APM3.","Alternate Injection supported if set.","3DNow AMD extensions.","AnyThread deprecation","APIC On-Chip. The processor contains an Advanced …","ARAT. APIC-Timer-always-running feature is supported if …","AVX512VBMI2","Support for the AMD advanced virtual interrupt controller …","A value of 1 indicates the processor supports the AVX …","AVX2","AVX512_IFMA","AVX512BITALG","AVX512BW","AVX512CD","Supports AVX512DQ.","AVX512ER","Supports AVX512F.","AVX512PF","AVX512VL","AVX512VNNI","AVX512VPOPCNTDQ","BMI1","BMI2","Supports CET shadow stack features. Processors that set …","CLZERO instruction supported if set.","CLFLUSH Instruction. CLFLUSH Instruction is supported.","Supports CLFLUSHOPT.","CLWB","Conditional Move Instructions. The conditional move …","Check support legacy cmp.","CMPXCHG16B Available. A value of 1 indicates that the …","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes …","L1 Context ID. A value of 1 indicates the L1 data cache …","Is Code and Data Prioritization Technology supported?","Complex Cache Indexing (Bit 2) False: Direct mapped cache. …","If true, Indicates support of Configurable PSB and …","Has Core performance boost?","CPL Qualified Debug Store. A value of 1 indicates the …","Data access breakpoint extension.","A value of 1 indicates the processor supports the ability …","Debugging Extensions. Support for I/O breakpoints, …","Full debug state swap supported for SEV-ES guests.","Indicates support for the decode assists if set.","Debug Store. The processor supports the ability to write …","64-bit DS Area. A value of 1 indicates the processor …","Digital temperature sensor is supported if set.","ECMD. Clock modulation duty cycle extension is supported …","Enhanced Intel SpeedStep® technology. A value of 1 …","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, …","Supports ENCLV instruction leaves EINCVIRTCHILD, …","The processor supports performance-energy bias preference …","Is there support for execute disable bit.","Extended APIC space.","A value of 1 indicates that processor supports 16-bit …","FXSAVE and FXRSTOR instruction optimizations.","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 …","Indicates support for processor feedback interface.","Flexible HWP is supported if set.","Indicates that TLB flush events, including CR3 writes and …","A value of 1 indicates the processor supports FMA …","Four-operand FMA instruction support.","The internal FP/SIMD execution datapath is 128 bits wide …","The internal FP/SIMD execution datapath is 256 bits wide …","Floating Point Unit On-Chip. The processor contains an x87 …","Deprecates FPU CS and FPU DS values if 1.","Frequency ID control.","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if …","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR …","GFNI","GIF – virtualized global interrupt flag if set.","Guest Mode Execution Trap supported if set.","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, …","HLE","When host <code>CR4.MCE=1</code> and guest <code>CR4.MCE=0</code>, machine check …","Max APIC IDs reserved field is Valid. A value of 0 for HTT …","Hardware Coordination Feedback Capability","Hardware cache coherency across encryption domains …","Has Hardware P-state control?","Has Hardware assert supported?","HWP. HWP base registers (IA32_PM_ENABLE[bit 0], …","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is …","HWP Capabilities. Highest Performance change is supported …","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits …","Fast access mode for the IA32_HWP_REQUEST MSR is supported …","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if …","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is …","HWP PECI override is supported if set.","A value of 1 indicates the indicates the presence of a …","Instruction based sampling.","Ignoring Idle Logical Processor HWP request is supported …","Instruction Retired Counter MSR available if set.","WBINVD/WBNOINVD are interruptible if set.","Is Invariant TSC available?","INVLPGB and TLBSYNC instruction supported if set.","INVLPGB support for invalidating guest nested translations …","INVPCID. If 1, supports INVPCID instruction for system …","If true, Indicates support of IP Filtering, TraceStop …","Supports L2 Cache Allocation.","Supports L3 Cache Allocation.","Supports L3 Cache Intel RDT Monitoring.","Supports 57-bit linear addresses and five-level paging if …","Is LAHF/SAHF available in 64-bit mode?","Indicates support for LBR Virtualization.","Reports whether the response of the delay values is linear.","If true, Generated packets which contain IP payloads have …","Supports local bandwidth monitoring.","Lightweight profiling support","Is LZCNT available?","Machine Check Architecture. A value of 1 indicates the …","Is MCA overflow recovery available?","Machine Check Exception. Exception 18 is defined for …","MCOMMIT instruction supported if set.","Supports Memory Bandwidth Allocation.","Misaligned SSE mode. See “Misaligned Access Support …","Intel MMX Technology. The processor supports the Intel MMX …","AMD extensions to MMX instructions.","MONITOR/MWAIT. A value of 1 indicates the processor …","Support for MWAITX and MONITORX instructions.","A value of 1 indicates that the processor supports MOVBE …","MOVU (Move Unaligned) SSE instructions are efficient more …","MPX. Supports Intel Memory Protection Extensions if 1.","Model Specific Registers RDMSR and WRMSR Instructions. The …","If true, Indicates support of MTC timing packet and …","Memory Type Range Registers. MTRRs are supported. The …","NB performance counter extensions support.","Nested paging supported if set.","Indicates support for NRIP save on #VMEXIT if set.","Supports occupancy monitoring.","OS has set CR4.PKE to enable protection keys (and the …","Indicates OS-visible workaround support","A value of 1 indicates that the OS has enabled …","Physical Address Extension. Physical addresses greater …","The Page Flush MSR is available if set.","Page Attribute Table. Page Attribute Table is supported. …","Indicates support for the pause intercept filter if set.","Indicates support for the PAUSE filter cycle count …","Pending Break Enable. The processor supports the use of …","Process-context identifiers. A value of 1 indicates that …","PCLMULQDQ. A value of 1 indicates the processor supports …","Perfmon and Debug Capability: A value of 1 indicates the …","Processor performance counter extensions support.","Support for L3 performance counter extension.","Performance time-stamp counter.","Page Global Bit. The global bit is supported in …","Supports protection keys for user-mode pages.","PLN. Power limit notification controls are supported if …","A value of 1 indicates that the processor supports the …","Support of Power Event Trace. Writes can set IA32_RTIT_CTL…","Has Processor power reporting interface?","Is PREFETCHW available?","Has PREFETCHWT1 (Intel® Xeon Phi™ only).","Disallowing IBS use by the host supported if set.","Supports Intel Processor Trace.","Page Size Extension. Large pages of size 4 MByte are …","36-Bit Page Size Extension. 4-MByte pages addressing …","Processor Serial Number. The processor supports the 96-bit …","PTM. Package thermal management is supported if set.","Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL…","RDPID and IA32_TSC_AUX are available.","RDPRU instruction supported if set.","A value of 1 indicates that processor supports RDRAND …","Supports RDSEED.","Supports Intel Resource Director Technology (RDT) …","Supports Intel Resource Director Technology (RDT) …","Check support for rdtscp instruction.","Supports Enhanced REP MOVSB/STOSB if 1.","FP Error Pointers Restored by XRSTOR if set.","Restricted Injection supported if set.","Has Read-only effective frequency interface?","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set …","RTM","Secure Encrypted Virtualization is supported if set.","SEV Encrypted State is supported if set.","SEV Secure Nested Paging supported if set.","Supports Intel® Software Guard Extensions (Intel® SGX …","Has SGX1 support.","Has SGX2 support.","Supports SGX Launch Configuration.","Supports SHA Instructions.","If true, Indicates support of Single-Range Output scheme.","SKINIT and STGI are supported.","SMAP. Supports Supervisor-Mode Access Prevention (and the …","Secure Memory Encryption is supported if set.","SMEP. Supports Supervisor-Mode Execution Prevention if 1.","Safer Mode Extensions. A value of 1 indicates that the …","SPEC_CTRL virtualization supported if set.","Self Snoop. The processor supports the management of …","SSE. The processor supports the SSE extensions.","SSE2. The processor supports the SSE2 extensions.","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates …","A value of 1 indicates that the processor supports SSE4.1.","A value of 1 indicates that the processor supports SSE4.2.","XTRQ, INSERTQ, MOVNTSS, and MOVNTSD instruction support.","SVM supervisor shadow stack restrictions if set.","A value of 1 indicates the presence of the Supplemental …","Has Software uncorrectable error containment and recovery …","Secure virtual machine supported.","Indicates support for SVM-Lock if set.","Are fast system calls available.","SYSENTER and SYSEXIT Instructions. The SYSENTER and …","Trailing bit manipulation instruction support.","Has THERMTRIP?","Support for INVLPGB/TLBSYNC hypervisor enable in VMCB and …","Thermal Monitor. The processor implements the thermal …","Hardware thermal control (HTC)?","Thermal Monitor 2. A value of 1 indicates whether the …","Indicates the following MSRs are supported: …","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = …","If true, ToPA tables can hold any number of output …","Topology extensions support.","Supports total bandwidth monitoring.","If true, Indicates support of output to Trace Transport …","Is Temperature Sensor available?","Time Stamp Counter. The RDTSC instruction is supported, …","IA32_TSC_ADJUST MSR is supported if 1.","A value of 1 indicates that the processors local APIC …","Indicates support for MSR TSC ratio (MSR <code>0xC000_0104</code>) if …","Intel Turbo Boost Technology Available (see description of …","Intel® Turbo Boost Max Technology 3.0 available.","Supports user-mode instruction prevention if 1.","EFER.LMSLE is unsupported if set.","VAES","Indicates support for VMCB clean bits if set.","Virtual 8086 Mode Enhancements. Virtual 8086 mode …","VM Permission Levels supported if set.","VMSAVE and VMLOAD virtualization supported if set.","Virtual Machine Extensions. A value of 1 indicates that …","Voltage ID control.","VPCLMULQDQ","Virtual Transparent Encryption supported if set.","WAITPKG","WBNOINVD instruction supported if set.","Watchdog timer support.","A value of 1 indicates that the processor supports x2APIC …","Supports XGETBV with ECX = 1 if set.","Extended operation support.","A value of 1 indicates that the processor supports the …","Supports XSAVEC and the compacted form of XRSTOR if set.","CPU has xsaveopt feature.","Supports XSAVES/XRSTORS and IA32_XSS if set.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Highest COS number supported for this Leaf.","Support for HDC in IA32_XSS.","Support for PT in IA32_XSS.","L1 instruction cache associativity.","L1 instruction cache line size in bytes.","L1 instruction cache lines per tag.","L1 instruction cache size in KB","Returns the identity of the <code>Hypervisor</code>.","Initial APIC ID","Supports treating interrupts as break-event for MWAIT, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Maximum page count for INVLPGB instruction.","Branch instruction retired event not available if 1.","Branch mispredict retired event not available if 1.","Last-level cache reference event not available if 1.","Returns true when the compacted format of an XSAVE area is …","Core cycle event not available if 1.","Fully associative structure","Fully Associative cache","True if the bit n (corresponding to the sub-leaf index) is …","True if bit n is supported in XCR0.","Cache Inclusiveness (Bit 1) False: Cache is not inclusive …","Instruction retired event not available if 1.","Last-level cache misses event not available if 1.","Reference cycles event not available if 1.","Self Initializing cache level (does not need SW …","Write-Back Invalidate/Invalidate (Bit 0) False: …","Bit-granular map of isolation/contention of allocation …","Bit-granular map of isolation/contention of allocation …","Iterator over extended state enumeration levels &gt;= 2.","Iterator over SGX sub-leafs.","Instruction TLB associativity for 2-MB and 4-MB pages.","L2 Instruction TLB associativity for 2-MB and 4-MB pages.","Instruction TLB number of entries for 2-MB and 4-MB pages.","L2 Instruction TLB number of entries for 2-MB and 4-MB …","Instruction TLB associativity for 4K pages.","L2 Instruction TLB associativity for 4K pages.","Instruction TLB number of entries for 4K pages.","L2 Instruction TLB number of entries for 4K pages.","L1 Instruction TLB associativity for 1-GB pages.","L1 Instruction TLB number of entries for 1-GB pages.","L2 Instruction TLB associativity for 1-GB pages.","L2 Instruction TLB number of entries for 1-GB pages.","L2 Cache Allocation Information.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Cache size in KB.","L3 Cache Allocation Information.","L3 Cache Monitoring.","L2 Associativity field","L2 Cache Line size in bytes","L2 cache lines per tag.","Specifies the L3 cache size range","Largest monitor-line size in bytes (default is processor’…","Cache Level (starts at 1)","Level number.","","Linear Address Bits","","The value of MAWAU used by the BNDLDX and BNDSTX …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for logical processors …","Maximum number of addressable IDs for processor cores in …","The maximum supported enclave size in 64-bit mode is …","The maximum supported enclave size in non-64-bit mode is …","Number of encrypted guests supported simultaneouslys","Reports the maximum MBA throttling value supported for the …","Maximum number of addressable IDs for logical processors …","The maximum ECX value recognized by RDPRU.","The size of the <code>apic_id_size</code> field determines the maximum …","Maximum range (zero-based) of RMID of L3.","Memory Bandwidth Allocation Information.","Minimum ASID value for an SEV enabled, SEV-ES disabled …","Bit vector of supported extended SGX features.","","Uses Rust’s <code>cpuid</code> function from the <code>arch</code> module.","Return new CpuId struct.","Iterate over all cache information.","Iterate over all cache info subleafs for this CPU.","","","","Iterate over each sub-leaf with an address translation …","Iterate over all SoC vendor specific attributes.","Node ID","Nodes per processor","An unsigned integer which is the nominal frequency of the …","Number as retrieved from cpuid","Number of physical threads in the processor.","Number of general-purpose performance monitoring counter …","An unsigned integer which is the numerator of the …","The offset in bytes of this extended state components save …","Partitioning (0: Soft partitioning between the logical …","Performance time-stamp counter size (in bits).","Physical Address Bits","Physical Address bit reduction","The physical address of the base of the EPC section","Physical Line partitions (Bits 21-12)","Returns package type on AMD.","Processor Base Frequency (in MHz).","Maximum Frequency (in MHz).","Number of logical processors at this level type. The …","Returns which register this specific extended subleaf …","SVM revision number.","Maximum range (zero-based) of RMID within this physical …","Reports the valid bits of SECS.ATTRIBUTES[127:0] that …","Combination of bits 00-31 and 32-63 of 96 bit processor …","96 bit processor serial number.","Bits 00-31 of 96 bit processor serial number.","Bits 32-63 of 96 bit processor serial number.","Bits 64-96 of 96 bit processor serial number.","Number of Sets.","Number of Sets (Bits 31-00)","Number of bits to shift right on x2APIC ID to get a unique …","The size in bytes (from the offset specified in EBX) of …","Size of the corresponding EPC section within the Processor …","Smallest monitor-line size in bytes (default is processor…","Version Information: Stepping ID","","Number of available address space identifiers (ASID).","Number of C0 sub C-states supported using MWAIT (Bits 03 - …","Number of C1 sub C-states supported using MWAIT (Bits 07 - …","Number of C2 sub C-states supported using MWAIT (Bits 11 - …","Number of C3 sub C-states supported using MWAIT (Bits 15 - …","Number of C4 sub C-states supported using MWAIT (Bits 19 - …","Number of C5 sub C-states supported using MWAIT (Bits 23 - …","Number of C6 sub C-states supported using MWAIT (Bits 27 - …","Number of C7 sub C-states supported using MWAIT (Bits 31 - …","Bitmap of supported Cycle Threshold value encodings (Bits …","Bitmap of supported MTC period encodings (Bit 31:16).","Bitmap of supported Configurable PSB frequency encodings …","Threads per core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","“TSC frequency” = “core crystal clock frequency” * …","TSC frequency in kHz.","Cache type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version ID of architectural performance monitoring. (Bits …","Ways of associativity.","Return new CpuId struct with custom reader function.","x2APIC ID","x2APIC ID the current logical processor. (Bits 31-00)","Support for AVX512 OPMASK in XCR0.","Support for AVX512 ZMM Hi16 in XCR0.","Support for AVX512 ZMM Hi256 XCR0.","Support for AVX 256-bit in XCR0.","Support for legacy x87 in XCR0.","Support for MPX BNDCSR in XCR0.","Support for MPX BNDREGS in XCR0.","Support for PKRU in XCR0.","Support for SSE 128-bit in XCR0.","Maximum size (bytes, from the beginning of the …","Maximum size (bytes, from the beginning of the …","The size in bytes of the XSAVE area containing all states …","","B0 breakpoint condition detected","B1 breakpoint condition detected","B2 breakpoint condition detected","B3 breakpoint condition detected","BD debug register access detected","An array list of all available breakpoint registers.","BS single step","BT task switch","Specifies the  breakpoint condition for a corresponding …","Specify the size of the memory location at the address …","Specifies available hardware breakpoints.","00 — 1-byte length.","01 — 2-byte length.","11 — 4-byte length.","10 — 8 byte length (or undefined, on older processors).","11 — Break on data reads or writes but not instruction …","01 — Break on data writes only.","","","","","Debug register 6 (dr6) flags.","","Empty Dr7 has bit 10 always set.","Bit that controls debug-register protection.","Bit that controls global exact breakpoints.","00 — Break on instruction execution only.","10 — Break on I/O reads or writes.","Bit that controls local exact breakpoints.","Enables (when set) advanced debugging of RTM transactional …","Bit that controls debugging of RTM transactional regions.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Configures the breakpoint by writing <code>dr</code> registers.","Configures a breakpoint condition <code>bc</code> and size <code>bs</code> for the …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disables the breakpoint condition for the associated …","Disable breakpoint in global mode.","Disable breakpoint in local mode.","Read dr{0-3} register based on enum variant.","Read dr0.","Write dr0.","Read dr1.","Write dr1.","Read dr2.","Write dr2.","Read dr3.","Write dr3.","Read dr6.","Write dr6.","Read dr7.","Write dr7.","Returns an empty set of flags.","Enables the breakpoint condition for the associated …","Global exact breakpoint enable.","Local exact breakpoint enable.","Enables debug-register protection, which causes a debug …","Enable the breakpoint in global mode.","Enable the breakpoint in local mode.","Enables advanced debugging of RTM transactional regions.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Write dr{0-3} register based on provided enum variant.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the segment selector from the local descriptor …","Load the GDTR register with the specified base and limit.","Load the IDTR register with the specified base and limit.","Size of the DT.","Loads the segment selector into the selector field of the …","","","Retrieve base and limit from the GDTR register.","Retrieve base and limit from the IDTR register.","","","","lfence – Load Fence","mfence – Memory Fence","sfence – Store Fence","Read 8 bits from port","Read 32 bits from port","Read 16 bits from port","Write 8 bits to port","Write 32 bits to port","Write 16 bits to port","","","","","","","","","x86 External Interrupts (1-32).","","0: The fault was not caused by an instruction fetch. 1: …","","","x86 Exception description (see also Intel Vol. 3a Chapter …","","","","0: The fault was caused by a non-present page. 1: The …","","0: The fault was not by protection keys. 1: There was a …","","0: The fault was not caused by reserved bit violation. 1: …","","","","0: The access causing the fault originated when the …","","0: The access causing the fault was a read. 1: The access …","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable Interrupts.","Returns an empty set of flags.","Enable Interrupts.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Section 10.4.4, Local APIC Status and Location.","BIOS Update Trigger Register.","","Processor Hard Power-On Configuration  (R/W) Enables and …","Actual Performance Frequency Clock Count (RW)  See Table …","APIC Location and Status (R/W) See Table 35-2. See Section …","(If CPUID.0AH: EAX[15:8] &gt;  0) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  1) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  2) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  3) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  4) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  5) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  6) &amp; IA32_PERF_CAPABILITIES[ 13…","(If CPUID.0AH: EAX[15:8] &gt;  7) &amp; IA32_PERF_CAPABILITIES[ 13…","BIOS Update Signature ID (R/W) See Table 35-2.","BIOS Update Trigger Register (W)  See Table 35-2.","Clock Modulation (R/W)  See Table 35-2. …","","System Call Target Address the compatibility mode.","06_2EH","Debug Control (R/W)  Controls how several debug features …","DS Save Area (R/W) See Table 35-2. Points to the DS buffer …","If (  CPUID.80000001.EDX.[bit  20] or  CPUID.80000001.EDX.…","if CPUID.6H:ECX[3] = 1","Control Features in IA-32 Processor (R/W) See Table 35-2 …","Fixed-Function Performance Counter Register 0 (R/W)  See …","Fixed-Function Performance Counter Register 1 (R/W)  See …","Fixed-Function Performance Counter Register 2 (R/W)  See …","Fixed-Function-Counter Control Register (R/W)  See Table …","System Call Flag Mask (R/W)  See Table 35-2.","Map of BASE Address of FS (R/W)  See Table 35-2.","Map of BASE Address of GS (R/W)  See Table 35-2.","Swap Target of BASE Address of GS (R/W) See Table 35-2.","IA-32e Mode System Call Target Address (R/W)  See Table …","See Section 14.3.2.3., IA32_MCi_ADDR MSRs .  The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs. The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The …","P6 Family Processors","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Table 35-2.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.   The …","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","06_0FH","06_0FH","See Table 35-2.","06_0FH","06_0FH","06_1DH","06_1DH","See Table 35-2.","Misc MAC information of Integrated I/O. (R/O) see Section …","06_1DH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_1AH","06_1AH","See Table 35-2.","06_1AH","06_1AH","06_2EH","06_2EH","See Table 35-2.","06_2EH","06_2EH","Machine Check Capabilities (R) See Table 35-2. See Section …","Machine Check Feature Enable (R/W) See Table 35-2. See …","Machine Check Status. (R) See Table 35-2. See Section …","","See Section 8.10.5, Monitor/Mwait Address  Range …","See Section 8.10.5, Monitor/Mwait Address Range …","Maximum Performance Frequency Clock Count (RW)  See Table …","MTRR Information See Section 11.11.1, MTRR Feature  …","Default Memory Types (R/W)  Sets the memory type for the …","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs .","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Fixed Range MTRR See Section 11.11.2.2, Fixed Range MTRRs.","Variable Range Base MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","Variable Range Mask MTRR See Section 11.11.2.3, Variable …","if IA32_MTRR_CAP[7:0] &gt;  8","if IA32_MTRR_CAP[7:0] &gt;  9","See Section 35.16, MSRs in Pentium Processors.","See Section 35.16, MSRs in Pentium Processors.","If CPUID.06H: EAX[6] = 1","If CPUID.06H: EAX[6] = 1","Page Attribute Table See Section 11.11.2.2, Fixed Range …","","Performance Event Select for Counter 0 (R/W) Supports all …","Performance Event Select for Counter 1 (R/W) Supports all …","Performance Event Select for Counter 2 (R/W) Supports all …","Performance Event Select for Counter 3 (R/W) Supports all …","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2; If CPUID.0AH:EAX[15:8] = 8","See Table 35-2. See Section 17.4.1, IA32_DEBUGCTL MSR.","See Table 35-2. See Section 14.1, Enhanced Intel  …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 18.4.2, Global Counter Control …","See Table 35-2. See Section 14.1, Enhanced Intel  …","06_0FH","Platform ID (R)  See Table 35-2. The operating system can …","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","Performance Counter Register  See Table 35-2.","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If ( CPUID.(EAX=07H,  ECX=0):EBX.[bit 12] = 1 )","If IA32_VMX_MISC[bit 15])","SMM Monitor Configuration (R/W) See Table 35-2.","See Table 35-2.","If IA32_MTRR_CAP[SMRR]  = 1","System Call Target Address (R/W)  See Table 35-2.","CS register target for CPL 0 code (R/W) See Table 35-2. …","CPL 0 code entry point (R/W) See Table 35-2. See Section …","Stack pointer for CPL 0 stack (R/W) See Table 35-2. See …","Thermal Interrupt Control (R/W) See Section 14.5.2, …","Thermal Monitor Status (R/W) See Section 14.5.2, Thermal …","See Section 17.13, Time-Stamp Counter,  and see Table 35-2.","Per-Logical-Processor TSC ADJUST (R/W) See Table 35-2.","AUXILIARY TSC Signature. (R/W) See Table 35-2 and Section  …","TSC Target of Local APIC s TSC Deadline Mode (R/W)  See …","Reporting Register of Basic VMX Capabilities (R/O) See …","Capability Reporting Register of CR0 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR0 Bits Fixed to 1 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 0 (R/O) …","Capability Reporting Register of CR4 Bits Fixed to 1 (R/O) …","If CPUID.01H:ECX.[bit 5] = 1","If CPUID.01H:ECX.[bit 5] = 1","Capability Reporting Register of VM-entry Controls (R/O) …","If ( CPUID.01H:ECX.[bit 5],  IA32_VMX_PROCBASED_C TLS[bit …","Capability Reporting Register of EPT and VPID (R/O)  See …","Capability Reporting Register of VM-exit Controls (R/O) …","Capability Reporting Register of VM-function Controls …","Reporting Register of Miscellaneous VMX Capabilities (R/O) …","Capability Reporting Register of Pin-based VM-execution  …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of Secondary Processor-based …","Capability Reporting Register of VM-entry Flex Controls …","Capability Reporting Register of VM-exit Flex Controls …","Capability Reporting Register of Pin-based VM-execution …","Capability Reporting Register of Primary Processor-based  …","Capability Reporting Register of VMCS Field Enumeration …","If( CPUID.01H:ECX.[bit 5] =  1 and IA32_VMX_BASIC[bit 55] )","x2APIC ID register (R/O) See x2APIC Specification.","x2APIC Current Count register (R/O)","x2APIC Divide Configuration register (R/W)","x2APIC End of Interrupt. If ( CPUID.01H:ECX.[bit 21]  = 1 )","Error Status Register. If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Interrupt Command register (R/W)","x2APIC Initial Count register (R/W)","x2APIC Interrupt Request register bits [31:0] (R/O)","x2APIC Interrupt Request register bits [63:32] (R/O)","x2APIC Interrupt Request register bits [95:64] (R/O)","x2APIC Interrupt Request register bits [127:96] (R/O)","x2APIC Interrupt Request register bits [159:128] (R/O)","x2APIC Interrupt Request register bits [191:160] (R/O)","x2APIC Interrupt Request register bits [223:192] (R/O)","x2APIC Interrupt Request register bits [255:224] (R/O)","x2APIC In-Service register bits [31:0] (R/O)","x2APIC In-Service register bits [63:32] (R/O)","x2APIC In-Service register bits [95:64] (R/O)","x2APIC In-Service register bits [127:96] (R/O)","x2APIC In-Service register bits [159:128] (R/O)","x2APIC In-Service register bits [191:160] (R/O)","x2APIC In-Service register bits [223:192] (R/O)","x2APIC In-Service register bits [255:224] (R/O)","x2APIC Logical Destination register (R/O)","x2APIC LVT Corrected Machine Check Interrupt register (R/W)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC LVT Performance Monitor register (R/W)","x2APIC LVT Thermal Sensor Interrupt register (R/W)","x2APIC LVT Timer Interrupt register (R/W)","x2APIC Processor Priority register (R/O)","If ( CPUID.01H:ECX.[bit 21]  = 1 )","x2APIC Spurious Interrupt Vector register (R/W)","x2APIC Trigger Mode register bits [31:0] (R/O)","x2APIC Trigger Mode register bits [63:32] (R/O)","x2APIC Trigger Mode register bits [95:64] (R/O)","x2APIC Trigger Mode register bits [127:96] (R/O)","x2APIC Trigger Mode register bits [159:128] (R/O)","x2APIC Trigger Mode register bits [191:160] (R/O)","x2APIC Trigger Mode register bits [223:192] (R/O)","x2APIC Trigger Mode register bits [255:224] (R/O)","x2APIC Task Priority register (R/W)","x2APIC Version. If ( CPUID.01H:ECX.[bit 21]  = 1 )","","","","","","","Defined in MCA architecture but not implemented in the P6 …","","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS.","Defined in MCA architecture but not implemented in P6 …","","Defined in MCA architecture but not implemented in the P6 …","Bit definitions same as MC0_STATUS, except bits 0, 4, 57, …","","","","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore B-box 0 perfmon local box control MSR.","Uncore B-box 0 perfmon local box overflow control MSR.","Uncore B-box 0 perfmon local box status MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon counter MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon event select MSR.","Uncore B-box 0 perfmon local box mask MSR.","Uncore B-box 0 perfmon local box match MSR.","Uncore B-box 1 perfmon local box control MSR.","Uncore B-box 1 perfmon local box overflow control MSR.","Uncore B-box 1 perfmon local box status MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon counter MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1 perfmon event select MSR.","Uncore B-box 1vperfmon event select MSR.","Uncore B-box 1 perfmon local box mask MSR.","Uncore B-box 1 perfmon local box match MSR.","","","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore C-box 0 perfmon local box control MSR.","Uncore C-box 0 perfmon local box overflow control MSR.","Uncore C-box 0 perfmon local box status MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon counter MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 0 perfmon event select MSR.","Uncore C-box 1 perfmon local box control MSR.","Uncore C-box 1 perfmon local box overflow control MSR.","Uncore C-box 1 perfmon local box status MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon counter MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 1 perfmon event select MSR.","Uncore C-box 2 perfmon local box control MSR.","Uncore C-box 2 perfmon local box overflow control MSR.","Uncore C-box 2 perfmon local box status MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon counter MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 2 perfmon event select MSR.","Uncore C-box 3 perfmon local box control MSR.","Uncore C-box 3 perfmon local box overflow control MSR.","Uncore C-box 3 perfmon local box status MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon counter MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 3 perfmon event select MSR.","Uncore C-box 4 perfmon local box control MSR.","Uncore C-box 4 perfmon local box overflow control MSR.","Uncore C-box 4 perfmon local box status MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon counter MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 4 perfmon event select MSR.","Uncore C-box 5 perfmon local box control MSR.","Uncore C-box 5 perfmon local box overflow control MSR.","Uncore C-box 5 perfmon local box status MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon counter MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 5 perfmon event select MSR.","Uncore C-box 6 perfmon local box control MSR.","Uncore C-box 6 perfmon local box overflow control MSR.","Uncore C-box 6 perfmon local box status MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon counter MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 6 perfmon event select MSR.","Uncore C-box 7 perfmon local box control MSR.","Uncore C-box 7 perfmon local box overflow control MSR.","Uncore C-box 7 perfmon local box status MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon counter MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 7 perfmon event select MSR.","Uncore C-box 8 perfmon local box control MSR.","Uncore C-box 8 perfmon local box overflow control MSR.","Uncore C-box 8 perfmon local box status MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon counter MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 8 perfmon event select MSR.","Uncore C-box 9 perfmon local box control MSR.","Uncore C-box 9 perfmon local box overflow control MSR.","Uncore C-box 9 perfmon local box status MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon counter MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","Uncore C-box 9 perfmon event select MSR.","ConfigTDP Control (R/W)","ConfigTDP Level 1 ratio and power level (R/O)","ConfigTDP Level 2 ratio and power level (R/O)","Nominal TDP Ratio (R/O)","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Debug Control (R/W)  Controls how several debug features …","Debug Control (R/W)  Controls how several debug features …","DRAM Energy Status (R/O)  See Section 14.7.5, DRAM RAPL …","DRAM Performance Throttling Status (R/O) See Section …","DRAM RAPL Parameters (R/W) See Section 14.7.5, DRAM RAPL …","DRAM RAPL Power Limit Control (R/W)  See Section 14.7.5, …","Processor Frequency Configuration The bit field layout of …","Processor Hard Power-On Configuration (R/W) Enables and …","Processor Soft Power-On Configuration (R/W)  Enables and …","Processor Hard Power-On Configuration (R/W) Enables and  …","EFSB DRDY Event Control and Counter Register (R/W)  See …","EFSB DRDY Event Control and Counter  Register (R/W)","GBUSQ Event Control and Counter  Register (R/W) See …","GBUSQ Event Control/Counter Register (R/W) Apply to Intel …","GSNPQ Event Control and Counter  Register (R/W)  See …","GSNPQ Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control and Counter Register (R/W)  See Section …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","FSB Event Control/Counter Register (R/W) Apply to Intel …","L3/FSB Common Control Register (R/W) Apply to Intel Xeon …","MC Bank Error Configuration (R/W)","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Scaleable Bus Speed(RO) This field indicates the intended …","","Trace End Address 0","Trace Start Address 0","Trace End Address 1","Trace Start Address 1","Trace End Address 3","Trace Start Address 3","Trace End Address 4","Trace Start Address 4","Trace Filter CR3 Match Register (R/W)","Trace Control Register (R/W)","Trace Output Base Register (R/W)","Trace Output Mask Pointers Register (R/W)","Tracing Status Register (R/W)","TSX Ctrl Register for TSX Async Abot (TAA) Migration. See …","IFSB BUSQ Event Control and Counter  Register (R/W) See …","IFSB BUSQ Event Control and Counter Register (R/W)","IFSB Latency Event Counter Register  (R/W)  See Section …","IFSB Latency Event Control Register  (R/W) See Section …","IFSB SNPQ Event Control and Counter  Register (R/W)  See …","IFSB SNPQ Event Control and Counter  Register (R/W)","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs. This MSR is not available …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Last Branch Record 0 (R/W)  One of four last branch record …","Last Branch Record 0 From IP (R/W) One of eight pairs of …","Last Branch Record 0 (R/W)  One of 16 pairs of last branch …","Last Branch Record 1 (R/W) See description of …","Last Branch Record 10 From IP (R/W) See description of …","Last Branch Record 10 To IP (R/W) See description of …","Last Branch Record 11 From IP (R/W) See description of …","Last Branch Record 11 To IP (R/W) See description of …","Last Branch Record 12 From IP (R/W) See description of …","Last Branch Record 12 To IP (R/W) See description of …","Last Branch Record 13 From IP (R/W) See description of …","Last Branch Record 13 To IP (R/W) See description of …","Last Branch Record 14 From IP (R/W) See description of …","Last Branch Record 14 To IP (R/W) See description of …","Last Branch Record 15 From IP (R/W) See description of …","Last Branch Record 15 To IP (R/W) See description of …","Last Branch Record 1 From IP (R/W) See description of …","Last Branch Record 1 To IP (R/W) See description of …","Last Branch Record 2 See description of the …","Last Branch Record 2 From IP (R/W) See description of …","Last Branch Record 2 To IP (R/W) See description of …","Last Branch Record 3 See description of the …","Last Branch Record 3 From IP (R/W) See description of …","Last Branch Record 3 To IP (R/W) See description of …","Last Branch Record 4 (R/W) See description of …","Last Branch Record 4 From IP (R/W) See description of …","Last Branch Record 4 To IP (R/W) See description of …","Last Branch Record 5 (R/W) See description of …","Last Branch Record 5 From IP (R/W) See description of …","Last Branch Record 5 To IP (R/W) See description of …","Last Branch Record 6 (R/W) See description of …","Last Branch Record 6 From IP (R/W) See description of …","Last Branch Record 6 To IP (R/W) See description of …","Last Branch Record 7 (R/W) See description of …","Last Branch Record 7 From IP (R/W) See description of …","Last Branch Record 7 To IP (R/W) See description of …","Last Branch Record 8 From IP (R/W) See description of …","Last Branch Record 8 To IP (R/W) See description of …","Last Branch Record 9 From IP (R/W) See description of …","Last Branch Record 9 To IP (R/W) See description of …","Last Branch Record Stack TOS (R/W)  Contains an index (0-3 …","Last Branch Record Filtering Select Register (R/W)  See …","Last Exception Record From Linear IP (R)  Contains a …","Last Exception Record To Linear IP (R)  This area contains …","Uncore M-box 0 perfmon local box address mask MSR.","Uncore M-box 0 perfmon local box address match MSR.","Uncore M-box 0 perfmon local box control MSR.","Uncore M-box 0 perfmon local box overflow control MSR.","Uncore M-box 0 perfmon local box status MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon counter MSR.","Uncore M-box 0 perfmon DSP unit select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon event select MSR.","Uncore M-box 0 perfmon ISS unit select MSR.","Uncore M-box 0 perfmon MAP unit select MSR.","Uncore M-box 0 perfmon local box address match/mask config …","Uncore M-box 0 perfmon MIC THR select MSR.","Uncore M-box 0 perfmon PGT unit select MSR.","Uncore M-box 0 perfmon PLD unit select MSR.","Uncore M-box 0 perfmon time stamp unit select MSR.","Uncore M-box 0 perfmon ZDP unit select MSR.","Uncore M-box 1 perfmon local box address mask MSR.","Uncore M-box 1 perfmon local box address match MSR.","Uncore M-box 1 perfmon local box control MSR.","Uncore M-box 1 perfmon local box overflow control MSR.","Uncore M-box 1 perfmon local box status MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon counter MSR.","Uncore M-box 1 perfmon DSP unit select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon event select MSR.","Uncore M-box 1 perfmon ISS unit select MSR.","Uncore M-box 1 perfmon MAP unit select MSR.","Uncore M-box 1 perfmon local box address match/mask config …","Uncore M-box 1 perfmon MIC THR select MSR.","Uncore M-box 1 perfmon PGT unit select MSR.","Uncore M-box 1 perfmon PLD unit select MSR.","Uncore M-box 1 perfmon time stamp unit select MSR.","Uncore M-box 1 perfmon ZDP unit select MSR.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC3_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","Always 0 (CMCI not supported).","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS.","See Section 15.3.2.3, IA32_MCi_ADDR MSRs. The MSR_MC4_ADDR …","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","Apply to Intel Xeon processor 7400 series (processor …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","See Section 15.3.2.3, IA32_MCi_ADDR MSRs.","See Section 15.3.2.1,  IA32_MCi_CTL MSRs.","See Section 15.3.2.4,  IA32_MCi_MISC MSRs.","See Section 15.3.2.2, IA32_MCi_STATUS MSRS,  and Chapter …","Machine Check Miscellaneous See Section 15.3.2.6, IA32_MCG …","Machine Check R10 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R11 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R12 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R13 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R14 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R8 See Section 15.3.2.6, IA32_MCG Extended  …","Machine Check R9D/R9 See Section 15.3.2.6, IA32_MCG …","Machine Check EAX/RAX Save State See Section 15.3.2.6, …","Machine Check EBP/RBP Save State See Section 15.3.2.6, …","Machine Check EBX/RBX Save State See Section 15.3.2.6, …","Machine Check ECX/RCX Save State See Section 15.3.2.6, …","Machine Check EDI/RDI Save State See Section 15.3.2.6, …","Machine Check EDX/RDX Save State See Section 15.3.2.6, …","Machine Check EFLAGS/RFLAG Save State See Section …","Machine Check EIP/RIP Save State See Section 15.3.2.6, …","Machine Check ESI/RSI Save State See Section 15.3.2.6, …","See http://biosbits.org.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.3, CCCR MSRs.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.2, Performance Counters.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Offcore Response Event Select Register (R/W)","Offcore Response Event Select Register (R/W)","Precise Event-Based Sampling (PEBS) (R/W)  Controls the …","see See Section 18.7.1.2, Load Latency Performance …","See Table 19-26.","","RO. This applies to processors that do not support …","Fixed-Function Performance Counter Register 0 (R/W)","Fixed-Function Performance Counter Register 1 (R/W)","Fixed-Function Performance Counter Register 2 (R/W)","Fixed-Function-Counter Control Register (R/W)","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","See Section 18.4.2, Global Counter Control Facilities.","","Package C3 Interrupt Response Limit (R/W)  Note: C-state …","Package C6 Interrupt Response Limit (R/W)  This MSR …","Package C7 Interrupt Response Limit (R/W)  This MSR …","Note: C-state values are processor specific C-state code …","Package C2 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C4 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Package C6 Residency Note: C-state values are processor …","Note: C-state values are processor specific C-state code …","Note: C-state values are processor specific C-state code …","C-State Configuration Control (R/W)  Note: C-state values …","PKG Energy Status (R/O)  See Section 14.7.3, Package RAPL …","Package RAPL Perf Status (R/O)","PKG RAPL Parameters (R/W) See Section 14.7.3,  Package …","PKG RAPL Power Limit Control (R/W)  See Section 14.7.3, …","Platform Feature Requirements (R)","Model Specific Platform ID (R)","see http://biosbits.org.","Power Management IO Redirection in C-state (R/W)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Power Control Register. See http://biosbits.org.","PP0 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 Performance Throttling Status (R/O) See Section …","PP0 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP0 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","PP1 Energy Status (R/O)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 Balance Policy (R/W)  See Section 14.7.4, PP0/PP1 RAPL …","PP1 RAPL Power Limit Control (R/W)  See Section 14.7.4, …","Uncore R-box 0 perfmon local box control MSR.","Uncore R-box 0 perfmon local box overflow control MSR.","Uncore R-box 0 perfmon local box status MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon counter MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon event select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 0 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 1 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 2 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 3 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 4 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 5 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 6 select MSR.","Uncore R-box 0 perfmon IPERF0 unit Port 7 select MSR.","Uncore R-box 0 perfmon QLX unit Port 0 select MSR.","Uncore R-box 0 perfmon QLX unit Port 1 select MSR.","Uncore R-box 0 perfmon QLX unit Port 2 select MSR.","Uncore R-box 0 perfmon QLX unit Port 3 select MSR.","Uncore R-box 1 perfmon local box control MSR.","Uncore R-box 1 perfmon local box overflow control MSR.","Uncore R-box 1 perfmon local box status MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon counter MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon event select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 10 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 11 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 12 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 13 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 14 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 15 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 8 select MSR.","Uncore R-box 1 perfmon IPERF1 unit Port 9 select MSR.","Uncore R-box 1 perfmon QLX unit Port 4 select MSR.","Uncore R-box 1 perfmon QLX unit Port 5 select MSR.","Uncore R-box 1 perfmon QLX unit Port 6 select MSR.","Uncore R-box 1 perfmon QLX unit Port 7 select MSR.","Unit Multipliers used in RAPL Interfaces (R/O)  See …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","Uncore S-box 0 perfmon local box control MSR.","Uncore S-box 0 perfmon local box overflow control MSR.","Uncore S-box 0 perfmon local box status MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon counter MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon event select MSR.","Uncore S-box 0 perfmon local box mask MSR.","Uncore S-box 0 perfmon local box match MSR.","Uncore S-box 1 perfmon local box control MSR.","Uncore S-box 1 perfmon local box overflow control MSR.","Uncore S-box 1 perfmon local box status MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon counter MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon event select MSR.","Uncore S-box 1 perfmon local box mask MSR.","Uncore S-box 1 perfmon local box match MSR.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","SMI Counter (R/O)","SMM Blocked (SMM-RO) Reports the blocked state of all …","SMM Delayed (SMM-RO) Reports the interruptible state of …","Enhanced SMM Feature Control (SMM-RW) Reports SMM …","Enhanced SMM Capabilities (SMM-RO) Reports SMM capability …","System Management Mode Physical Address Mask register  (WO …","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","","Thermal Monitor 2 Control.","ConfigTDP Control (R/W)","See http://biosbits.org.","Maximum Ratio Limit of Turbo Mode RO if MSR_PLATFORM_INFO.…","See Section 18.12.1, ESCR MSRs.","See Section 18.12.1, ESCR MSRs.","See Section 18.7.2.3, Uncore Address/Opcode Match MSR.","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.1, Uncore Performance Monitoring  …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","See Section 18.7.2.2, Uncore Performance Event …","Uncore Arb unit, counter 0 event select MSR","Uncore Arb unit, counter 1 event select MSR","Uncore Arb unit, performance counter 0","Uncore Arb unit, performance counter 1","Uncore C-Box 0, counter 0 event select MSR","Uncore C-Box 0, counter 1 event select MSR","Uncore C-Box 0, performance counter 0","Uncore C-Box 0, performance counter 1","Uncore C-Box 1, counter 0 event select MSR","Uncore C-Box 1, counter 1 event select MSR","Uncore C-Box 1, performance counter 0","Uncore C-Box 1, performance counter 1","Uncore C-Box 2, counter 0 event select MSR","Uncore C-Box 2, counter 1 event select MSR","Uncore C-Box 2, performance counter 0","Uncore C-Box 2, performance counter 1","Uncore C-Box 3, counter 0 event select MSR","Uncore C-Box 3, counter 1 event select MSR.","Uncore C-Box 3, performance counter 0.","Uncore C-Box 3, performance counter 1.","Uncore C-Box configuration information (R/O)","Uncore fixed counter","Uncore fixed counter control (R/W)","Uncore PMU global control","Uncore PMU main status","Uncore U-box perfmon counter MSR.","Uncore U-box perfmon event select MSR.","Uncore U-box perfmon global control MSR.","Uncore U-box perfmon global overflow control MSR.","Uncore U-box perfmon global status MSR.","Uncore W-box perfmon local box control MSR.","Uncore W-box perfmon local box overflow control MSR.","Uncore W-box perfmon local box status MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon counter MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon event select MSR.","Uncore W-box perfmon fixed counter","Uncore U-box perfmon fixed counter control MSR","See Section 35.16, MSRs in Pentium Processors,  and see  …","See Section 35.16, MSRs in Pentium Processors,  and see  …","","CS register target for CPL 0 code","CPL 0 code entry point","Stack pointer for CPL 0 stack","Test Control Register","See Section 17.13, Time-Stamp Counter.","Read 64 bits msr register.","Write 64 bits to msr register.","RdRand trait to implement the generic rdrand_slice …","RdSeed trait to implement the generic rdseed_slice …","Fills <code>self</code> with random bits. Returns true on success or …","Fills <code>self</code> with random bits. Returns true on success or …","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","Generates a 16-bit random value and stores it in <code>e</code>.","Generates a 32-bit random value and stores it in <code>e</code>.","Generates a 64-bit random value and stores it in <code>e</code>.","Fill a slice with random values.","","","","","Code Segment types for descriptors. See also Intel 3a, …","Data Segment types for descriptors. See also Intel 3a, …","Entry for IDT, GDT or LDT. Provides size and location of a …","Makes building descriptors easier (hopefully).","Code Execute-Only","Code Execute-Only, accessed","Code Execute-Only, conforming","Code Execute-Only, conforming, accessed","Code Execute/Read","Code Execute/Read, accessed","Code Execute/Read, conforming","Code Execute/Read, conforming, accessed","Trait that defines the architecture specific functions for …","","","","","","Trait to define functions that build an architecture …","","Requestor Privilege Level","","","","Data Read-Only, expand-down","Data Read-Only, expand-down, accessed","Data Read-Only","Data Read-Only, accessed","Data Read/Write","Data Read/Write, accessed","Data Read/Write, expand-down","Data Read/Write, expand-down, accessed","Trait to define functions that build architecture specific …","Specifies which element to load into a segment from …","System-Segment and Gate-Descriptor Types 32-bit mode. See …","System-Segment and Gate-Descriptor Types 64-bit mode See …","Table Indicator (TI) 0 means GDT is used.","Table Indicator (TI) 1 means LDT is used.","","","","Trait to implement for building a task-gate (this …","","","","","","","","Returns the set containing all flags.","","Toggle the AVL bit.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the current value of the code segment register.","","","Set default operation size (false for 16bit segment, true …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Specifies the privilege level of the segment.","Returns the current value of the data segment register.","Returns an empty set of flags.","","","","","","Returns the current value of the extra segment register.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Make a new segment selector from a untyped u16 value.","Returns the current value of the FS segment register.","Returns the current value of the GS segment register.","","Returns segment selector’s index in GDT or LDT.","Inserts the specified flags in-place.","","","","","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Set a the interrupt stack table index (only if this ends …","Set L bit if this descriptor is a 64-bit code segment. In …","","","","The segment limit is interpreted in 4-KByte units if this …","","Reload data segment register.","Reload es segment register.","Reload fs segment register.","Reload gs segment register.","Reload stack segment register.","","Create a new SegmentSelector","Returns the complement of this set of flags.","","Indicates whether the segment is present in memory (set) …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set AVL bit. System software can use this bit to store …","Create a new segment, TSS or LDT descriptor by setting the …","Set D/B. Performs different functions depending on whether …","Specifies the privilege level of the segment. The DPL is …","Set G bit Determines the scaling of the segment limit …","Set L In IA-32e mode, bit 21 of the second doubleword of …","Set Present bit. Indicates whether the segment is present …","Specifies whether the segment descriptor is for a system …","Creates a new descriptor with selector and offset (for IDT …","Set the type of the descriptor (bits 8-11). Indicates the …","Returns the current value of the stack segment register.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Loads the task register.","","Returns the current value of the task register.","Read the time stamp counter.","Read the time stamp counter.","Invalidate the given address in the TLB using the <code>invlpg</code> …","Invalidate the TLB completely by reloading the CR3 …","Contains the error value","Contains the success value","A specialized <code>Result</code> type for VMX operations.","Possible outcomes of VMfail pseudo-function used to convey …","VMCS pointer is not valid.","VMCS pointer is valid, but some other error was …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Virtual-machine control structure fields.","VM-execution, VM-exit, and VM-entry control fields.","Fields used to access guest-state area.","Fields used to access host-state area.","VM-exit information fields.","Acknowledge interrupt on exit.","APIC-access address (full).","APIC-access address (high).","Clear IA32_BNDCFGS.","Clear IA32_RTIT_CTL.","Conceal VMX from PT.","Conceal VMX from PT.","Conceal VMX from PT.","CR0 guest/host mask.","CR0 read shadow.","CR3-load exiting.","CR3-store exiting.","CR3-target count.","CR3-target value 0.","CR3-target value 1.","CR3-target value 2.","CR3-target value 3.","CR4 guest/host mask.","CR4 read shadow.","CR8-load exiting.","CR8-store exiting.","Deactivate dual-monitor treatment.","Descriptor-table exiting.","Enable EPT.","Enable INVPCID.","Enable PML.","Enable RDTSCP.","Enable user wait and pause.","Enable VM functions.","Enable VPID.","Enable XSAVES/XRSTORS.","Enable ENCLS exiting.","ENCLS-exiting bitmap (full).","ENCLS-exiting bitmap (high).","Enable ENCLV exiting.","Entry to SMM.","EOI-exit bitmap 0 (full).","EOI-exit bitmap 0 (high).","EOI-exit bitmap 1 (full).","EOI-exit bitmap 1 (high).","EOI-exit bitmap 2 (full).","EOI-exit bitmap 2 (high).","EOI-exit bitmap 3 (full).","EOI-exit bitmap 3 (high).","EPT pointer (full).","EPT pointer (high).","EPTP index.","EPTP-list address (full).","EPTP-list address (high).","EPT-violation #VE.","Exception bitmap.","Executive-VMCS pointer (full).","Executive-VMCS pointer (high).","External-interrupt exiting.","VM-entry controls.","VM-exit controls.","HLT exiting.","Host address-space size.","IA-32e mode guest.","Intel PT uses guest physical addresses.","Interrupt-window exiting.","INVLPG exiting.","Address of I/O bitmap A (full).","Address of I/O bitmap A (high).","Address of I/O bitmap B (full).","Address of I/O bitmap B (high).","Load debug controls.","Load IA32_BNDCFGS.","Load IA32_EFER.","Load IA32_EFER.","Load IA32_PAT.","Load IA32_PAT.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_PERF_GLOBAL_CTRL.","Load IA32_RTIT_CTL.","Mode-based execute control for EPT.","MONITOR exiting.","Monitor trap flag.","MOV-DR exiting","Address of MSR bitmaps (full).","Address of MSR bitmaps (high).","MWAIT exiting.","NMI exiting.","NMI-window exiting.","Page-fault error-code mask.","Page-fault error-code match.","PAUSE exiting.","PAUSE-loop exiting.","Pin-based VM-execution controls.","PLE_Gap.","PLE_Window.","PML address (full).","PML address (high).","Process posted interrupts.","Posted-interrupt descriptor address (full).","Posted-interrupt descriptor address (high).","Posted-interrupt notification vector.","Primary processor-based VM-execution controls.","Pin-based VM-execution controls.","Primary processor-based VM-execution controls.","RDPMC exiting.","RDRAND exiting.","RDSEED exiting.","RDTSC exiting.","Save debug controls.","Save IA32_EFER.","Save IA32_PAT.","Save VMX-preemption timer.","Activate secondary controls.","Secondary processor-based VM-execution controls.","Sub-page-permission-table pointer (full).","Sub-page-permission-table pointer (high).","Sub-page write permissions for EPT.","Secondary processor-based VM-execution controls.","TPR threshold.","TSC multiplier (full).","TSC multiplier (high).","TSC offset (full).","TSC offset (high).","Unconditional I/O exiting.","Unrestricted guest.","Use I/O bitmaps.","Use MSR bitmaps.","Use TPR shadow.","Use TSC offsetting.","Use TSC scaling.","Virtualize APIC accesses.","APIC-register virtualization.","Virtualize x2APIC mode.","Virtual-interrupt delivery.","Virtual NMIs.","Virtual-APIC address (full).","Virtual-APIC address (high).","Virtualization-exception information address (full).","Virtualization-exception information address (high).","VMCS shadowing.","VM-entry controls.","VM-entry exception error code.","VM-entry instruction length.","VM-entry interruption-information field.","VM-entry MSR-load address (full).","VM-entry MSR-load address (high).","VM-entry MSR-load count.","VM-exit controls.","VM-exit MSR-load address (full).","VM-exit MSR-load address (high).","VM-exit MSR-load count.","VM-exit MSR-store address (full).","VM-exit MSR-store address (high).","VM-exit MSR-store count.","VMREAD-bitmap address (full).","VMREAD-bitmap address (high).","VMWRITE-bitmap address (full).","VMWRITE-bitmap address (high).","Activate VMX-preemption timer.","VM-function controls (full).","VM-function controls (high).","Virtual-processor identifier (VPID).","WBINVD exiting.","XSS-exiting bitmap (full).","XSS-exiting bitmap (high).","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Guest activity state.","Guest CR0.","Guest CR3.","Guest CR4.","Guest CS access rights.","Guest CS base.","Guest CS limit.","Guest CS selector.","Guest DR7.","Guest DS access rights.","Guest DS base.","Guest DS limit.","Guest DS selector.","Guest ES access rights.","Guest ES base.","Guest ES limit.","Guest ES selector.","Guest FS access rights.","Guest FS base.","Guest FS limit.","Guest FS selector.","Guest GDTR base.","Guest GDTR limit.","Guest GS access rights.","Guest GS base.","Guest GS limit.","Guest GS selector.","Guest IA32_BNDCFGS (full).","Guest IA32_BNDCFGS (high).","Guest IA32_DEBUGCTL (full).","Guest IA32_DEBUGCTL (high).","Guest IA32_EFER (full).","Guest IA32_EFER (high).","Guest IA32_PAT (full).","Guest IA32_PAT (high).","Guest IA32_PERF_GLOBAL_CTRL (full).","Guest IA32_PERF_GLOBAL_CTRL (high).","Guest IA32_RTIT_CTL (full).","Guest IA32_RTIT_CTL (high).","Guest IA32_SYSENTER_CS.","Guest IA32_SYSENTER_EIP.","Guest IA32_SYSENTER_ESP.","Guest IDTR base.","Guest IDTR limit.","Guest interruptibility state.","Guest interrupt status.","Guest LDTR access rights.","Guest LDTR base.","Guest LDTR limit.","Guest LDTR selector.","VMCS link pointer (full).","VMCS link pointer (high).","Guest PDPTE0 (full).","Guest PDPTE0 (high).","Guest PDPTE1 (full).","Guest PDPTE1 (high).","Guest PDPTE2 (full).","Guest PDPTE2 (high).","Guest PDPTE3 (full).","Guest PDPTE3 (high).","Guest pending debug exceptions.","PML index.","Guest RFLAGS.","Guest RIP.","Guest RSP.","Guest SMBASE.","Guest SS access rights.","Guest SS base.","Guest SS limit.","Guest SS selector.","Guest TR access rights.","Guest TR base.","Guest TR limit.","Guest TR selector.","VMX-preemption timer value.","Host CR0.","Host CR3.","Host CR4.","Host CS selector.","Host DS selector.","Host ES selector.","Host FS base.","Host FS selector.","Host GDTR base.","Host GS base.","Host GS selector.","Host IA32_EFER (full).","Host IA32_EFER (high).","Host IA32_PAT (full).","Host IA32_PAT (high).","Host IA32_PERF_GLOBAL_CTRL (full).","Host IA32_PERF_GLOBAL_CTRL (high).","Host IA32_SYSENTER_CS.","Host IA32_SYSENTER_EIP.","Host IA32_SYSENTER_ESP.","Host IDTR base.","Host RIP.","Host RSP.","Host SS selector.","Host TR base.","Host TR selector.","Exit qualification.","Exit reason.","Guest-linear address.","Guest-physical address (full).","Guest-physical address (high).","IDT-vectoring error code.","IDT-vectoring information field.","I/O RCX.","I/O RDI.","I/O RIP.","I/O RSI.","VM-exit instruction information.","VM-exit instruction length.","VM-exit interruption error code.","VM-exit interruption information.","VM-instruction error."],"i":[0,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,15,15,0,0,13,13,0,0,0,0,14,10,0,12,10,0,14,11,10,15,10,15,11,10,12,10,0,9,9,10,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,144,9,144,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,16,16,10,11,12,13,14,15,16,9,144,10,11,12,13,14,15,16,9,9,0,144,144,144,144,16,144,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,144,144,10,11,12,13,14,15,16,9,16,144,0,9,9,9,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,24,24,24,24,24,24,24,34,35,0,0,0,34,35,34,35,0,0,0,34,35,0,34,35,0,34,35,0,0,0,34,0,0,0,34,35,0,34,35,34,35,0,29,29,29,30,30,30,31,31,31,29,29,30,30,31,31,31,32,33,29,30,31,29,30,31,29,30,31,29,30,31,34,35,29,31,29,31,29,30,31,29,30,31,29,30,31,29,29,30,30,31,31,31,31,34,35,34,35,29,29,30,30,31,31,31,34,35,34,35,34,35,34,35,34,35,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,29,30,31,34,32,35,33,29,30,31,34,35,34,35,34,35,34,35,34,35,29,30,31,34,35,34,35,32,33,29,29,29,29,29,29,29,30,30,30,30,30,30,30,31,31,31,31,31,31,31,34,34,34,34,34,32,35,35,35,35,35,33,145,146,29,29,29,29,30,30,30,30,31,31,31,31,34,32,35,33,34,35,34,35,34,35,34,35,31,31,29,30,31,34,35,34,35,34,35,34,35,145,146,29,29,29,30,30,30,31,31,31,34,32,35,33,32,33,29,30,31,34,35,29,30,31,32,33,34,35,32,33,29,30,31,32,32,33,32,33,32,33,32,33,32,33,32,33,29,30,31,29,30,31,32,33,34,35,29,30,31,34,35,0,0,29,29,29,30,30,30,31,31,31,34,35,34,35,29,30,31,31,31,29,29,29,30,30,30,31,31,31,34,35,34,35,34,35,34,35,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,145,146,29,30,31,34,32,35,33,34,35,29,30,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,48,49,50,51,52,0,0,0,50,51,52,50,51,52,0,0,0,0,0,0,0,0,48,49,50,51,52,0,50,51,0,48,49,50,51,52,0,0,0,0,0,0,0,0,0,0,0,0,0,50,51,0,0,0,48,49,50,51,52,0,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,0,48,49,50,51,52,40,40,40,41,41,41,42,42,42,40,40,41,41,42,42,42,43,44,45,46,47,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,40,41,42,48,49,50,51,52,42,42,40,41,42,40,41,42,40,41,42,40,40,41,41,42,42,42,42,48,49,50,51,52,48,49,50,51,52,40,40,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,40,41,42,48,49,43,44,50,45,51,46,52,47,40,41,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,40,41,42,48,49,50,51,52,48,49,50,51,52,43,44,45,46,47,40,40,40,40,40,40,40,41,41,41,41,41,41,41,42,42,42,42,42,42,42,48,48,48,48,48,49,49,49,49,49,43,44,50,50,50,50,50,45,51,51,51,51,51,46,52,52,52,52,52,47,147,148,149,40,40,40,40,41,41,41,41,42,42,42,42,48,49,43,44,50,45,51,46,52,47,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,42,42,40,41,42,48,49,50,51,52,40,41,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,40,40,41,41,41,42,42,42,48,49,43,44,50,45,51,46,52,47,43,44,45,46,47,40,41,42,48,49,50,51,52,40,41,42,46,47,48,49,50,51,52,46,47,40,41,42,43,44,45,46,47,40,41,42,45,46,43,44,45,46,47,43,44,45,46,47,45,46,43,44,45,46,47,43,44,45,46,47,43,44,45,46,47,40,41,42,40,41,42,43,44,45,46,47,48,49,50,51,52,40,41,42,48,49,50,51,52,0,0,0,0,0,40,40,40,41,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,40,41,42,42,42,40,41,40,40,40,41,41,41,42,42,42,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,48,49,50,51,52,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,147,148,149,40,41,42,48,49,43,44,50,45,51,46,52,47,48,49,50,51,52,40,41,42,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,0,53,0,53,53,53,53,53,53,53,53,0,54,54,54,54,54,54,54,0,0,54,0,0,0,54,54,54,0,54,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,60,60,60,60,60,60,60,60,60,0,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,0,0,0,0,0,0,0,0,58,59,60,58,59,60,58,59,60,58,59,60,58,58,58,58,58,59,59,59,59,59,60,60,60,60,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,0,0,108,0,0,105,105,105,105,108,0,81,0,0,0,0,0,0,104,0,0,81,0,0,0,76,75,104,0,94,94,118,0,0,0,0,0,0,0,0,0,0,0,94,81,105,108,0,0,106,76,75,104,108,0,0,0,0,0,75,0,0,104,0,105,105,94,76,75,0,0,105,81,0,0,0,0,0,0,105,108,108,0,0,76,104,81,0,0,0,0,0,0,75,0,81,0,104,0,0,0,76,75,94,105,75,108,108,0,106,108,61,62,63,64,66,67,66,67,68,69,69,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,69,71,73,74,74,68,77,78,69,79,61,80,81,82,83,68,84,85,86,87,68,88,89,90,91,92,0,93,93,93,93,79,95,82,93,96,93,96,93,96,93,96,97,97,97,97,98,61,61,91,61,61,93,96,94,92,63,99,97,100,90,73,61,66,80,101,68,76,102,103,104,105,106,78,107,75,67,108,69,69,70,102,69,91,91,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,94,92,63,99,97,100,90,73,79,61,66,66,80,81,82,82,101,83,68,76,76,102,84,103,104,104,85,105,105,106,106,78,107,86,118,119,87,75,75,120,67,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,105,106,78,107,86,118,119,87,75,120,67,108,79,79,79,111,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,117,79,79,79,117,79,117,79,79,79,79,117,117,79,63,92,74,70,74,70,74,74,70,73,69,70,110,69,70,73,70,91,69,98,110,99,69,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,63,69,110,110,69,70,69,69,69,77,68,88,92,69,70,69,69,73,99,69,69,98,98,69,116,116,98,70,70,69,70,110,92,98,99,69,70,100,100,69,110,92,110,69,110,99,99,98,110,99,69,98,73,92,92,98,98,98,98,98,98,98,98,69,70,98,63,63,92,63,63,110,88,115,115,114,110,70,99,107,88,89,70,70,69,92,69,63,115,70,69,70,69,70,69,100,110,69,88,69,70,99,99,89,110,70,69,69,73,69,99,99,69,69,69,69,70,70,70,69,110,98,69,88,92,70,110,73,110,69,69,69,98,88,110,63,69,110,110,110,70,110,63,73,92,88,110,73,73,73,110,116,116,110,110,88,70,110,73,110,69,99,69,69,69,69,69,69,70,99,69,92,70,99,70,69,70,92,99,69,92,69,110,88,88,70,89,88,92,69,110,69,99,98,98,110,63,110,99,69,73,99,69,92,110,73,110,63,70,69,112,70,69,112,112,112,77,78,107,112,112,93,93,93,93,62,69,102,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,80,83,84,85,86,87,120,63,91,91,91,113,91,74,68,113,113,68,91,91,91,68,68,77,78,112,116,93,96,93,96,93,96,93,96,97,97,97,97,115,96,96,96,96,115,114,96,96,96,96,102,68,103,103,63,113,110,74,68,68,116,116,73,107,69,63,63,89,115,73,116,69,0,79,80,83,84,85,86,87,120,90,90,95,82,63,91,95,113,74,63,63,73,119,68,70,71,71,103,113,99,114,116,101,101,101,101,101,74,68,103,113,119,102,69,113,99,102,102,102,102,102,102,102,102,88,88,88,90,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,95,62,82,70,64,69,98,110,111,91,112,113,114,89,115,77,116,88,95,71,74,117,62,93,96,94,92,63,99,97,100,90,73,79,61,66,80,81,82,101,83,68,76,102,84,103,104,85,105,106,78,107,86,118,119,87,75,120,67,108,91,74,79,90,103,112,112,112,112,112,112,112,112,112,112,112,112,0,122,122,122,122,122,0,122,122,0,0,0,125,125,125,125,124,124,123,123,123,123,0,0,126,126,126,124,124,126,122,126,122,122,122,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,122,123,126,122,126,122,126,123,123,123,0,0,0,0,0,0,0,0,0,0,0,0,122,126,126,126,126,123,123,126,122,123,124,125,126,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,122,122,122,122,122,122,122,122,123,124,125,126,122,122,122,122,122,122,122,122,122,122,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,122,123,0,127,127,127,127,127,127,127,0,0,0,127,0,127,127,0,0,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,128,0,128,0,128,0,0,0,128,0,128,0,128,128,128,128,128,128,128,128,129,128,129,128,128,128,128,128,129,128,0,128,0,128,128,129,129,128,128,128,128,128,128,129,128,128,128,128,128,128,128,128,128,129,128,129,128,128,129,128,128,128,128,129,128,128,128,128,129,128,129,128,129,128,128,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,131,0,0,0,0,0,0,0,0,0,134,135,135,0,0,0,0,137,137,137,137,137,137,137,137,0,134,135,135,134,135,0,132,55,55,55,55,136,136,136,136,136,136,136,136,0,0,0,0,55,55,135,135,135,0,134,135,135,134,135,134,135,55,132,133,55,55,55,55,55,55,55,55,134,135,136,137,133,132,55,134,135,136,137,133,132,150,133,133,133,55,134,135,136,137,132,55,151,133,55,55,0,151,133,133,132,55,133,0,55,55,134,135,136,137,0,55,152,133,133,55,55,55,55,55,55,134,135,136,137,133,132,132,55,134,135,136,137,133,132,55,55,55,55,55,0,0,55,55,55,150,133,133,133,55,55,55,134,135,136,137,133,132,55,55,133,133,153,133,133,133,0,0,0,0,0,0,132,55,55,55,133,55,55,132,132,132,132,132,132,132,132,132,132,0,55,55,55,154,133,55,150,133,133,133,55,134,135,136,137,133,132,55,134,135,136,137,133,132,150,133,133,133,55,134,135,136,137,133,132,55,132,0,0,0,0,0,0,0,57,57,0,0,138,138,138,138,138,138,138,138,138,138,0,0,0,0,0,143,0,0,143,143,141,142,143,0,0,140,140,0,0,0,0,0,0,0,140,140,142,141,141,141,141,141,141,141,141,141,141,0,0,141,142,0,0,0,0,0,0,0,0,0,0,0,0,0,141,0,0,0,139,0,0,140,143,142,141,140,140,0,0,0,0,142,142,142,143,142,143,142,143,142,141,140,140,140,0,0,140,139,140,0,0,140,141,0,0,0,0,0,139,0,0,0,0,0,0,140,141,141,140,143,143,143,143,140,0,0,0,141,0,0,0,0,0,0,140,141,140,140,140,140,141,141,141,141,141,139,0,0,0,0,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,0,0,0,141,0,0,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,139,139,139,139,140,140,140,140,140,141,141,141,141,141,142,142,142,142,142,143,143,143,143,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,139,140,141,142,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],0,0,0,0,0,[[1,1],2],0,[[1,3],4],[-1,-1,[]],0,0,[[],5],0,[-1,-2,[],[]],0,0,0,0,[[],6],0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[9,9],[-1,5,[]],[[10,10],2],[[11,11],2],[[12,12],2],[[13,13],2],[[14,14],2],[[15,15],2],[[16,16],2],[[9,9],2],[[10,3],4],[[11,3],4],[[12,3],4],[[13,3],4],[[14,3],4],[[15,3],4],[[16,3],4],[[9,3],4],[[17,9,15,10,11,12,13,14],16],[[17,9,15,10,11,12,13,14],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,19],0,[[-1,9],5,[]],[-1,5,[]],[[-1,9,17],5,[]],[-1,18,[]],[16,18],[[-1,16],5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[-1,17],5,[]],[[-1,6],5,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[16,18],[-1,18,[]],0,[9,18],[9,18],[9,18],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[20,5],[[20,17,17],5],[-1,-1,[]],[20,17],[-1,-2,[],[]],[19,20],[20,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[20,17],0,[21,5],[-1,-2,[],[]],[-1,-2,[],[]],[21,2],[[],21],[21,5],[21,5],[[21,3],4],[-1,-1,[]],[21,18],[-1,-2,[],[]],[[21,9],5],[21,5],[[21,9,17],5],[21,18],[[],21],[[21,16],5],[[21,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[21,17],5],[[21,6],5],[-1,8,[]],[21,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,5],[-1,-2,[],[]],[-1,-2,[],[]],[22,2],[22,5],[22,5],[[22,3],4],[-1,-1,[]],[22,18],[-1,-2,[],[]],[[22,9],5],[22,5],[[22,9,17],5],[22,18],[[[23,[18]]],22],[[22,16],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[22,17],5],[[22,6],5],[-1,8,[]],[22,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],24],[[24,24],24],[[24,24],5],[[24,24],24],[[24,24],5],[24,18],[[24,24],24],[[24,24],5],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[24,24],[[24,24],25],[24,24],[[24,24],2],[[24,24],24],[[],24],[[24,24],2],[[24,-1],5,26],[[24,3],4],[[24,3],4],[[24,3],4],[[24,3],4],[[24,3],4],[-1,-1,[]],[18,[[27,[24]]]],[18,24],[18,24],[-1,24,26],[1,24],[[24,-1],5,28],[[24,24],5],[[24,24],24],[[24,24],2],[-1,-2,[],[]],[24,2],[24,2],[[],24],[24,24],[[24,24],[[27,[25]]]],[[24,24],5],[[24,24,2],5],[[],5],[[24,24],24],[[24,24],5],[[24,24],24],[[24,24],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[24,24],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,18]],[[29,19]],[[29,29]],[[30,18]],[[30,19]],[[30,30]],[[31,31]],[[31,18]],[[31,19]],[[29,18],5],[[29,29],5],[[30,30],5],[[30,18],5],[[31,31],5],[[31,18],5],[[31,19],5],[32,29],[33,29],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[29,29],[30,30],[31,31],[[],34],[[],35],[29],[31],[29],[31],[29,18],[30,18],[31,18],[29,19],[30,19],[31,19],[29,18],[30,18],[31,18],[[29,18]],[[29,29],29],[[30,30],30],[[30,18]],[[31,19]],[[31,36]],[[31,18]],[[31,31]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[[29,18]],[[29,29]],[[30,18]],[[30,30]],[[31,18]],[[31,31],31],[[31,19]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[34,18],[35,18],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[30,30],[31,31],[34,34],[32,32],[35,35],[33,33],[[29,29],25],[[30,30],25],[[31,31],25],[[34,34],25],[[35,35],25],[34,34],[35,35],[[34,34],2],[[35,35],2],[[34,34],34],[[35,35],35],[[],34],[[],35],[[29,29],2],[[30,30],2],[[31,31],2],[[34,34],2],[[35,35],2],[[34,-1],5,26],[[35,-1],5,26],[32,34],[33,35],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[29,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[30,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[31,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[34,3],4],[[32,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[35,3],4],[[33,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,29],[36,29],[18,29],[-1,-1,[]],[18,30],[36,30],[19,30],[-1,-1,[]],[18,31],[36,31],[19,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[27,[34]]]],[18,[[27,[35]]]],[18,34],[18,35],[18,34],[18,35],[-1,34,26],[-1,35,26],[18,31],[19,31],[[29,-1],5,28],[[30,-1],5,28],[[31,-1],5,28],[[34,-1],5,28],[[35,-1],5,28],[[34,34],5],[[35,35],5],[[34,34],34],[[35,35],35],[[34,34],2],[[35,35],2],[-1,-2,[],[]],[-1,-2,[],[]],[29,19],[-1,-2,[],[]],[29,18],[-1,-2,[],[]],[30,19],[30,18],[31,19],[-1,-2,[],[]],[31,18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,2],[33,2],[[29,-1],2,[[37,[18]],38]],[[30,-1],2,[[37,[18]],38]],[[31,-1],2,[[37,[18]],38]],[34,2],[35,2],[29,2],[30,2],[31,2],[32,2],[33,2],[34,2],[35,2],[32,2],[33,2],[29,2],[30,2],[31,2],[32,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[32,2],[33,2],[29,2],[30,2],[31,2],[29,18],[30,18],[31,18],[[29,34],32],[[29,35],33],[34,34],[35,35],[[29,29],[[27,[25]]]],[[30,30],[[27,[25]]]],[[31,31],[[27,[25]]]],[[34,34],[[27,[25]]]],[[35,35],[[27,[25]]]],[31,19],[31,19],[[29,29]],[[29,18]],[[29,19]],[[30,18]],[[30,19]],[[30,30]],[31],[[31,31]],[31],[[34,34],5],[[35,35],5],[[34,34,2],5],[[35,35,2],5],[[29,18]],[[30,18]],[[31,18]],[[31,36]],[[31,19]],[[29,19]],[[29,18]],[[29,29]],[[30,19]],[[30,30]],[[30,18]],[[31,18]],[[31,31]],[[31,19]],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[[34,34],34],[[35,35],35],[[34,34],5],[[35,35],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[34,34],34],[[35,35],35],[[],29],[[],30],[[],31],0,[-1,-2,[],[]],[-1,-2,[],[]],[39,39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[39,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[[],39],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[40,40]],[[40,6]],[[40,19]],[[41,6]],[[41,19]],[[41,41]],[[42,19]],[[42,42]],[[42,6]],[[40,40],5],[[40,6],5],[[41,6],5],[[41,41],5],[[42,42],5],[[42,6],5],[[42,19],5],[43,40],[44,40],[45,40],[46,40],[47,40],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[40,40],[41,41],[42,42],[[],48],[[],49],[[],50],[[],51],[[],52],[42],[42],[40,6],[41,6],[42,6],[40,19],[41,19],[42,19],[40,6],[41,6],[42,6],[[40,40],40],[[40,6]],[[41,41],41],[[41,6]],[[42,36]],[[42,19]],[[42,6]],[[42,42]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[40,6]],[[40,40]],[[41,6]],[[41,41]],[[42,19]],[[42,42],42],[[42,6]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[48,6],[49,6],[50,6],[51,6],[52,6],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[41,41],[42,42],[48,48],[49,49],[43,43],[44,44],[50,50],[45,45],[51,51],[46,46],[52,52],[47,47],[[40,40],25],[[41,41],25],[[42,42],25],[[48,48],25],[[49,49],25],[[50,50],25],[[51,51],25],[[52,52],25],[48,48],[49,49],[50,50],[51,51],[52,52],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[],48],[[],49],[[],50],[[],51],[[],52],[[40,40],2],[[41,41],2],[[42,42],2],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[[48,-1],5,26],[[49,-1],5,26],[[50,-1],5,26],[[51,-1],5,26],[[52,-1],5,26],[43,48],[44,49],[45,50],[46,51],[47,52],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[40,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[41,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[42,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[48,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[49,3],4],[[43,3],4],[[44,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[50,3],4],[[45,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[51,3],4],[[46,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[52,3],4],[[47,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[36,40],[19,40],[6,40],[-1,-1,[]],[19,41],[36,41],[6,41],[-1,-1,[]],[6,42],[36,42],[19,42],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[27,[48]]]],[6,[[27,[49]]]],[6,[[27,[50]]]],[6,[[27,[51]]]],[6,[[27,[52]]]],[6,48],[6,49],[6,50],[6,51],[6,52],[6,48],[6,49],[6,50],[6,51],[6,52],[-1,48,26],[-1,49,26],[-1,50,26],[-1,51,26],[-1,52,26],[6,42],[19,42],[[40,-1],5,28],[[41,-1],5,28],[[42,-1],5,28],[[48,-1],5,28],[[49,-1],5,28],[[50,-1],5,28],[[51,-1],5,28],[[52,-1],5,28],[40,6],[41,6],[42,6],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],2],[[49,49],2],[[50,50],2],[[51,51],2],[[52,52],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,19],[-1,-2,[],[]],[40,6],[41,19],[41,6],[-1,-2,[],[]],[-1,-2,[],[]],[42,19],[42,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,2],[44,2],[45,2],[46,2],[47,2],[[40,-1],2,[[37,[6]],38]],[[41,-1],2,[[37,[6]],38]],[[42,-1],2,[[37,[6]],38]],[48,2],[49,2],[50,2],[51,2],[52,2],[40,2],[41,2],[42,2],[46,2],[47,2],[48,2],[49,2],[50,2],[51,2],[52,2],[46,2],[47,2],[40,2],[41,2],[42,2],[43,2],[44,2],[45,2],[46,2],[47,2],[40,2],[41,2],[42,2],[45,2],[46,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[45,2],[46,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[43,2],[44,2],[45,2],[46,2],[47,2],[40,2],[41,2],[42,2],[40,6],[41,6],[42,6],[[40,48],43],[[40,49],44],[[40,50],45],[[40,51],46],[[40,52],47],[48,48],[49,49],[50,50],[51,51],[52,52],[[40,40],[[27,[25]]]],[[41,41],[[27,[25]]]],[[42,42],[[27,[25]]]],[[48,48],[[27,[25]]]],[[49,49],[[27,[25]]]],[[50,50],[[27,[25]]]],[[51,51],[[27,[25]]]],[[52,52],[[27,[25]]]],[42,19],[42,19],[42,19],[42,19],[42,19],[[40,40]],[[40,6]],[[40,19]],[[41,19]],[[41,6]],[[41,41]],[[42,42]],[42],[42],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48,2],5],[[49,49,2],5],[[50,50,2],5],[[51,51,2],5],[[52,52,2],5],[[40,6]],[[41,6]],[[42,6]],[[42,19]],[[42,36]],[40,[[5,[18,18]]]],[41,[[5,[18,18]]]],[[40,6]],[[40,40]],[[40,19]],[[41,6]],[[41,19]],[[41,41]],[[42,6]],[[42,42]],[[42,19]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[48,48],48],[[49,49],49],[[50,50],50],[[51,51],51],[[52,52],52],[[],40],[[],41],[[],42],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],[[53,53],53],[[53,53],5],[[53,53],53],[[53,53],5],[53,6],[[53,53],53],[[53,53],5],[-1,-2,[],[]],[-1,-2,[],[]],0,[53,53],[[53,53],25],[53,53],[[53,53],2],[[53,53],53],[[],53],[[53,53],2],[[53,-1],5,26],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[[53,3],4],[-1,-1,[]],[6,[[27,[53]]]],[6,53],[6,53],[-1,53,26],[1,53],[6,53],[[53,-1],5,28],[[53,53],5],[[53,53],53],[[53,53],2],[-1,-2,[],[]],[53,2],[53,2],[[],53],[53,53],[[53,53],[[27,[25]]]],[[],53],[[53,53],5],[53,5],[[53,53,2],5],0,[[53,53],53],[[53,53],5],[[53,53],53],[[53,53],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[53,53],53],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[],54],[[54,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],[55,5],[[],6],[[],6],[[54,6,6],5],[[54,17],5],[[54,55,6],5],[[],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,5],[6,5],[[6,6],5],[[6,6],5],[[6,6],5],[6,18],[6,6],[[6,6],5],[[6,6],5],[[6,6,6],18],[[6,6,6],18],[[6,6,6],18],[[6,6],18],[[6,6],18],[[6,6],5],[6,5],[6,18],[[6,6,6],18],[[6,6],18],[[6,6,6],18],[[6,6],[[5,[18,6]]]],[[6,6],5],[[6,6],5],[[6,6],5],[[6,6,6],5],[[6,6],5],[6,6],[[6,6],6],[[6,6,6],6],[[6,6,6,6],6],[[6,6,6,6,6],6],[[6,6,6,6,6,6],6],[[6,6,6,6,6,6,6],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[],56],[[56,3],4],[-1,-1,[]],[-1,-2,[],[]],0,0,[[],56],0,0,0,0,0,[[56,19,6],5],[[56,1,6],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[6,[[57,[5]]]],[[],[[57,[5]]]],[6,[[57,[5]]]],[[],[[57,[6]]]],[18,[[57,[6]]]],[[],[[57,[5]]]],[[18,6],[[57,[5]]]],[[],[[57,[5]]]],[6,[[57,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[[],59],[[],60],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[58,19],[59,19],[60,6],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,58],[59,59],[60,60],[[58,58],25],[[59,59],25],[[60,60],25],[58,58],[59,59],[60,60],[[58,58],2],[[59,59],2],[[60,60],2],[[],58],[58,5],[[],19],[6,5],[[],6],[6,5],[[],59],[59,5],[[58,58],58],[[59,59],59],[[60,60],60],[[],58],[[],59],[[],60],[[58,58],2],[[59,59],2],[[60,60],2],[[58,-1],5,26],[[59,-1],5,26],[[60,-1],5,26],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[58,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[59,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[[60,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[27,[58]]]],[19,[[27,[59]]]],[6,[[27,[60]]]],[19,58],[19,59],[6,60],[19,58],[19,59],[6,60],[-1,58,26],[-1,59,26],[-1,60,26],[[58,-1],5,28],[[59,-1],5,28],[[60,-1],5,28],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],2],[[59,59],2],[[60,60],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,2],[59,2],[60,2],[58,2],[59,2],[60,2],[58,58],[59,59],[60,60],[[58,58],[[27,[25]]]],[[59,59],[[27,[25]]]],[[60,60],[[27,[25]]]],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58,2],5],[[59,59,2],5],[[60,60,2],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[[58,58],58],[[59,59],59],[[60,60],60],[[58,58],5],[[59,59],5],[[60,60],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[58,58],58],[[59,59],59],[[60,60],60],[[],60],[60,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,2],[62,[[27,[18]]]],[63,17],[64,65],[66,65],[67,65],[66,65],[67,65],[68,19],[69,17],[69,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,18],[69,17],[71,72],[73,17],[74,17],[74,75],[68,76],[77,17],[78,17],[69,17],[79,79],[61,61],[80,80],[81,81],[82,82],[83,83],[68,68],[84,84],[85,85],[86,86],[87,87],[68,19],[88,17],[89,18],[90,17],[91,17],[92,18],0,[93,94],[93,17],[93,17],[93,17],[[],79],[95,18],[82,65],[93,94],[96,94],[93,17],[96,72],[93,94],[96,94],[93,17],[96,72],[97,94],[97,17],[97,94],[97,17],[98,17],0,0,[91,17],0,0,[[93,93],2],[[96,96],2],[[94,94],2],[[92,92],2],[[63,63],2],[[99,99],2],[[97,97],2],[[100,100],2],[[90,90],2],[[73,73],2],[[61,61],2],[[66,66],2],[[80,80],2],[[101,101],2],[[68,68],2],[[76,76],2],[[102,102],2],[[103,103],2],[[104,104],2],[[105,105],2],[[106,106],2],[[78,78],2],[[107,107],2],[[75,75],2],[[67,67],2],[[108,108],2],[69,17],[69,17],[70,18],[102,2],[69,17],[91,17],[91,17],[[70,3],[[7,[5,109]]]],[[64,3],[[7,[5,109]]]],[[69,3],[[7,[5,109]]]],[[98,3],[[7,[5,109]]]],[[110,3],[[7,[5,109]]]],[[111,3],[[7,[5,109]]]],[[91,3],[[7,[5,109]]]],[[112,3],[[7,[5,109]]]],[[113,3],[[7,[5,109]]]],[[114,3],[[7,[5,109]]]],[[89,3],[[7,[5,109]]]],[[115,3],[[7,[5,109]]]],[[77,3],[[7,[5,109]]]],[[116,3],[[7,[5,109]]]],[[88,3],[[7,[5,109]]]],[[95,3],[[7,[5,109]]]],[[71,3],[[7,[5,109]]]],[[74,3],[[7,[5,109]]]],[[117,3],[[7,[5,109]]]],[[62,3],[[7,[5,109]]]],[[93,3],[[7,[5,109]]]],[[96,3],[[7,[5,109]]]],[[94,3],[[7,[5,109]]]],[[94,3],[[7,[5,109]]]],[[92,3],[[7,[5,109]]]],[[63,3],[[7,[5,109]]]],[[99,3],[[7,[5,109]]]],[[97,3],[[7,[5,109]]]],[[100,3],[[7,[5,109]]]],[[90,3],[[7,[5,109]]]],[[73,3],[[7,[5,109]]]],[[79,3],[[7,[5,109]]]],[[61,3],[[7,[5,109]]]],[[66,3],[[7,[5,109]]]],[[66,3],[[7,[5,109]]]],[[80,3],[[7,[5,109]]]],[[81,3],[[7,[5,109]]]],[[82,3],[[7,[5,109]]]],[[82,3],[[7,[5,109]]]],[[101,3],[[7,[5,109]]]],[[83,3],[[7,[5,109]]]],[[68,3],[[7,[5,109]]]],[[76,3],[[7,[5,109]]]],[[76,3],[[7,[5,109]]]],[[102,3],[[7,[5,109]]]],[[84,3],[[7,[5,109]]]],[[103,3],[[7,[5,109]]]],[[104,3],[[7,[5,109]]]],[[104,3],[[7,[5,109]]]],[[85,3],[[7,[5,109]]]],[[105,3],[[7,[5,109]]]],[[105,3],[[7,[5,109]]]],[[106,3],[[7,[5,109]]]],[[106,3],[[7,[5,109]]]],[[78,3],[[7,[5,109]]]],[[107,3],[[7,[5,109]]]],[[86,3],[[7,[5,109]]]],[[118,3],[[7,[5,109]]]],[[119,3],[[7,[5,109]]]],[[87,3],[[7,[5,109]]]],[[75,3],[[7,[5,109]]]],[[75,3],[[7,[5,109]]]],[[120,3],[[7,[5,109]]]],[[67,3],[[7,[5,109]]]],[[67,3],[[7,[5,109]]]],[[108,3],[[7,[5,109]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[79,[[27,[92]]]],[79,[[27,[80]]]],[79,[[27,[83]]]],[111,18],[79,[[27,[87]]]],[79,[[27,[111]]]],[79,[[27,[110]]]],[79,[[27,[70]]]],[79,[[27,[112]]]],[79,[[27,[84]]]],[79,[[27,[84]]]],[79,[[27,[69]]]],[79,[[27,[62]]]],[79,[[27,[93]]]],[79,[[27,[96]]]],[79,[[27,[73]]]],[79,[[27,[102]]]],[79,[[27,[91]]]],[79,[[27,[100]]]],[79,[[27,[64]]]],[79,[[27,[63]]]],[79,[[27,[71]]]],[79,[[27,[101]]]],[79,[[27,[90]]]],[79,[[27,[88]]]],[117,18],[79,[[27,[115]]]],[79,[[27,[114]]]],[79,[[27,[116]]]],[117,72],[79,[[27,[117]]]],[117,18],[79,[[27,[99]]]],[79,[[27,[98]]]],[79,[[27,[97]]]],[79,[[27,[95]]]],[117,[[27,[120]]]],[117,[[27,[67]]]],[79,[[27,[66]]]],[63,17],[92,2],[74,2],[70,2],[74,2],[70,2],[74,2],[74,2],[70,2],[73,2],[69,2],[70,2],[110,2],[69,2],[70,2],[73,2],[70,2],[91,2],[69,2],[98,2],[110,2],[99,2],[69,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[110,2],[63,2],[69,2],[110,2],[110,2],[69,2],[70,2],[69,2],[69,2],[69,2],[77,2],[68,2],[88,2],[92,2],[69,2],[70,2],[69,2],[69,2],[73,2],[99,2],[69,2],[69,2],[98,2],[98,2],[69,2],[116,2],[116,2],[98,2],[70,2],[70,2],[69,2],[70,2],[110,2],[92,2],[98,2],[99,2],[69,2],[70,2],[100,2],[100,2],[69,2],[110,2],[92,2],[110,2],[69,2],[110,2],[99,2],[99,2],[98,2],[110,2],[99,2],[69,2],[98,2],[73,2],[92,2],[92,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[98,2],[69,2],[70,2],[98,2],[63,2],[63,2],[92,2],[63,2],[63,2],[110,2],[88,2],[115,2],[115,2],[114,2],[110,2],[70,2],[99,2],[107,2],[88,2],[89,2],[70,2],[70,2],[69,2],[92,2],[69,2],[63,2],[115,2],[70,2],[69,2],[70,2],[69,2],[70,2],[69,2],[100,2],[110,2],[69,2],[88,2],[69,2],[70,2],[99,2],[99,2],[89,2],[110,2],[70,2],[69,2],[69,2],[73,2],[69,2],[99,2],[99,2],[69,2],[69,2],[69,2],[69,2],[70,2],[70,2],[70,2],[69,2],[110,2],[98,2],[69,2],[88,2],[92,2],[70,2],[110,2],[73,2],[110,2],[69,2],[69,2],[69,2],[98,2],[88,2],[110,2],[63,2],[69,2],[110,2],[110,2],[110,2],[70,2],[110,2],[63,2],[73,2],[92,2],[88,2],[110,2],[73,2],[73,2],[73,2],[110,2],[116,2],[116,2],[110,2],[110,2],[88,2],[70,2],[110,2],[73,2],[110,2],[69,2],[99,2],[69,2],[69,2],[69,2],[69,2],[69,2],[69,2],[70,2],[99,2],[69,2],[92,2],[70,2],[99,2],[70,2],[69,2],[70,2],[92,2],[99,2],[69,2],[92,2],[69,2],[110,2],[88,2],[88,2],[70,2],[89,2],[88,2],[92,2],[69,2],[110,2],[69,2],[99,2],[98,2],[98,2],[110,2],[63,2],[110,2],[99,2],[69,2],[73,2],[99,2],[69,2],[92,2],[110,2],[73,2],[110,2],[63,2],[70,2],[69,2],[112,2],[70,2],[69,2],[112,2],[112,2],[112,2],[77,72],[78,72],[107,72],[112,2],[112,2],[93,94],[93,17],[93,17],[93,17],[62,108],[69,17],[102,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,72],[91,2],[91,2],[91,2],[113,2],[91,2],[74,2],[68,2],[113,2],[113,2],[68,2],[91,2],[91,2],[91,2],[68,2],[68,2],[77,18],[78,18],[112,85],[116,86],[93,94],[96,94],[93,17],[96,72],[93,94],[96,94],[93,17],[96,72],[97,94],[97,17],[97,94],[97,17],[115,[[27,[78]]]],[96,94],[96,17],[96,17],[96,72],[115,[[27,[77]]]],[114,[[27,[89]]]],[96,94],[96,17],[96,17],[96,72],[102,72],[68,17],[103,17],[103,104],[63,17],[113,106],[110,17],[74,72],[68,19],[68,19],[116,17],[116,17],[73,18],[107,72],[69,17],[63,72],[63,19],[89,18],[115,[[27,[107]]]],[73,18],[116,18],[69,17],0,[[],79],[80,[[27,[82]]]],[83,[[27,[68]]]],[84,[[27,[103]]]],[85,[[27,[113]]]],[86,[[27,[118]]]],[87,[[27,[74]]]],[120,[[27,[61]]]],[90,17],[90,17],[95,18],0,[63,19],[91,17],[95,18],[113,18],[74,17],[63,19],[63,17],[73,17],[119,6],[68,19],[70,18],[71,72],[71,72],[103,72],[113,105],[99,17],[114,18],[116,[[5,[6,6]]]],[101,6],[101,121],[101,18],[101,18],[101,18],[74,18],[68,19],[103,18],[113,18],[119,6],[102,72],[69,17],0,[99,18],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[102,72],[88,72],[88,72],[88,72],[90,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[95,[[27,[6]]]],[62,[[27,[18]]]],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[91,17],[74,72],[[],79],[90,18],[103,18],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,2],[112,18],[112,18],[112,18],[[18,18],61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],122],[[122,122],122],[[122,122],5],[[122,122],122],[[122,122],5],[122,19],[[122,122],122],[[122,122],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[123,123],[124,124],[125,125],[126,126],[[122,122],25],[122,122],[[123,19,124,125],5],[[126,123,124,125],5],[[122,122],2],[[],126],[[122,122],122],[[126,123,2],5],[123,5],[123,5],[123,19],[[],19],[19,5],[[],19],[19,5],[[],19],[19,5],[[],19],[19,5],[[],122],[122,5],[[],126],[126,5],[[],122],[[126,123,2],5],[126,5],[126,5],[126,5],[123,5],[123,5],[126,5],[[122,122],2],[[123,123],2],[[124,124],2],[[125,125],2],[[126,126],2],[[122,-1],5,26],[[122,3],4],[[122,3],4],[[122,3],4],[[122,3],4],[[122,3],4],[[123,3],4],[[124,3],4],[[125,3],4],[[126,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[27,[122]]]],[19,122],[19,122],[-1,122,26],[[122,-1],5,28],[[122,122],5],[[122,122],122],[[122,122],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,2],[122,2],[122,122],[[122,122],[[27,[25]]]],[[122,122],5],[[122,122,2],5],[[122,122],122],[[122,122],5],[[122,122],122],[[122,122],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[122,122],122],[[123,19],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],[[127,[-1]]],[]],[[[127,[-1]],3],4,[]],[-1,-1,[]],[-1,-2,[],[]],[[],55],[[[127,[-1]]],5,[]],[[[127,[-1]]],5,[]],0,[55,5],[-1,[[127,[-1]]],[]],[[[23,[-1]]],[[127,[-1]]],[]],[[[127,[-1]]],5,[]],[[[127,[-1]]],5,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[],5],[[],5],[[],5],[72,17],[72,18],[72,72],[[72,17],5],[[72,18],5],[[72,72],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],128],[[128,128],128],[[128,128],5],[[128,128],128],[[128,128],5],[128,18],[[128,128],128],[[128,128],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[128,128],[[128,128],25],[128,128],[[128,128],2],0,[[128,128],128],[[],5],[[],128],[[],5],[[128,128],2],[[128,-1],5,26],[[129,3],4],[[129,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[[128,3],4],[-1,-1,[]],[-1,-1,[]],[18,[[27,[128]]]],[18,128],[18,128],[-1,128,26],[[128,-1],5,28],[[128,128],5],[[128,128],128],[[128,128],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[128,2],[128,2],0,[128,128],[[128,128],[[27,[25]]]],[[128,128],5],[[128,128,2],5],0,[[128,128],128],[[128,128],5],[[128,128],128],[[128,128],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[[128,128],128],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,6],[[18,6],5],0,0,[-1,2,[]],[-1,2,[]],[72,2],[18,2],[6,2],[[[23,[-1]]],2,130],[72,2],[18,2],[6,2],[[[23,[-1]]],2,131],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],55],[132,6],[133,133],[[55,55],55],[[55,55],5],[[55,55],55],[[55,55],5],[55,72],[[55,55],55],[[55,55],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,-1],-2,[],[]],[[55,6],133],[[55,18],133],[[55,72],133],[55,55],[134,134],[135,135],[136,136],[137,137],[132,132],[[55,55],25],[[-1,-1,137],-2,[],[]],[[18,18,137],133],[55,55],[[55,55],2],[[],55],[[-1,-1,136],-2,[],[]],[[18,18,136],133],[133,133],[[],132],[[55,55],55],[[133,1],133],[[],55],[[],55],[[55,55],2],[[134,134],2],[[135,135],2],[[136,136],2],[[137,137],2],[[],55],[[55,-1],5,26],[-1,-2,[],[]],[133,132],[133,54],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[55,3],4],[[134,3],4],[[135,3],4],[[136,3],4],[[137,3],4],[[133,3],4],[[132,3],4],[[132,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,[[27,[55]]]],[72,55],[72,55],[-1,55,26],[72,55],[[],55],[[],55],[[55,-1],5,28],[55,72],[[55,55],5],[[55,-1],-2,[],[]],[[55,6],133],[[55,72],133],[[55,18],133],[[55,55],55],[[55,55],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[55,2],[55,2],[[133,17],133],[133,133],[[-1,-1],-2,[],[]],[[6,6],133],[[18,18],133],[133,133],0,[55,5],[55,5],[55,5],[55,5],[55,5],0,[[72,1],55],[55,55],[[55,55],[[27,[25]]]],[133,133],[[55,55],5],[[55,55,2],5],[132,5],[[132,18,18],5],[132,5],[[132,1],5],[132,5],[132,5],[132,5],[132,5],[[132,55,18],5],[[132,17],5],[[],55],[[55,55],55],[[55,55],5],[[55,55],55],[55,-1,[]],[55,133],[[55,55],5],[[55,-1],-2,[],[]],[[55,18],133],[[55,72],133],[[55,6],133],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[[6,6,2],-1,[]],[[6,6,2],133],[[6,6,2],133],[[6,6,2],133],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[55,55],55],0,[55,5],0,[[],55],[[],6],[[],[[5,[6,18]]]],[19,5],[[],5],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[138,3],4],[-1,-1,[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],139],[[],140],[[],141],[[],142],[[],143],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[139,18],[140,18],[141,18],[142,18],[143,18],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],25],[[140,140],25],[[141,141],25],[[142,142],25],[[143,143],25],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[],139],[[],140],[[],141],[[],142],[[],143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[[139,-1],5,26],[[140,-1],5,26],[[141,-1],5,26],[[142,-1],5,26],[[143,-1],5,26],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[140,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[141,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[142,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[[143,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[27,[139]]]],[18,[[27,[140]]]],[18,[[27,[141]]]],[18,[[27,[142]]]],[18,[[27,[143]]]],[18,139],[18,140],[18,141],[18,142],[18,143],[18,139],[18,140],[18,141],[18,142],[18,143],[-1,139,26],[-1,140,26],[-1,141,26],[-1,142,26],[-1,143,26],[[139,-1],5,28],[[140,-1],5,28],[[141,-1],5,28],[[142,-1],5,28],[[143,-1],5,28],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],2],[[140,140],2],[[141,141],2],[[142,142],2],[[143,143],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,2],[140,2],[141,2],[142,2],[143,2],[139,2],[140,2],[141,2],[142,2],[143,2],[139,139],[140,140],[141,141],[142,142],[143,143],[[139,139],[[27,[25]]]],[[140,140],[[27,[25]]]],[[141,141],[[27,[25]]]],[[142,142],[[27,[25]]]],[[143,143],[[27,[25]]]],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139,2],5],[[140,140,2],5],[[141,141,2],5],[[142,142,2],5],[[143,143,2],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],[[139,139],5],[[140,140],5],[[141,141],5],[[142,142],5],[[143,143],5],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[139,139],139],[[140,140],140],[[141,141],141],[[142,142],142],[[143,143],143],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[1864,1865],"p":[[4,"Ring",0],[15,"bool"],[3,"Formatter",4985],[6,"Result",4985],[15,"tuple"],[15,"u64"],[4,"Result",4986],[3,"TypeId",4987],[4,"ApicId",40],[4,"DeliveryMode",40],[4,"DestinationMode",40],[4,"DeliveryStatus",40],[4,"Level",40],[4,"TriggerMode",40],[4,"DestinationShorthand",40],[3,"Icr",40],[15,"u8"],[15,"u32"],[15,"usize"],[3,"IoApic",165],[3,"X2APIC",179],[3,"XAPIC",204],[15,"slice"],[3,"EFlags",276],[4,"Ordering",4988],[8,"IntoIterator",4989],[4,"Option",4990],[8,"Hasher",4991],[3,"PAddr",349],[3,"IOAddr",349],[3,"VAddr",349],[3,"PDEntry",349],[3,"PTEntry",349],[3,"PDFlags",349],[3,"PTFlags",349],[15,"i32"],[8,"Into",4992],[8,"Copy",4993],[3,"TaskStateSegment",708],[3,"PAddr",753],[3,"IOAddr",753],[3,"VAddr",753],[3,"PML4Entry",753],[3,"PML5Entry",753],[3,"PDPTEntry",753],[3,"PDEntry",753],[3,"PTEntry",753],[3,"PML4Flags",753],[3,"PML5Flags",753],[3,"PDPTFlags",753],[3,"PDFlags",753],[3,"PTFlags",753],[3,"RFlags",1394],[3,"Descriptor64",1470],[3,"SegmentSelector",4223],[3,"TaskStateSegment",1524],[6,"Result",4453],[3,"Cr0",1554],[3,"Cr4",1554],[3,"Xcr0",1554],[3,"CpuIdResult",1749],[3,"HypervisorInfo",1749],[3,"ProcessorCapacityAndFeatureInfo",1749],[3,"ProcessorBrandString",1749],[15,"str"],[3,"VendorInfo",1749],[3,"SoCVendorBrand",1749],[3,"CacheParameter",1749],[3,"FeatureInfo",1749],[3,"ExtendedProcessorFeatureIdentifiers",1749],[3,"ProcessorFrequencyInfo",1749],[15,"u16"],[3,"MemoryEncryptionInfo",1749],[3,"DatInfo",1749],[4,"DatType",1749],[4,"CacheType",1749],[3,"L3CatInfo",1749],[3,"L2CatInfo",1749],[3,"CpuId",1749],[3,"CacheInfoIter",1749],[4,"CacheInfoType",1749],[3,"CacheInfo",1749],[3,"CacheParametersIter",1749],[3,"ExtendedTopologyIter",1749],[3,"ExtendedStateIter",1749],[3,"SgxSectionIter",1749],[3,"DatIter",1749],[3,"ProcessorTraceInfo",1749],[3,"L3MonitoringInfo",1749],[3,"ProcessorTopologyInfo",1749],[3,"PerformanceMonitoringInfo",1749],[3,"ApmInfo",1749],[3,"L1CacheTlbInfo",1749],[4,"Associativity",1749],[3,"TscInfo",1749],[3,"L2And3CacheTlbInfo",1749],[3,"Tlb1gbPageInfo",1749],[3,"ThermalPowerInfo",1749],[3,"SvmFeatures",1749],[3,"PerformanceOptimizationInfo",1749],[3,"ProcessorSerial",1749],[3,"MonitorMwaitInfo",1749],[3,"ExtendedTopologyLevel",1749],[4,"TopologyType",1749],[4,"ExtendedRegisterType",1749],[4,"ExtendedRegisterStateLocation",1749],[3,"MemBwAllocationInfo",1749],[4,"Hypervisor",1749],[3,"Error",4985],[3,"ExtendedFeatures",1749],[3,"DirectCacheAccessInfo",1749],[3,"ExtendedStateInfo",1749],[3,"ExtendedState",1749],[3,"RdtMonitoringInfo",1749],[3,"RdtAllocationInfo",1749],[3,"SgxInfo",1749],[3,"SoCVendorInfo",1749],[4,"SgxSectionInfo",1749],[3,"EpcSection",1749],[3,"SoCVendorAttributesIter",1749],[15,"u128"],[3,"Dr6",2876],[4,"Breakpoint",2876],[4,"BreakCondition",2876],[4,"BreakSize",2876],[3,"Dr7",2876],[3,"DescriptorTablePointer",3021],[3,"PageFaultError",3050],[3,"InterruptDescription",3050],[8,"RdRand",4211],[8,"RdSeed",4211],[3,"Descriptor",4223],[3,"DescriptorBuilder",4223],[4,"SystemDescriptorTypes64",4223],[4,"SystemDescriptorTypes32",4223],[4,"DataSegmentType",4223],[4,"CodeSegmentType",4223],[4,"VmFail",4453],[3,"PinbasedControls",4472],[3,"PrimaryControls",4472],[3,"SecondaryControls",4472],[3,"EntryControls",4472],[3,"ExitControls",4472],[8,"ApicControl",40],[3,"Page",349],[3,"LargePage",349],[3,"Page",753],[3,"LargePage",753],[3,"HugePage",753],[8,"GateDescriptorBuilder",4223],[8,"SegmentDescriptorBuilder",4223],[8,"BuildDescriptor",4223],[8,"LdtDescriptorBuilder",4223],[8,"TaskGateDescriptorBuilder",4223]],"b":[[317,"impl-Binary-for-EFlags"],[318,"impl-Debug-for-EFlags"],[319,"impl-Octal-for-EFlags"],[320,"impl-UpperHex-for-EFlags"],[321,"impl-LowerHex-for-EFlags"],[384,"impl-Add%3Cu32%3E-for-PAddr"],[385,"impl-Add%3Cusize%3E-for-PAddr"],[386,"impl-Add-for-PAddr"],[387,"impl-Add%3Cu32%3E-for-IOAddr"],[388,"impl-Add%3Cusize%3E-for-IOAddr"],[389,"impl-Add-for-IOAddr"],[390,"impl-Add-for-VAddr"],[391,"impl-Add%3Cu32%3E-for-VAddr"],[392,"impl-Add%3Cusize%3E-for-VAddr"],[393,"impl-AddAssign%3Cu32%3E-for-PAddr"],[394,"impl-AddAssign-for-PAddr"],[395,"impl-AddAssign-for-IOAddr"],[396,"impl-AddAssign%3Cu32%3E-for-IOAddr"],[397,"impl-AddAssign-for-VAddr"],[398,"impl-AddAssign%3Cu32%3E-for-VAddr"],[399,"impl-AddAssign%3Cusize%3E-for-VAddr"],[429,"impl-BitAnd%3Cu32%3E-for-PAddr"],[430,"impl-BitAnd-for-PAddr"],[431,"impl-BitAnd-for-IOAddr"],[432,"impl-BitAnd%3Cu32%3E-for-IOAddr"],[433,"impl-BitAnd%3Cusize%3E-for-VAddr"],[434,"impl-BitAnd%3Ci32%3E-for-VAddr"],[435,"impl-BitAnd%3Cu32%3E-for-VAddr"],[436,"impl-BitAnd-for-VAddr"],[441,"impl-BitOr%3Cu32%3E-for-PAddr"],[442,"impl-BitOr-for-PAddr"],[443,"impl-BitOr%3Cu32%3E-for-IOAddr"],[444,"impl-BitOr-for-IOAddr"],[445,"impl-BitOr%3Cu32%3E-for-VAddr"],[446,"impl-BitOr-for-VAddr"],[447,"impl-BitOr%3Cusize%3E-for-VAddr"],[505,"impl-Pointer-for-PAddr"],[506,"impl-LowerHex-for-PAddr"],[507,"impl-Display-for-PAddr"],[508,"impl-Octal-for-PAddr"],[509,"impl-Debug-for-PAddr"],[510,"impl-UpperHex-for-PAddr"],[511,"impl-Binary-for-PAddr"],[512,"impl-Debug-for-IOAddr"],[513,"impl-Binary-for-IOAddr"],[514,"impl-Pointer-for-IOAddr"],[515,"impl-UpperHex-for-IOAddr"],[516,"impl-LowerHex-for-IOAddr"],[517,"impl-Display-for-IOAddr"],[518,"impl-Octal-for-IOAddr"],[519,"impl-LowerHex-for-VAddr"],[520,"impl-Debug-for-VAddr"],[521,"impl-Pointer-for-VAddr"],[522,"impl-UpperHex-for-VAddr"],[523,"impl-Octal-for-VAddr"],[524,"impl-Display-for-VAddr"],[525,"impl-Binary-for-VAddr"],[526,"impl-LowerHex-for-PDFlags"],[527,"impl-Octal-for-PDFlags"],[528,"impl-Debug-for-PDFlags"],[529,"impl-Binary-for-PDFlags"],[530,"impl-UpperHex-for-PDFlags"],[532,"impl-Debug-for-PTFlags"],[533,"impl-LowerHex-for-PTFlags"],[534,"impl-UpperHex-for-PTFlags"],[535,"impl-Octal-for-PTFlags"],[536,"impl-Binary-for-PTFlags"],[541,"impl-From%3Cusize%3E-for-PAddr"],[542,"impl-From%3Ci32%3E-for-PAddr"],[543,"impl-From%3Cu32%3E-for-PAddr"],[545,"impl-From%3Cu32%3E-for-IOAddr"],[546,"impl-From%3Ci32%3E-for-IOAddr"],[547,"impl-From%3Cusize%3E-for-IOAddr"],[549,"impl-From%3Cu32%3E-for-VAddr"],[550,"impl-From%3Ci32%3E-for-VAddr"],[551,"impl-From%3Cusize%3E-for-VAddr"],[579,"impl-Into%3Cusize%3E-for-PAddr"],[581,"impl-Into%3Cu32%3E-for-PAddr"],[583,"impl-Into%3Cusize%3E-for-IOAddr"],[584,"impl-Into%3Cu32%3E-for-IOAddr"],[585,"impl-Into%3Cusize%3E-for-VAddr"],[587,"impl-Into%3Cu32%3E-for-VAddr"],[641,"impl-Rem-for-PAddr"],[642,"impl-Rem%3Cu32%3E-for-PAddr"],[643,"impl-Rem%3Cusize%3E-for-PAddr"],[644,"impl-Rem%3Cu32%3E-for-IOAddr"],[645,"impl-Rem%3Cusize%3E-for-IOAddr"],[646,"impl-Rem-for-IOAddr"],[647,"impl-Rem%3Cusize%3E-for-VAddr"],[648,"impl-Rem-for-VAddr"],[649,"impl-Rem%3Cu32%3E-for-VAddr"],[656,"impl-Shr%3Cu32%3E-for-VAddr"],[657,"impl-Shr%3Ci32%3E-for-VAddr"],[658,"impl-Shr%3Cusize%3E-for-VAddr"],[659,"impl-Sub%3Cusize%3E-for-PAddr"],[660,"impl-Sub%3Cu32%3E-for-PAddr"],[661,"impl-Sub-for-PAddr"],[662,"impl-Sub%3Cusize%3E-for-IOAddr"],[663,"impl-Sub-for-IOAddr"],[664,"impl-Sub%3Cu32%3E-for-IOAddr"],[665,"impl-Sub%3Cu32%3E-for-VAddr"],[666,"impl-Sub-for-VAddr"],[667,"impl-Sub%3Cusize%3E-for-VAddr"],[844,"impl-Add-for-PAddr"],[845,"impl-Add%3Cu64%3E-for-PAddr"],[846,"impl-Add%3Cusize%3E-for-PAddr"],[847,"impl-Add%3Cu64%3E-for-IOAddr"],[848,"impl-Add%3Cusize%3E-for-IOAddr"],[849,"impl-Add-for-IOAddr"],[850,"impl-Add%3Cusize%3E-for-VAddr"],[851,"impl-Add-for-VAddr"],[852,"impl-Add%3Cu64%3E-for-VAddr"],[853,"impl-AddAssign-for-PAddr"],[854,"impl-AddAssign%3Cu64%3E-for-PAddr"],[855,"impl-AddAssign%3Cu64%3E-for-IOAddr"],[856,"impl-AddAssign-for-IOAddr"],[857,"impl-AddAssign-for-VAddr"],[858,"impl-AddAssign%3Cu64%3E-for-VAddr"],[859,"impl-AddAssign%3Cusize%3E-for-VAddr"],[899,"impl-BitAnd-for-PAddr"],[900,"impl-BitAnd%3Cu64%3E-for-PAddr"],[901,"impl-BitAnd-for-IOAddr"],[902,"impl-BitAnd%3Cu64%3E-for-IOAddr"],[903,"impl-BitAnd%3Ci32%3E-for-VAddr"],[904,"impl-BitAnd%3Cusize%3E-for-VAddr"],[905,"impl-BitAnd%3Cu64%3E-for-VAddr"],[906,"impl-BitAnd-for-VAddr"],[917,"impl-BitOr%3Cu64%3E-for-PAddr"],[918,"impl-BitOr-for-PAddr"],[919,"impl-BitOr%3Cu64%3E-for-IOAddr"],[920,"impl-BitOr-for-IOAddr"],[921,"impl-BitOr%3Cusize%3E-for-VAddr"],[922,"impl-BitOr-for-VAddr"],[923,"impl-BitOr%3Cu64%3E-for-VAddr"],[1040,"impl-Pointer-for-PAddr"],[1041,"impl-Octal-for-PAddr"],[1042,"impl-Debug-for-PAddr"],[1043,"impl-Binary-for-PAddr"],[1044,"impl-Display-for-PAddr"],[1045,"impl-LowerHex-for-PAddr"],[1046,"impl-UpperHex-for-PAddr"],[1047,"impl-UpperHex-for-IOAddr"],[1048,"impl-Octal-for-IOAddr"],[1049,"impl-Display-for-IOAddr"],[1050,"impl-Debug-for-IOAddr"],[1051,"impl-Binary-for-IOAddr"],[1052,"impl-Pointer-for-IOAddr"],[1053,"impl-LowerHex-for-IOAddr"],[1054,"impl-Debug-for-VAddr"],[1055,"impl-Octal-for-VAddr"],[1056,"impl-Pointer-for-VAddr"],[1057,"impl-Display-for-VAddr"],[1058,"impl-LowerHex-for-VAddr"],[1059,"impl-Binary-for-VAddr"],[1060,"impl-UpperHex-for-VAddr"],[1061,"impl-Octal-for-PML4Flags"],[1062,"impl-Binary-for-PML4Flags"],[1063,"impl-LowerHex-for-PML4Flags"],[1064,"impl-UpperHex-for-PML4Flags"],[1065,"impl-Debug-for-PML4Flags"],[1066,"impl-Octal-for-PML5Flags"],[1067,"impl-Debug-for-PML5Flags"],[1068,"impl-UpperHex-for-PML5Flags"],[1069,"impl-Binary-for-PML5Flags"],[1070,"impl-LowerHex-for-PML5Flags"],[1073,"impl-Octal-for-PDPTFlags"],[1074,"impl-LowerHex-for-PDPTFlags"],[1075,"impl-Debug-for-PDPTFlags"],[1076,"impl-Binary-for-PDPTFlags"],[1077,"impl-UpperHex-for-PDPTFlags"],[1079,"impl-Binary-for-PDFlags"],[1080,"impl-Octal-for-PDFlags"],[1081,"impl-Debug-for-PDFlags"],[1082,"impl-UpperHex-for-PDFlags"],[1083,"impl-LowerHex-for-PDFlags"],[1085,"impl-LowerHex-for-PTFlags"],[1086,"impl-UpperHex-for-PTFlags"],[1087,"impl-Octal-for-PTFlags"],[1088,"impl-Binary-for-PTFlags"],[1089,"impl-Debug-for-PTFlags"],[1095,"impl-From%3Ci32%3E-for-PAddr"],[1096,"impl-From%3Cusize%3E-for-PAddr"],[1097,"impl-From%3Cu64%3E-for-PAddr"],[1099,"impl-From%3Cusize%3E-for-IOAddr"],[1100,"impl-From%3Ci32%3E-for-IOAddr"],[1101,"impl-From%3Cu64%3E-for-IOAddr"],[1103,"impl-From%3Cu64%3E-for-VAddr"],[1104,"impl-From%3Ci32%3E-for-VAddr"],[1105,"impl-From%3Cusize%3E-for-VAddr"],[1167,"impl-Into%3Cusize%3E-for-PAddr"],[1169,"impl-Into%3Cu64%3E-for-PAddr"],[1170,"impl-Into%3Cusize%3E-for-IOAddr"],[1171,"impl-Into%3Cu64%3E-for-IOAddr"],[1174,"impl-Into%3Cusize%3E-for-VAddr"],[1175,"impl-Into%3Cu64%3E-for-VAddr"],[1280,"impl-Rem-for-PAddr"],[1281,"impl-Rem%3Cu64%3E-for-PAddr"],[1282,"impl-Rem%3Cusize%3E-for-PAddr"],[1283,"impl-Rem%3Cusize%3E-for-IOAddr"],[1284,"impl-Rem%3Cu64%3E-for-IOAddr"],[1285,"impl-Rem-for-IOAddr"],[1286,"impl-Rem-for-VAddr"],[1287,"impl-Rem%3Cusize%3E-for-VAddr"],[1288,"impl-Rem%3Cu64%3E-for-VAddr"],[1301,"impl-Shr%3Cu64%3E-for-VAddr"],[1302,"impl-Shr%3Cusize%3E-for-VAddr"],[1303,"impl-Shr%3Ci32%3E-for-VAddr"],[1306,"impl-Sub%3Cu64%3E-for-PAddr"],[1307,"impl-Sub-for-PAddr"],[1308,"impl-Sub%3Cusize%3E-for-PAddr"],[1309,"impl-Sub%3Cu64%3E-for-IOAddr"],[1310,"impl-Sub%3Cusize%3E-for-IOAddr"],[1311,"impl-Sub-for-IOAddr"],[1312,"impl-Sub%3Cu64%3E-for-VAddr"],[1313,"impl-Sub-for-VAddr"],[1314,"impl-Sub%3Cusize%3E-for-VAddr"],[1435,"impl-Binary-for-RFlags"],[1436,"impl-UpperHex-for-RFlags"],[1437,"impl-LowerHex-for-RFlags"],[1438,"impl-Octal-for-RFlags"],[1439,"impl-Debug-for-RFlags"],[1660,"impl-UpperHex-for-Cr0"],[1661,"impl-LowerHex-for-Cr0"],[1662,"impl-Octal-for-Cr0"],[1663,"impl-Debug-for-Cr0"],[1664,"impl-Binary-for-Cr0"],[1665,"impl-LowerHex-for-Cr4"],[1666,"impl-Debug-for-Cr4"],[1667,"impl-UpperHex-for-Cr4"],[1668,"impl-Octal-for-Cr4"],[1669,"impl-Binary-for-Cr4"],[1670,"impl-UpperHex-for-Xcr0"],[1671,"impl-Octal-for-Xcr0"],[1672,"impl-Debug-for-Xcr0"],[1673,"impl-Binary-for-Xcr0"],[1674,"impl-LowerHex-for-Xcr0"],[2091,"impl-Display-for-Associativity"],[2092,"impl-Debug-for-Associativity"],[2102,"impl-Display-for-VendorInfo"],[2103,"impl-Debug-for-VendorInfo"],[2106,"impl-Debug-for-CacheInfo"],[2107,"impl-Display-for-CacheInfo"],[2111,"impl-Display-for-CacheType"],[2112,"impl-Debug-for-CacheType"],[2116,"impl-Display-for-TopologyType"],[2117,"impl-Debug-for-TopologyType"],[2119,"impl-Debug-for-ExtendedRegisterType"],[2120,"impl-Display-for-ExtendedRegisterType"],[2121,"impl-Display-for-ExtendedRegisterStateLocation"],[2122,"impl-Debug-for-ExtendedRegisterStateLocation"],[2129,"impl-Debug-for-DatType"],[2130,"impl-Display-for-DatType"],[2132,"impl-Display-for-SoCVendorBrand"],[2133,"impl-Debug-for-SoCVendorBrand"],[2967,"impl-Debug-for-Dr6"],[2968,"impl-LowerHex-for-Dr6"],[2969,"impl-UpperHex-for-Dr6"],[2970,"impl-Octal-for-Dr6"],[2971,"impl-Binary-for-Dr6"],[3102,"impl-Debug-for-InterruptDescription"],[3103,"impl-Display-for-InterruptDescription"],[3104,"impl-UpperHex-for-PageFaultError"],[3105,"impl-Display-for-PageFaultError"],[3106,"impl-LowerHex-for-PageFaultError"],[3107,"impl-Binary-for-PageFaultError"],[3108,"impl-Debug-for-PageFaultError"],[3109,"impl-Octal-for-PageFaultError"],[4301,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4302,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4303,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4332,"impl-BuildDescriptor%3CDescriptor%3E-for-DescriptorBuilder"],[4333,"impl-BuildDescriptor%3CDescriptor64%3E-for-DescriptorBuilder"],[4334,"impl-Octal-for-SegmentSelector"],[4335,"impl-Debug-for-SegmentSelector"],[4336,"impl-Display-for-SegmentSelector"],[4337,"impl-UpperHex-for-SegmentSelector"],[4338,"impl-LowerHex-for-SegmentSelector"],[4339,"impl-Binary-for-SegmentSelector"],[4345,"impl-Debug-for-Descriptor"],[4346,"impl-Display-for-Descriptor"],[4365,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4366,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4367,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4382,"impl-LdtDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4383,"impl-LdtDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4416,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4417,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4418,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4434,"impl-GateDescriptorBuilder%3Cu32%3E-for-DescriptorBuilder"],[4435,"impl-GateDescriptorBuilder%3Cu16%3E-for-DescriptorBuilder"],[4436,"impl-GateDescriptorBuilder%3Cu64%3E-for-DescriptorBuilder"],[4723,"impl-Binary-for-PinbasedControls"],[4724,"impl-LowerHex-for-PinbasedControls"],[4725,"impl-UpperHex-for-PinbasedControls"],[4726,"impl-Octal-for-PinbasedControls"],[4727,"impl-Debug-for-PinbasedControls"],[4728,"impl-Debug-for-PrimaryControls"],[4729,"impl-Binary-for-PrimaryControls"],[4730,"impl-LowerHex-for-PrimaryControls"],[4731,"impl-UpperHex-for-PrimaryControls"],[4732,"impl-Octal-for-PrimaryControls"],[4733,"impl-LowerHex-for-SecondaryControls"],[4734,"impl-UpperHex-for-SecondaryControls"],[4735,"impl-Octal-for-SecondaryControls"],[4736,"impl-Debug-for-SecondaryControls"],[4737,"impl-Binary-for-SecondaryControls"],[4738,"impl-Binary-for-EntryControls"],[4739,"impl-UpperHex-for-EntryControls"],[4740,"impl-Octal-for-EntryControls"],[4741,"impl-Debug-for-EntryControls"],[4742,"impl-LowerHex-for-EntryControls"],[4743,"impl-LowerHex-for-ExitControls"],[4744,"impl-Octal-for-ExitControls"],[4745,"impl-Debug-for-ExitControls"],[4746,"impl-Binary-for-ExitControls"],[4747,"impl-UpperHex-for-ExitControls"]]},\
"x86_64":{"doc":"This crate provides x86_64 specific functions and data …","t":"CENNNNCACCLLLLLLLLALAOOALLLDDDDLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAFAAFAAAFFFFFFGDCIGCIGDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLCCCCCCCCFFFFFFFFFFFFCFFFFFNNNDEDDDNLMLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLAAAACCCAACCASSSDDDDDDDSSSCCSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSEENNIEDNDNDNDNDDDDDSSSSSSNNSSSSSNNNNSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLDDDSDDSSSSSSDSSSDSSSSSSSSSDSDSDSSSDSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSDSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFSSSSSSSSSSSSDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLFFSDDDDDSDIIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLSSSSSSSSSDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLAALMAALLALSSSSSSSEDSSDSSSSSSSCNSSSSNSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNSNNENGGNNDDENGNGGNSNDDDNNNSNNNSSNDGSSSNNDNNSNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLMMMLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLMLLLLLLLLLLLLMMLLLLLLLLMLLLLMLMMLLLMMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMIICCCCCCCCCCCCCCCKKAAAADDDLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLIENNNNEENEDIIDDNNNDNNNNINNNNDNNNIEEELLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLMMMDIDDDISSSEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSNENSSNSSNSDDDDDENNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIKKDLLLLLMLMLMLLL","n":["PhysAddr","PrivilegeLevel","Ring0","Ring1","Ring2","Ring3","VirtAddr","addr","align_down","align_up","borrow","borrow_mut","clone","eq","fmt","from","from_u16","hash","instructions","into","registers","set_general_handler","software_interrupt","structures","try_from","try_into","type_id","PhysAddr","PhysAddrNotValid","VirtAddr","VirtAddrNotValid","add","add","add","add","add_assign","add_assign","add_assign","add_assign","align_down","align_down","align_down","align_up","align_up","align_up","as_mut_ptr","as_ptr","as_u64","as_u64","backward_checked","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from_ptr","hash","hash","into","into","into","into","is_aligned","is_aligned","is_null","is_null","new","new","new_truncate","new_truncate","new_unsafe","new_unsafe","p1_index","p2_index","p3_index","p4_index","page_offset","page_table_index","partial_cmp","partial_cmp","steps_between","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","type_id","zero","zero","bochs_breakpoint","hlt","interrupts","nop","port","random","read_rip","segmentation","tables","tlb","are_enabled","disable","enable","enable_and_hlt","int3","without_interrupts","Port","PortGeneric","PortRead","PortReadAccess","PortReadOnly","PortWrite","PortWriteAccess","PortWriteOnly","ReadOnlyAccess","ReadWriteAccess","WriteOnlyAccess","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","RdRand","borrow","borrow_mut","clone","fmt","from","get_u16","get_u32","get_u64","into","new","try_from","try_into","type_id","CS","DS","ES","FS","GS","SS","Segment","Segment64","cs","load_ds","load_es","load_fs","load_gs","load_ss","rdfsbase","rdgsbase","set_cs","swap_gs","wrfsbase","wrgsbase","DescriptorTablePointer","lgdt","lidt","load_tss","sgdt","sidt","Address","All","AllExceptGlobal","AsidOutOfRangeError","InvPicdCommand","Invlpgb","InvlpgbFlushBuilder","Pcid","Single","asid","asid","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","cmp","eq","final_translation_only","flush","flush","flush_all","flush_pcid","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","include_global","include_nested_translations","into","into","into","into","into","invlpgb_count_max","nasid","nasid","new","new","pages","partial_cmp","pcid","tlb_flush_nested","tlbsync","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","control","debug","model_specific","mxcsr","rdfsbase","rdgsbase","read_rip","rflags","segmentation","wrfsbase","wrgsbase","xcontrol","ALIGNMENT_MASK","CACHE_DISABLE","CONTROL_FLOW_ENFORCEMENT","Cr0","Cr0Flags","Cr2","Cr3","Cr3Flags","Cr4","Cr4Flags","DEBUGGING_EXTENSIONS","EMULATE_COPROCESSOR","EXTENSION_TYPE","Efer","EferFlags","FSGSBASE","KEY_LOCKER","L5_PAGING","MACHINE_CHECK_EXCEPTION","MONITOR_COPROCESSOR","NOT_WRITE_THROUGH","NUMERIC_ERROR","OSFXSR","OSXMMEXCPT_ENABLE","OSXSAVE","PAGE_GLOBAL","PAGE_LEVEL_CACHE_DISABLE","PAGE_LEVEL_WRITETHROUGH","PAGE_SIZE_EXTENSION","PAGING","PCID","PERFORMANCE_MONITOR_COUNTER","PHYSICAL_ADDRESS_EXTENSION","PROTECTED_MODE_ENABLE","PROTECTED_MODE_VIRTUAL_INTERRUPTS","PROTECTION_KEY","PROTECTION_KEY_SUPERVISOR","PROTECTION_KEY_USER","SAFER_MODE_EXTENSIONS","SUPERVISOR_MODE_ACCESS_PREVENTION","SUPERVISOR_MODE_EXECUTION_PROTECTION","TASK_SWITCHED","TIMESTAMP_DISABLE","USER_MODE_INSTRUCTION_PREVENTION","VIRTUAL_8086_MODE_EXTENSIONS","VIRTUAL_MACHINE_EXTENSIONS","WRITE_PROTECT","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_name","from_name","from_name","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","not","not","not","partial_cmp","partial_cmp","partial_cmp","read","read","read","read","read_pcid","read_raw","read_raw","read_raw","read_raw","remove","remove","remove","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","update","update","write","write","write","write_pcid","write_raw","write_raw","ACCESS_DETECTED","BreakpointCondition","BreakpointSize","DataReadsWrites","DataWrites","DebugAddressRegister","DebugAddressRegisterNumber","Dr0","Dr0","Dr1","Dr1","Dr2","Dr2","Dr3","Dr3","Dr6","Dr6Flags","Dr7","Dr7Flags","Dr7Value","GENERAL_DETECT_ENABLE","GLOBAL_BREAKPOINT_0_ENABLE","GLOBAL_BREAKPOINT_1_ENABLE","GLOBAL_BREAKPOINT_2_ENABLE","GLOBAL_BREAKPOINT_3_ENABLE","GLOBAL_EXACT_BREAKPOINT_ENABLE","InstructionExecution","IoReadsWrites","LOCAL_BREAKPOINT_0_ENABLE","LOCAL_BREAKPOINT_1_ENABLE","LOCAL_BREAKPOINT_2_ENABLE","LOCAL_BREAKPOINT_3_ENABLE","LOCAL_EXACT_BREAKPOINT_ENABLE","Length1B","Length2B","Length4B","Length8B","NUM","RESTRICTED_TRANSACTIONAL_MEMORY","RTM","STEP","SWITCH","TRAP","TRAP0","TRAP1","TRAP2","TRAP3","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","complement","complement","condition","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_name","from_name","get","global_breakpoint_enable","hash","hash","insert","insert","insert_flags","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","local_breakpoint_enable","new","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","remove_flags","set","set","set_condition","set_flags","set_size","size","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","toggle_flags","trap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","write","write","write","write","write","write","write_raw","CetFlags","Efer","EferFlags","FAST_FXSAVE_FXRSTOR","FsBase","GsBase","IBT_ENABLE","IBT_LEGACY_ENABLE","IBT_LEGACY_SUPPRESS_ENABLE","IBT_NO_TRACK_ENABLE","IBT_SUPPRESS_ENABLE","IBT_TRACKED","KernelGsBase","LONG_MODE_ACTIVE","LONG_MODE_ENABLE","LONG_MODE_SEGMENT_LIMIT_ENABLE","LStar","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","MSR","Msr","NO_EXECUTE_ENABLE","SCet","SECURE_VIRTUAL_MACHINE_ENABLE","SFMask","SS_ENABLE","SS_WRITE_ENABLE","SYSTEM_CALL_EXTENSIONS","Star","TRANSLATION_CACHE_EXTENSION","UCet","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_name","from_name","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","new","not","not","partial_cmp","partial_cmp","read","read","read","read","read","read","read","read","read","read","read_raw","read_raw","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update","write","write","write","write","write","write","write","write","write","write","write_raw","write_raw","DENORMAL","DENORMALS_ARE_ZEROS","DENORMAL_MASK","DIVIDE_BY_ZERO","DIVIDE_BY_ZERO_MASK","FLUSH_TO_ZERO","INVALID_OPERATION","INVALID_OPERATION_MASK","MxCsr","OVERFLOW","OVERFLOW_MASK","PRECISION","PRECISION_MASK","ROUNDING_CONTROL_NEGATIVE","ROUNDING_CONTROL_POSITIVE","ROUNDING_CONTROL_ZERO","UNDERFLOW","UNDERFLOW_MASK","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","default","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","ALIGNMENT_CHECK","AUXILIARY_CARRY_FLAG","CARRY_FLAG","DIRECTION_FLAG","ID","INTERRUPT_FLAG","IOPL_HIGH","IOPL_LOW","NESTED_TASK","OVERFLOW_FLAG","PARITY_FLAG","RESUME_FLAG","RFlags","SIGN_FLAG","TRAP_FLAG","VIRTUAL_8086_MODE","VIRTUAL_INTERRUPT","VIRTUAL_INTERRUPT_PENDING","ZERO_FLAG","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_into","type_id","union","write","write_raw","BASE","CS","DS","ES","FS","GS","NULL","SS","Segment","Segment64","SegmentSelector","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","cmp","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","get_reg","hash","index","into","into","into","into","into","into","into","new","partial_cmp","read_base","read_base","read_base","rpl","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_reg","set_rpl","swap","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_base","write_base","write_base","AVX","BNDCSR","BNDREG","HI16_ZMM","LWP","MPK","OPMASK","SSE","X87","XCr0","XCr0Flags","YMM","ZMM_HI256","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","not","partial_cmp","read","read_raw","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","write","write_raw","DescriptorTablePointer","base","borrow","borrow_mut","clone","fmt","from","gdt","idt","into","limit","paging","port","try_from","try_into","tss","type_id","ACCESSED","AVAILABLE","BASE_0_23","BASE_24_31","CONFORMING","DEFAULT_SIZE","DPL_RING_3","Descriptor","DescriptorFlags","EXECUTABLE","GRANULARITY","GlobalDescriptorTable","KERNEL_CODE32","KERNEL_CODE64","KERNEL_DATA","LIMIT_0_15","LIMIT_16_19","LONG_MODE","PRESENT","SegmentSelector","SystemSegment","USER_CODE32","USER_CODE64","USER_DATA","USER_SEGMENT","UserSegment","WRITABLE","add_entry","all","as_raw_slice","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","complement","contains","difference","dpl","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","from_raw_slice","hash","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","iter","iter_names","kernel_code_segment","kernel_data_segment","load","load_unsafe","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_into","try_into","try_into","tss_segment","tss_segment_unchecked","type_id","type_id","type_id","union","user_code_segment","user_data_segment","AlignmentCheck","BoundRange","Breakpoint","CAUSED_BY_WRITE","ControlProtection","Debug","DescriptorTable","DeviceNotAvailable","DivergingHandlerFunc","DivergingHandlerFuncWithErrCode","Division","Double","Entry","EntryOptions","ExceptionVector","Gdt","GeneralHandlerFunc","GeneralProtection","HandlerFunc","HandlerFuncWithErrCode","HypervisorInjection","INSTRUCTION_FETCH","Idt","InterruptDescriptorTable","InterruptStackFrame","InterruptStackFrameValue","InvalidOpcode","InvalidTss","Ldt","MALFORMED_TABLE","MachineCheck","NonMaskableInterrupt","Overflow","PROTECTION_KEY","PROTECTION_VIOLATION","Page","PageFaultErrorCode","PageFaultHandlerFunc","RMP","SGX","SHADOW_STACK","Security","SegmentNotPresent","SelectorErrorCode","SimdFloatingPoint","Stack","USER_MODE","Virtualization","VmmCommunication","X87FloatingPoint","alignment_check","all","as_mut","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone","clone","clone","clone","cmp","code_segment","complement","contains","cp_protection_exception","cpu_flags","debug","deref","descriptor_table","device_not_available","difference","disable_interrupts","divide_error","double_fault","empty","eq","eq","eq","eq","eq","eq","extend","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","general_protection_fault","handler_addr","hash","hash","hash","hv_injection_exception","index","index","index_mut","insert","instruction_pointer","intersection","intersects","into","into","into","into","into","into","into","into","into","into_iter","invalid_opcode","invalid_tss","iretq","is_all","is_empty","is_null","iter","iter_names","load","load_unsafe","machine_check","missing","new","new","new_truncate","non_maskable_interrupt","not","overflow","page_fault","partial_cmp","remove","reset","security_exception","segment_not_present","set","set_handler_addr","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_handler_fn","set_present","set_privilege_level","set_stack_index","simd_floating_point","slice","slice_mut","stack_pointer","stack_segment","stack_segment_fault","sub","sub_assign","symmetric_difference","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtualization","vmm_communication_exception","x87_floating_point","FrameAllocator","FrameDeallocator","MappedPageTable","Mapper","OffsetPageTable","Page","PageOffset","PageSize","PageTable","PageTableFlags","PageTableIndex","PhysFrame","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","allocate_frame","deallocate_frame","frame","mapper","page","page_table","PhysFrame","PhysFrameRange","PhysFrameRangeInclusive","add","add_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","cmp","containing_address","end","end","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","partial_cmp","range","range_inclusive","size","start","start","start_address","sub","sub","sub_assign","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","CleanUp","FlagUpdateError","FrameAllocationFailed","InvalidFrameAddress","InvalidFrameAddress","InvalidFrameAddress","InvalidPageTable","MapToError","Mapped","MappedFrame","MappedPageTable","Mapper","MapperAllSizes","MapperFlush","MapperFlushAll","NotActive","NotMapped","NotRecursive","OffsetPageTable","PageAlreadyMapped","PageNotMapped","PageNotMapped","PageNotMapped","PageTableFrameMapping","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","ParentEntryHugePage","RecursivePageTable","Size1GiB","Size2MiB","Size4KiB","Translate","TranslateError","TranslateResult","UnmapError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean_up","clean_up","clean_up","clean_up","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","clean_up_addr_range","default","flush","flush_all","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_to_pointer","from","from","from","from","from","from","from","from","from","from","from","from","identity_map","ignore","ignore","into","into","into","into","into","into","into","into","into","into","into","into","level_4_table","level_4_table","level_4_table","map_to","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","map_to_with_table_flags","new","new","new","new","new","new_unchecked","page_table_frame_mapping","phys_offset","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p2_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p3_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","set_flags_p4_entry","size","start_address","translate","translate","translate","translate","translate_addr","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","translate_page","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","unmap","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","update_flags","flags","frame","offset","AddressNotAligned","NotGiantPageSize","Page","PageRange","PageRangeInclusive","PageSize","SIZE","SIZE","SIZE_AS_DEBUG_STR","Size1GiB","Size2MiB","Size4KiB","add","add_assign","as_4kib_page_range","backward_checked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","containing_address","end","end","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","from","from","from","from","from","from","from","from_page_table_indices","from_page_table_indices_1gib","from_page_table_indices_2mib","from_start_address","from_start_address_unchecked","hash","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","next","next","p1_index","p2_index","p3_index","p4_index","page_table_index","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","range_inclusive","size","start","start","start_address","steps_between","sub","sub","sub_assign","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ACCESSED","BIT_10","BIT_11","BIT_52","BIT_53","BIT_54","BIT_55","BIT_56","BIT_57","BIT_58","BIT_59","BIT_60","BIT_61","BIT_62","BIT_9","DIRTY","Four","FrameError","FrameNotPresent","GLOBAL","HUGE_PAGE","HugeFrame","NO_CACHE","NO_EXECUTE","One","PRESENT","PageOffset","PageTable","PageTableEntry","PageTableFlags","PageTableIndex","PageTableLevel","Three","Two","USER_ACCESSIBLE","WRITABLE","WRITE_THROUGH","addr","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","complement","contains","default","difference","empty","entry_address_space_alignment","eq","eq","eq","eq","eq","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_unchecked","from_iter","from_name","hash","hash","hash","hash","index","index","index_mut","index_mut","insert","intersection","intersects","into","into","into","into","into","into","into","into_iter","is_all","is_empty","is_empty","is_unused","iter","iter","iter_mut","iter_names","new","new","new","new","new_truncate","new_truncate","next_higher_level","next_lower_level","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","set","set_addr","set_flags","set_frame","set_unused","sub","sub_assign","symmetric_difference","table_address_space_alignment","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zero","PortRead","PortWrite","read_from_port","write_to_port","TaskStateSegment","borrow","borrow_mut","clone","fmt","from","interrupt_stack_table","into","iomap_base","new","privilege_stack_table","try_from","try_into","type_id"],"q":[[0,"x86_64"],[27,"x86_64::addr"],[135,"x86_64::instructions"],[145,"x86_64::instructions::interrupts"],[151,"x86_64::instructions::port"],[199,"x86_64::instructions::random"],[213,"x86_64::instructions::segmentation"],[233,"x86_64::instructions::tables"],[239,"x86_64::instructions::tlb"],[316,"x86_64::registers"],[328,"x86_64::registers::control"],[586,"x86_64::registers::debug"],[867,"x86_64::registers::model_specific"],[1118,"x86_64::registers::mxcsr"],[1193,"x86_64::registers::rflags"],[1270,"x86_64::registers::segmentation"],[1367,"x86_64::registers::xcontrol"],[1446,"x86_64::structures"],[1463,"x86_64::structures::gdt"],[1575,"x86_64::structures::idt"],[1814,"x86_64::structures::paging"],[1837,"x86_64::structures::paging::frame"],[1897,"x86_64::structures::paging::mapper"],[2134,"x86_64::structures::paging::mapper::TranslateResult"],[2137,"x86_64::structures::paging::page"],[2263,"x86_64::structures::paging::page_table"],[2448,"x86_64::structures::port"],[2452,"x86_64::structures::tss"],[2466,"core::fmt"],[2467,"core::fmt"],[2468,"core::result"],[2469,"core::any"],[2470,"core::convert"],[2471,"core::option"],[2472,"core::cmp"],[2473,"core::ops::function"],[2474,"core::clone"],[2475,"core::fmt"],[2476,"bitflags::iter"],[2477,"bitflags::iter"],[2478,"core::ops::range"],[2479,"core::cmp"],[2480,"core::iter::traits::iterator"]],"d":["","Represents a protection ring level.","Privilege-level 0 (most privilege): This level is used by …","Privilege-level 1 (moderate privilege): This level is used …","Privilege-level 2 (moderate privilege): Like level 1, this …","Privilege-level 3 (least privilege): This level is used by …","","Physical and virtual addresses manipulation","","","","","","","","Returns the argument unchanged.","Creates a <code>PrivilegeLevel</code> from a numeric value. The value …","","Special x86_64 instructions.","Calls <code>U::from(self)</code>.","Access to various system and model specific registers.","Set a general handler in an <code>InterruptDescriptorTable</code>.","Generate a software interrupt by invoking the <code>int</code> …","Representations of various x86 specific structures and …","","","","A 64-bit physical memory address.","A passed <code>u64</code> was not a valid physical address.","A canonical 64-bit virtual memory address.","A passed <code>u64</code> was not a valid virtual address.","","","","","","","","","Align address downwards.","Aligns the virtual address downwards to the given …","Aligns the physical address downwards to the given …","Align address upwards.","Aligns the virtual address upwards to the given alignment.","Aligns the physical address upwards to the given alignment.","Converts the address to a mutable raw pointer.","Converts the address to a raw pointer.","Converts the address to an <code>u64</code>.","Converts the address to an <code>u64</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a virtual address from the given pointer","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks whether the virtual address has the demanded …","Checks whether the physical address has the demanded …","Convenience method for checking if a virtual address is …","Convenience method for checking if a physical address is …","Creates a new canonical virtual address.","Creates a new physical address.","Creates a new canonical virtual address, throwing out bits …","Creates a new physical address, throwing bits 52..64 away.","Creates a new virtual address, without any checks.","Creates a new physical address, without any checks.","Returns the 9-bit level 1 page table index.","Returns the 9-bit level 2 page table index.","Returns the 9-bit level 3 page table index.","Returns the 9-bit level 4 page table index.","Returns the 12-bit page offset of this virtual address.","Returns the 9-bit level page table index.","","","","","","","","","","","","","","","","","","","","","","Tries to create a new canonical virtual address.","Tries to create a new physical address.","","","","","Creates a virtual address that points to <code>0</code>.","Creates a physical address that points to <code>0</code>.","Emits a ‘magic breakpoint’ instruction for the Bochs …","Halts the CPU until the next interrupt arrives.","Enabling and disabling interrupts","Executes the <code>nop</code> instructions, which performs no operation …","Access to I/O ports","Support for build-in RNGs","Gets the current instruction pointer. Note that this is …","Provides functions to read and write segment registers.","Functions to load GDT, IDT, and TSS structures.","Functions to flush the translation lookaside buffer (TLB).","Returns whether interrupts are enabled.","Disable interrupts.","Enable interrupts.","Atomically enable interrupts and put the CPU to sleep","Cause a breakpoint exception by invoking the <code>int3</code> …","Run a closure with disabled interrupts.","A read-write I/O port.","An I/O port.","","A marker trait for access types which allow reading port …","A read-only I/O port.","","A marker trait for access types which allow writing port …","A write-only I/O port.","An access marker type indicating that a port is only …","An access marker type indicating that a port is allowed to …","An access marker type indicating that a port is only …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an I/O port with the given port number.","Reads from the port.","","","","","","","","","","","","","Writes to the port.","Used to obtain random numbers using x86_64’s RDRAND …","","","","","Returns the argument unchanged.","Uniformly sampled u16. May fail in rare circumstances or …","Uniformly sampled u32. May fail in rare circumstances or …","Uniformly sampled u64. May fail in rare circumstances or …","Calls <code>U::from(self)</code>.","Creates Some(RdRand) if RDRAND is supported, None otherwise","","","","","","","","","","","","Alias for <code>CS::get_reg()</code>","Alias for <code>DS::set_reg()</code>","Alias for <code>ES::set_reg()</code>","Alias for <code>FS::set_reg()</code>","Alias for <code>GS::set_reg()</code>","Alias for <code>SS::set_reg()</code>","Alias for <code>FS::read_base()</code>","Alias for <code>GS::read_base()</code>","Alias for <code>CS::set_reg()</code>","Alias for <code>GS::swap()</code>","Alias for <code>FS::write_base()</code>.","Alias for <code>GS::write_base()</code>.","","Load a GDT.","Load an IDT.","Load the task state register using the <code>ltr</code> instruction.","Get the address of the current GDT.","Get the address of the current IDT.","The logical processor invalidates mappings—except global …","The logical processor invalidates all mappings—including …","The logical processor invalidates all mappings—except …","An error returned when trying to use an invalid ASID.","The Invalidate PCID Command to execute.","Used to broadcast flushes to all logical processors.","A builder struct to construct the parameters for the …","Structure of a PCID. A PCID has to be &lt;= 4096 for x86_64.","The logical processor invalidates all mappings—except …","Only flush TLB entries with the given ASID.","The requested ASID.","","","","","","","","","","","Create a <code>InvlpgbFlushBuilder</code>.","","","","","","Only flush the final translation and not the cached upper …","Invalidate the given address in the TLB using the <code>invlpg</code> …","Execute the flush.","Invalidate the TLB completely by reloading the CR3 …","Invalidate the given address in the TLB using the <code>invpcid</code> …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Also flush global pages.","Also flush nestred translations that could be used for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the maximum count of pages to be flushed supported …","Returns the number of available address space identifiers.","The number of valid ASIDS.","Create a new PCID. Will result in a failure if the value of","Check that <code>invlpgb</code> and <code>tlbsync</code> are supported and query …","Flush a range of pages.","","Only flush TLB entries with the given PCID.","Returns whether the processor supports flushing …","Wait for all previous <code>invlpgb</code> instruction executed on the …","","","","","","","","","","","","","","","","Get the value of the current PCID.","Functions to read and write control registers.","Functions to read and write debug registers.","Functions to read and write model specific registers.","Functions to read and write MXCSR register.","","","","Processor state stored in the RFLAGS register.","Abstractions for segment registers.","","","Access to various extended system registers","Enables automatic usermode alignment checking if […","Disables some processor caches, specifics are …","Enables Control-flow Enforcement Technology (CET)","Various control flags modifying the basic operation of the …","Configuration flags of the <code>Cr0</code> register.","Contains the Page Fault Linear Address (PFLA).","Contains the physical address of the highest-level page …","Controls cache settings for the highest-level page table.","Contains various control flags that enable architectural …","Configuration flags of the <code>Cr4</code> register.","Enables I/O breakpoint capability and enforces treatment …","Force all x87 and MMX instructions to cause an <code>#NE</code> …","Indicates support of 387DX math coprocessor instructions.","","","Enables software running in 64-bit mode at any privilege …","Enables the Key Locker feature (Intel Only).","Enables 5-level paging on supported CPUs (Intel Only).","Enables the machine-check exception mechanism.","Enables monitoring of the coprocessor, typical for x87 …","Ignored, should always be unset.","Enables the native (internal) error reporting mechanism …","Enables the use of legacy SSE instructions; allows using …","Enables the SIMD floating-point exception (<code>#XF</code>) for …","Enables extended processor state management instructions, …","Enables the global page feature, allowing some page …","Disable caching for the table.","Use a writethrough cache policy for the table (otherwise a …","Enables the use of 4MB physical frames; ignored if …","Enables paging.","Enables process-context identifiers (PCIDs).","Allows software running at any privilege level to use the …","Enables physical address extensions and 2MB physical …","Enables protected mode.","Enables support for protected-mode virtual interrupts.","Alias for <code>PROTECTION_KEY_USER</code>","Enables protection keys for supervisor-mode pages (Intel …","Enables protection keys for user-mode pages.","Enables SMX instructions (Intel Only).","Enables restrictions for supervisor-mode software when …","Prevents the execution of instructions that reside in …","Automatically set to 1 on <em>hardware</em> task switch.","When set, only privilege-level 0 can execute the <code>RDTSC</code> or …","Prevents the execution of the <code>SGDT</code>, <code>SIDT</code>, <code>SLDT</code>, <code>SMSW</code>, and …","Enables hardware-supported performance enhancements for …","Enables VMX instructions (Intel Only).","Controls whether supervisor-level writes to read-only …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Read the current set of CR0 flags.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register.","Read the current set of CR4 flags.","Read the current P4 table address from the CR3 register …","Read the current raw CR0 value.","Read the current page fault linear address from the CR2 …","Read the current P4 table address from the CR3 register","Read the current raw CR4 value.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Updates CR0 flags.","Updates CR4 flags.","Write CR0 flags.","Write a new P4 table address into the CR3 register.","Write CR4 flags.","Write a new P4 table address into the CR3 register.","Write raw CR0 flags.","Write raw CR4 flags.","Next instruction accesses one of the debug registers.","The condition for a hardware breakpoint.","The size of a hardware breakpoint.","Data reads or writes but not instruction fetches","Data writes","Debug Address Register","A valid debug address register number.","Debug Address Register","The debug address register number of <code>Dr0</code> (0).","Debug Address Register","The debug address register number of <code>Dr1</code> (1).","Debug Address Register","The debug address register number of <code>Dr2</code> (2).","Debug Address Register","The debug address register number of <code>Dr3</code> (3).","Debug Status Register (DR6).","Debug condition flags of the <code>Dr6</code> register.","Debug Control Register (DR7).","Debug control flags of the <code>Dr7</code> register.","A valid value of the <code>Dr7</code> debug register.","Enables debug register protection.","Breakpoint 0 is enabled for all tasks.","Breakpoint 1 is enabled for all tasks.","Breakpoint 2 is enabled for all tasks.","Breakpoint 3 is enabled for all tasks.","Enable detection of exact instruction causing a data …","Instruction execution","I/O reads or writes","Breakpoint 0 is enabled for the current task.","Breakpoint 1 is enabled for the current task.","Breakpoint 2 is enabled for the current task.","Breakpoint 3 is enabled for the current task.","Enable detection of exact instruction causing a data …","1 byte length","2 byte length","4 byte length","8 byte length","The corresponding <code>DebugAddressRegisterNumber</code>.","Enables advanced debugging of RTM transactional regions.","When <em>clear</em>, indicates a debug or breakpoint exception …","CPU is in single-step execution mode.","Task switch.","Breakpoint condition was detected.","Breakpoint condition 0 was detected.","Breakpoint condition 1 was detected.","Breakpoint condition 2 was detected.","Breakpoint condition 3 was detected.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","Returns the raw value of the fields currently stored.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns the condition field of a debug address register.","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the <code>Dr7Flags</code> in this value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Creates a new hardware breakpoint condition if <code>bits</code> is …","Creates a new hardware breakpoint size if <code>bits</code> is valid.","Convert from underlying bit representation, unless that …","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Returns the number as a primitive type.","Returns the global breakpoint enable flag of the provided …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Inserts the specified <code>Dr7Flags</code> in-place.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns the local breakpoint enable flag of the provided …","Creates a debug address register number if it is valid.","Creates a new hardware breakpoint size if <code>size</code> is valid.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","Reads the current breakpoint address.","","","","","Read the current set of DR6 flags.","Read the current set of DR7 flags.","Read the current raw DR6 value.","Read the current raw DR7 value.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Removes the specified <code>Dr7Flags</code> in-place.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets the condition field of a debug address register.","Inserts or removes the specified <code>Dr7Flags</code> depending on the …","Sets the size field of a debug address register.","Returns the size field of a debug address register.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Toggles the specified <code>Dr7Flags</code> in-place.","Returns the trap flag of the provided debug address …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Writes the provided breakpoint address.","","","","","Write DR7 value.","Write raw DR7 value.","Flags stored in IA32_U_CET and IA32_S_CET (Table-2-2 in …","The Extended Feature Enable Register.","Flags of the Extended Feature Enable Register.","Enable the <code>fxsave</code> and <code>fxrstor</code> instructions to execute …","FS.Base Model Specific Register.","GS.Base Model Specific Register.","Enable indirect branch tracking (ENDBR_EN)","Enable legacy treatment for indirect branch tracking …","Disable suppression of CET on legacy compatibility …","Enable no-track opcode prefix for indirect branch tracking …","Enable suppression of indirect branch tracking (SUPPRESS)","Is IBT waiting for a branch to return? (read-only, TRACKER)","KernelGsBase Model Specific Register.","Indicates that long mode is active.","Activates long mode, requires activating paging.","Enable certain limit checks in 64-bit mode.","Syscall Register: LSTAR","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","The underlying model specific register.","A model specific register.","Enables the no-execute page-protection feature.","IA32_S_CET: supervisor mode CET configuration","Enables SVM extensions.","Syscall Register: SFMASK","Enable shadow stack (SH_STK_EN)","Enable WRSS{D,Q}W instructions (WR_SHTK_EN)","Enables the <code>syscall</code> and <code>sysret</code> instructions.","Syscall Register: STAR","Changes how the <code>invlpg</code> instruction operates on TLB entries …","IA32_U_CET: user mode CET configuration","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Create an instance from a register.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","Read 64 bits msr register.","Read the current EFER flags.","Read the current FsBase register.","Read the current GsBase register.","Read the current KernelGsBase register.","Read the Ring 0 and Ring 3 segment bases. Returns","Read the current LStar register. This holds the target RIP …","Read to the SFMask register. The SFMASK register is used …","Read IA32_U_CET. Returns a tuple of the flags and the …","Read IA32_S_CET. Returns a tuple of the flags and the …","Read the current raw EFER flags.","Read the Ring 0 and Ring 3 segment bases. The remaining …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Update EFER flags.","Write 64 bits to msr register.","Write the EFER flags, preserving reserved values.","Write a given virtual address to the FS.Base register.","Write a given virtual address to the GS.Base register.","Write a given virtual address to the KernelGsBase register.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Write a given virtual address to the LStar register. This …","Write to the SFMask register. The SFMASK register is used …","Write IA32_U_CET.","Write IA32_S_CET.","Write the EFER flags.","Write the Ring 0 and Ring 3 segment bases. The remaining …","Denormal","Denormals are zeros","Denormal mask","Divide-by-zero","Divide-by-zero mask","Flush to zero","Invalid operation","Invalid operation mask","MXCSR register.","Overflow","Overflow mask","Precision","Precision mask","Toward negative infinity","Toward positive infinity","Toward zero (positive + negative)","Underflow","Underflow mask","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Return the default MXCSR value at reset, as documented in …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Read the value of MXCSR.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Write MXCSR.","Enable automatic alignment checking if CR0.AM is set. Only …","Set by hardware if last arithmetic operation generated a …","Set by hardware if last arithmetic operation generated a …","Determines the order in which strings are processed.","Processor feature identification flag.","Enable interrupts.","The high bit of the I/O Privilege Level field.","The low bit of the I/O Privilege Level field.","Used by <code>iret</code> in hardware task switch mode to determine if …","Set by hardware to indicate that the sign bit of the …","Set by hardware if last result has an even number of 1 …","Allows to restart an instruction following an instruction …","The RFLAGS register.","Set by hardware if last arithmetic operation resulted in a …","Enable single-step mode for debugging.","Enable the virtual-8086 mode.","Virtual image of the INTERRUPT_FLAG bit.","Indicates that an external, maskable interrupt is pending.","Set by hardware if last arithmetic operation resulted in a …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Returns the current value of the RFLAGS register.","Returns the raw current value of the RFLAGS register.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Writes the RFLAGS register, preserves reserved bits.","Writes the RFLAGS register.","MSR containing the segment base. This MSR can be used to …","Code Segment","Data Segment","ES Segment","FS Segment","GS Segment","Can be used as a selector into a non-existent segment and …","Stack Segment","An x86 segment","An x86 segment which is actually used in 64-bit mode","Specifies which element to load into a segment from …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the current value of the segment register.","","","","","","","","Returns the GDT index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new SegmentSelector","","Reads the segment base address","","","Returns the requested privilege level.","Reload the segment register. Depending on the segment, …","Note this is special since we cannot directly move to <code>CS</code>; …","","","","","","Set the privilege level for this Segment selector.","Swap <code>KernelGsBase</code> MSR and <code>GsBase</code> MSR.","","","","","","","","","","","","","","","","","","","","","","Writes the segment base address","","","Enables AVX instructions and using the upper halves of the …","Enables MPX instructions and using the BNDCFGU and …","Enables MPX instructions and using the BND0-BND3 bound …","Enables AVX-512 instructions and using the upper ZMM …","Enables Lightweight Profiling extensions and managing LWP …","Enables using the PKRU register with <code>XSAVE</code>/<code>XRSTOR</code>.","Enables AVX-512 instructions and using the K0-K7 mask …","Enables using MXCSR and the XMM registers with <code>XSAVE</code>/<code>XRSTOR</code>…","Enables using the x87 FPU state with <code>XSAVE</code>/<code>XRSTOR</code>.","Extended feature enable mask register","Configuration flags of the XCr0 register.","Alias for <code>AVX</code>","Enables AVX-512 instructions and using the upper halves of …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Read the current set of XCR0 flags.","Read the current raw XCR0 value.","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Write XCR0 flags.","Write raw XCR0 flags.","A struct describing a pointer to a descriptor table (GDT / …","Pointer to the memory region containing the DT.","","","","","Returns the argument unchanged.","Types for the Global Descriptor Table and segment …","Provides types for the Interrupt Descriptor Table and its …","Calls <code>U::from(self)</code>.","Size of the DT.","Abstractions for page tables and other paging related …","Traits for accessing I/O ports.","","","Provides a type for the task state segment structure.","","Set by the processor if this segment has been accessed. …","Available for use by the Operating System","Bits <code>0..=23</code> of the base field (ignored in 64-bit mode, …","Bits <code>24..=31</code> of the base field (ignored in 64-bit mode, …","For code segments, sets the segment as “conforming”, …","Use 32-bit (as opposed to 16-bit) operands. If <code>LONG_MODE</code> …","These two bits encode the Descriptor Privilege Level (DPL) …","A 64-bit mode segment descriptor.","Flags for a GDT descriptor. Not all flags are valid for …","This flag must be set for code segments and unset for data …","Limit field is scaled by 4096 bytes. In 64-bit mode, …","A 64-bit mode global descriptor table (GDT).","A flat 32-bit kernel code segment","A 64-bit kernel code segment","A kernel data segment (64-bit or flat 32-bit)","Bits <code>0..=15</code> of the limit field (ignored in 64-bit mode)","Bits <code>16..=19</code> of the limit field (ignored in 64-bit mode)","Must be set for 64-bit code segments, unset otherwise.","Must be set for any segment, causes a segment not present …","","A system segment descriptor such as a LDT or TSS …","A flat 32-bit user code segment","A 64-bit user code segment","A user data segment (64-bit or flat 32-bit)","This flag must be set for user segments (in contrast to …","Descriptor for a code or data segment.","For 32-bit data segments, sets the segment as writable. …","Adds the given segment descriptor to the GDT, returning …","Get a flags value with all known bits set.","Get a reference to the internal table.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","Returns the Descriptor Privilege Level (DPL). When using …","Get a flags value with all bits unset.","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Forms a GDT from a slice of <code>u64</code>.","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Creates a segment descriptor for a 64-bit kernel code …","Creates a segment descriptor for a kernel data segment …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Loads the GDT in the CPU using the <code>lgdt</code> instruction. This …","Creates an empty GDT.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","Creates a TSS system descriptor for the given TSS.","Similar to <code>Descriptor::tss_segment</code>, but unsafe since it …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Creates a segment descriptor for a 64-bit ring 3 code …","Creates a segment descriptor for a ring 3 data segment …","Alignment Check","Bound Range Exceeded","Breakpoint","If this flag is set, the memory access that caused the …","Control Protection Exception","Debug","The possible descriptor table values.","Device Not Available","A handler function that must not return, e.g. for a …","A handler function with an error code that must not …","Error during Division","Double Fault","An Interrupt Descriptor Table entry.","Represents the options field of an IDT entry.","This structure defines the CPU-internal exception vector …","Global Descriptor Table.","A general handler function for an interrupt or an …","General Protection Fault","A handler function for an interrupt or an exception …","A handler function for an exception that pushes an error …","Hypervisor Injection (AMD-only)","If this flag is set, it indicates that the access that …","Interrupt Descriptor Table.","An Interrupt Descriptor Table with 256 entries.","Wrapper type for the interrupt stack frame pushed by the …","Represents the interrupt stack frame pushed by the CPU on …","Invalid Opcode","Invalid TSS","Logical Descriptor Table.","If this flag is set, the page fault is a result of the …","Machine Check","Non-Maskable Interrupt","Overflow","If this flag is set, it indicates that the page fault was …","If this flag is set, the page fault was caused by a …","Page Fault","Describes an page fault error code.","A page fault handler function that pushes a page fault …","If this flag is set, it indicates that the page fault is a …","If this flag is set, it indicates that the page fault was …","If this flag is set, it indicates that the page fault was …","Security Exception","Segment Not Present","Describes an error code referencing a segment selector.","SIMD Floating-Point Exception","Stack Fault","If this flag is set, an access in user mode (CPL=3) caused …","Virtualization Exception (Intel-only)","VMM Communication (AMD-only)","x87 Floating-Point Exception","An alignment check exception (<code>#AC</code>) occurs when an …","Get a flags value with all known bits set.","Gives mutable access to the contents of the interrupt …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","A bound-range exception (<code>#BR</code>) exception can occur as a …","A breakpoint (<code>#BP</code>) exception occurs when an <code>INT3</code> …","","","","","","","","","","The code segment selector, padded with zeros.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","A #CP exception is generated when shadow stacks are …","The flags register before the interrupt handler was …","When the debug-exception mechanism is enabled, a <code>#DB</code> …","","The descriptor table this error code refers to.","A device not available exception (<code>#NM</code>) occurs under any of …","The intersection of a source flags value with the …","Let the CPU disable hardware interrupts when the handler …","A divide error (<code>#DE</code>) occurs when the denominator of a DIV …","A double fault (<code>#DF</code>) exception can occur when a second …","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","If true, indicates that the exception occurred during …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","A general protection fault (<code>#GP</code>) can occur in various …","Returns the virtual address of this IDT entry’s handler …","","","","The Hypervisor Injection Exception (<code>#HV</code>) is injected by a …","Returns the IDT entry with the specified index.","The index of the selector which caused the error.","Returns a mutable reference to the IDT entry with the …","The bitwise or (<code>|</code>) of the bits in two flags values.","This value points to the instruction that should be …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An invalid opcode exception (<code>#UD</code>) occurs when an attempt …","An invalid TSS exception (<code>#TS</code>) occurs only as a result of …","Call the <code>iretq</code> (interrupt return) instruction.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","If true, the #SS or #GP has returned zero as opposed to a …","Yield a set of contained flags values.","Yield a set of contained named flags values.","Loads the IDT in the CPU using the <code>lidt</code> command.","Loads the IDT in the CPU using the <code>lidt</code> command.","The machine check exception (<code>#MC</code>) is model specific. …","Creates a non-present IDT entry (but sets the must-be-one …","Creates a new IDT filled with non-present entries.","Create a SelectorErrorCode. Returns None is any of the …","Create a new SelectorErrorCode dropping any reserved bits …","An non maskable interrupt exception (NMI) occurs as a …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","An overflow exception (<code>#OF</code>) occurs as a result of …","A page fault (<code>#PF</code>) can occur during a memory access in any …","","The intersection of a source flags value with the …","Resets all entries of this IDT in place.","The Security Exception (<code>#SX</code>) signals security-sensitive …","An segment-not-present exception (<code>#NP</code>) occurs when an …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Set the handler address for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set the handler function for the IDT entry and sets the …","Set or reset the preset bit.","Set the required privilege level (DPL) for invoking the …","Assigns a Interrupt Stack Table (IST) stack to this …","The SIMD Floating-Point Exception (<code>#XF</code>) is used to handle …","Returns slice of IDT entries with the specified range.","Returns a mutable slice of IDT entries with the specified …","The stack pointer at the time of the interrupt.","The stack segment descriptor at the time of the interrupt …","An stack segment exception (<code>#SS</code>) can occur in the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","vector nr. 20","The VMM Communication Exception (<code>#VC</code>) is always generated …","The x87 Floating-Point Exception-Pending exception (<code>#MF</code>) …","A trait for types that can allocate a frame of memory.","A trait for types that can deallocate a frame of memory.","","","","","","","","","","","","","","","","Allocate a frame of the appropriate size and return it if …","Deallocate the given unused frame.","Abstractions for default-sized and huge physical memory …","Abstractions for reading and modifying the mapping of …","Abstractions for default-sized and huge virtual memory …","Abstractions for page tables and page table entries.","A physical memory frame.","An range of physical memory frames, exclusive the upper …","An range of physical memory frames, inclusive the upper …","","","","","","","","","","","","","Returns the frame that contains the given physical address.","The end of the range, exclusive.","The start of the range, inclusive.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the frame that starts at the given virtual address.","Returns the frame that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns whether the range contains no frames.","Returns whether the range contains no frames.","","","","Returns a range of frames, exclusive <code>end</code>.","Returns a range of frames, inclusive <code>end</code>.","Returns the size the frame (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the frame.","","","","","","","","","","","","","Provides methods for cleaning up unused entries.","An error indicating that an <code>update_flags</code> call failed.","An additional frame was needed for the mapping process, …","The page table entry for the given virtual address points …","The page table entry for the given page points to an …","The page table entry for the given page points to an …","The given page table was not suitable to create a …","This error is returned from <code>map_to</code> and similar methods.","The virtual address is mapped to a physical frame.","Represents a physical frame mapped in a page table.","A Mapper implementation that relies on a PhysAddr to …","A trait for common page table operations on pages of size <code>S</code>…","An empty convencience trait that requires the <code>Mapper</code> trait …","This type represents a page whose mapping has changed in …","This type represents a change of a page table requiring a …","The given page table was not active on the CPU.","The given virtual address is not mapped to a physical …","The given page table was not at an recursive address.","A Mapper implementation that requires that the complete …","The given page is already mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","The given page is not mapped to a physical frame.","Provides a virtual address mapping for physical page table …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","An upper level page table entry has the <code>HUGE_PAGE</code> flag …","A recursive page table is a last level page table with an …","The virtual address is mapped to a “huge” 1GiB frame.","The virtual address is mapped to a “large” 2MiB frame.","The virtual address is mapped to a 4KiB frame.","Provides methods for translating virtual addresses.","An error indicating that an <code>translate</code> call failed.","The return value of the <code>Translate::translate</code> function.","An error indicating that an <code>unmap</code> call failed.","","","","","","","","","","","","","","","","","","","","","","","","","Remove all empty P1-P3 tables","","","","Remove all empty P1-P3 tables in a certain range","","","","","Flush the page from the TLB to ensure that the newest …","Flush all pages from the TLB to ensure that the newest …","","","","","","","","","","","","","","Translate the given physical frame to a virtual page table …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Maps the given frame to the virtual page with the same …","Don’t flush the TLB and silence the “must be used” …","Don’t flush the TLB and silence the “must be used” …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Returns a mutable reference to the wrapped level 4 …","Creates a new mapping in the page table.","Creates a new mapping in the page table.","","","","","","","","","","Creates a new <code>MappedPageTable</code> that uses the passed …","Creates a new <code>OffsetPageTable</code> that uses the given offset …","Creates a new RecursivePageTable from the passed level 4 …","Create a new flush promise","Create a new flush promise","Creates a new RecursivePageTable without performing any …","Returns the <code>PageTableFrameMapping</code> used for converting …","Returns the offset used for converting virtual to physical …","Set the flags of an existing page table level 2 entry","","","","","","","","","","Set the flags of an existing page table level 3 entry","","","","","","","","","","Set the flags of an existing page level 4 table entry","","","","","","","","","","Returns the size the frame (4KB, 2MB or 1GB).","Returns the start address of the frame.","Return the frame that the given virtual address is mapped …","","","","Translates the given virtual address to the physical …","Return the frame that the specified page is mapped to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes a mapping from the page table and returns the …","","","","","","","","","","Updates the flags of an existing mapping.","","","","","","","","","","The entry flags in the lowest-level page table.","The mapped frame.","The offset within the mapped frame.","The given address was not sufficiently aligned.","This trait is implemented for 4KiB and 2MiB pages, but not …","A virtual memory page.","A range of pages with exclusive upper bound.","A range of pages with inclusive upper bound.","Trait for abstracting over the three possible page sizes …","The page size in bytes.","The page size in bytes.","A string representation of the page size for debug output.","A “giant” 1GiB page.","A “huge” 2MiB page.","A standard 4KiB page.","","","Converts the range of 2MiB pages to a range of 4KiB pages.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the page that contains the given virtual address.","The end of the range, exclusive.","The end of the range, inclusive.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the 4KiB memory page with the specified page table …","Returns the 1GiB memory page with the specified page table …","Returns the 2MiB memory page with the specified page table …","Returns the page that starts at the given virtual address.","Returns the page that starts at the given virtual address.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns wether this range contains no pages.","Returns whether this range contains no pages.","","","Returns the level 1 page table index of this page.","Returns the level 2 page table index of this page.","Returns the level 3 page table index of this page.","Returns the level 4 page table index of this page.","Returns the table index of this page at the specified …","","","","","Returns a range of pages, exclusive <code>end</code>.","Returns a range of pages, inclusive <code>end</code>.","Returns the size the page (4KB, 2MB or 1GB).","The start of the range, inclusive.","The start of the range, inclusive.","Returns the start address of the page.","","","","","","","","","","","","","","","","","","","","","","","","","","Set by the CPU when the mapped frame or page table is …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Available to the OS, can be used to store additional data, …","Set by the CPU on a write to the mapped frame.","Represents the level for a page-map level-4.","The error returned by the <code>PageTableEntry::frame</code> method.","The entry does not have the <code>PRESENT</code> flag set, so it isn’…","Indicates that the mapping is present in all address …","Specifies that the entry maps a huge frame instead of a …","The entry does have the <code>HUGE_PAGE</code> flag set. The <code>frame</code> …","Disables caching for the pointed entry is cacheable.","Forbid code execution from the mapped frames.","Represents the level for a page table.","Specifies whether the mapped frame or page table is loaded …","A 12-bit offset into a 4KiB Page.","Represents a page table.","A 64-bit page table entry.","Possible flags for a page table entry.","A 9-bit index into a page table.","A value between 1 and 4.","Represents the level for a page-directory pointer.","Represents the level for a page directory.","Controls whether accesses from userspace (i.e. ring 3) are …","Controls whether writes to the mapped frames are allowed.","If this bit is set, a “write-through” policy is used …","Returns the physical address mapped by this entry, might …","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Returns the alignment for the address space described by …","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns the flags of this entry.","","","","","","","","","","","","Returns the physical frame mapped by this entry.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from underlying bit representation, preserving all …","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Checks if the page table is empty (all entries are zero).","Returns whether this entry is zero.","Yield a set of contained flags values.","Returns an iterator over the entries of the page table.","Returns an iterator that allows modifying the entries of …","Yield a set of contained named flags values.","Creates an unused page table entry.","Creates an empty page table.","Creates a new index from the given <code>u16</code>. Panics if the …","Creates a new offset from the given <code>u16</code>. Panics if the …","Creates a new index from the given <code>u16</code>. Throws away bits …","Creates a new offset from the given <code>u16</code>. Throws away bits …","Returns the next higher level or <code>None</code> for level 4","Returns the next lower level or <code>None</code> for level 1","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Map the entry to the specified physical address with the …","Sets the flags of this entry.","Map the entry to the specified physical frame with the …","Sets this entry to zero.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the alignment for the address space described by a …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Clears all entries.","A helper trait that implements the read port operation.","A helper trait that implements the write port operation.","Reads a <code>Self</code> value from the given port.","Writes a <code>Self</code> value to the given port.","In 64-bit mode the TSS holds information that is not …","","","","","Returns the argument unchanged.","The full 64-bit canonical forms of the interrupt stack …","Calls <code>U::from(self)</code>.","The 16-bit offset to the I/O permission bit map from the …","Creates a new TSS with zeroed privilege and interrupt …","The full 64-bit canonical forms of the stack pointers …","","",""],"i":[0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,10,10,13,13,10,10,13,13,0,10,13,0,10,13,10,10,10,13,10,17,18,10,13,17,18,10,13,10,13,10,13,10,13,17,18,10,10,10,10,10,10,13,13,13,13,13,13,10,17,18,10,13,10,10,13,17,18,10,13,10,13,10,13,10,13,10,13,10,13,10,10,10,10,10,10,10,13,10,10,10,10,13,13,13,10,10,13,13,17,18,10,13,17,18,10,13,10,13,17,18,10,13,10,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,23,24,25,26,23,23,23,24,25,26,23,24,25,26,23,24,25,26,23,23,23,24,25,26,23,24,25,26,23,24,25,26,23,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,0,0,0,0,0,41,35,36,41,39,38,35,36,41,39,38,35,36,38,39,38,35,39,39,35,0,35,0,0,41,39,38,35,36,36,41,39,38,35,36,39,35,35,41,39,38,35,36,38,38,36,39,38,35,39,35,38,38,41,39,38,35,36,41,39,38,35,36,41,39,38,35,36,39,0,0,0,0,0,0,0,0,0,0,0,0,45,45,47,0,0,0,0,0,0,0,47,45,45,0,0,47,47,47,47,45,45,45,47,47,47,47,46,46,47,45,47,47,47,45,47,47,47,47,47,47,47,45,47,47,47,47,45,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,45,46,46,47,47,45,46,47,45,46,47,49,45,50,51,46,52,47,49,45,50,51,46,52,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,49,45,45,45,45,45,50,51,46,46,46,46,46,52,47,47,47,47,47,49,45,50,51,46,52,47,45,46,47,45,45,46,46,47,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,49,45,50,51,46,52,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,49,50,51,52,51,49,50,51,52,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,45,46,47,49,45,50,51,46,52,47,49,45,50,51,46,52,47,49,45,50,51,46,52,47,45,46,47,49,52,49,51,52,51,49,52,56,0,0,60,60,0,0,0,59,0,59,0,59,0,59,0,0,0,0,0,57,57,57,57,57,57,60,60,57,57,57,57,57,61,61,61,61,148,57,56,56,56,56,56,56,56,56,56,57,56,57,56,57,56,57,56,57,56,56,57,57,58,56,57,56,57,62,63,64,65,59,66,56,57,60,61,58,67,62,63,64,65,59,66,56,57,60,61,58,67,59,56,57,60,61,58,56,57,56,57,58,56,57,56,57,56,57,59,56,57,60,61,58,56,57,58,62,63,64,65,59,66,56,56,56,56,56,57,57,57,57,57,60,61,58,67,62,63,64,65,59,66,56,57,60,61,58,58,67,56,57,60,61,58,56,56,57,57,56,57,58,56,57,58,56,57,56,57,59,57,56,57,56,57,58,56,57,56,57,62,63,64,65,59,66,56,57,60,61,58,67,56,57,56,57,56,57,56,57,56,57,57,59,61,56,57,56,57,148,62,63,64,65,66,67,66,67,56,57,58,56,57,58,58,58,58,56,57,56,57,56,57,56,57,58,56,62,63,64,65,59,66,56,57,60,61,58,67,62,63,64,65,59,66,56,57,60,61,58,67,62,63,64,65,59,66,56,57,60,61,58,67,56,57,148,62,63,64,65,67,67,0,0,0,69,0,0,70,70,70,70,70,70,0,69,69,69,0,72,73,74,75,76,77,78,79,80,0,69,0,69,0,70,70,69,0,69,0,69,70,69,70,69,70,69,70,69,70,69,69,70,70,69,70,69,70,71,72,73,74,75,76,77,78,79,80,69,70,71,72,73,74,75,76,77,78,79,80,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,71,72,73,74,75,76,77,78,79,80,69,69,69,69,69,70,70,70,70,70,71,72,73,74,75,76,77,78,79,80,69,70,69,70,69,69,70,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,71,72,73,74,75,76,77,78,79,80,69,70,69,70,69,70,69,70,69,70,69,70,71,69,70,69,70,71,72,73,74,75,76,77,78,79,80,72,76,69,70,69,70,69,70,69,70,69,70,69,70,71,72,73,74,75,76,77,78,79,80,69,70,71,72,73,74,75,76,77,78,79,80,69,70,71,72,73,74,75,76,77,78,79,80,69,70,69,70,72,71,72,73,74,75,76,77,78,79,80,72,76,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,83,83,83,0,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,81,0,0,149,0,0,0,0,0,33,0,0,0,0,33,84,85,86,87,88,89,33,84,85,86,87,88,89,33,33,33,33,84,85,86,87,88,89,33,84,85,86,87,88,89,150,84,85,86,87,88,89,33,33,33,84,85,86,87,88,89,33,33,149,88,89,33,150,84,85,86,87,88,89,33,89,33,84,85,86,87,88,89,33,84,85,86,87,88,89,33,84,85,86,87,88,89,149,88,89,90,90,90,90,90,90,90,90,90,0,0,90,90,90,90,90,90,90,90,90,90,90,91,90,91,90,90,90,90,90,90,90,90,90,91,90,90,90,90,90,91,90,90,90,90,90,90,90,90,90,90,90,90,91,90,90,90,90,90,90,90,90,91,91,90,90,90,90,90,90,91,90,91,90,91,90,90,91,91,0,34,34,34,34,34,34,0,0,34,34,0,0,34,34,0,34,94,94,94,94,94,94,94,0,0,94,94,0,94,94,94,94,94,94,94,0,93,94,94,94,94,93,94,92,94,92,94,94,94,94,94,94,94,94,92,93,94,92,93,94,92,93,94,94,94,94,94,93,94,94,94,92,93,94,94,94,94,94,92,93,94,94,94,94,94,94,94,94,92,94,94,94,94,92,93,94,94,94,94,94,94,93,93,92,92,92,94,94,94,94,94,94,94,94,92,93,94,92,93,94,93,93,92,93,94,94,93,93,106,106,106,97,106,106,0,106,0,0,106,106,0,0,0,105,0,106,0,0,106,97,105,0,0,0,106,106,105,97,106,106,106,97,97,106,0,0,97,97,97,106,106,0,106,106,97,106,106,106,101,97,98,97,97,97,97,97,97,97,97,98,101,102,103,99,97,104,105,106,98,101,102,103,99,97,104,105,106,101,101,101,102,103,99,97,104,105,106,97,99,97,97,101,99,101,98,104,101,97,103,101,101,97,102,103,97,104,105,106,97,104,98,101,102,103,99,97,97,97,97,97,104,105,106,98,101,102,103,99,97,104,105,106,97,97,97,97,97,97,97,101,102,97,104,105,101,101,104,101,97,99,97,97,98,101,102,103,99,97,104,105,106,97,101,101,99,97,97,104,97,97,101,101,101,102,101,104,104,101,97,101,101,97,97,101,101,101,97,102,102,102,102,102,102,103,103,103,101,101,101,99,99,101,97,97,97,97,98,101,102,103,99,97,104,105,106,98,101,102,103,99,97,104,105,106,98,101,102,103,99,97,104,105,106,97,101,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,123,0,0,0,0,0,0,0,55,55,55,115,116,55,115,116,55,115,116,55,55,115,116,55,115,116,55,115,116,55,115,116,55,55,55,115,116,55,115,116,115,116,115,116,115,116,55,55,55,55,115,116,55,55,55,55,55,115,116,55,115,116,55,115,116,0,0,134,132,135,137,0,0,132,0,0,0,0,0,0,131,132,131,0,134,135,136,137,0,134,135,136,137,0,133,133,133,0,0,0,0,124,126,127,131,132,133,130,129,134,135,136,137,124,126,127,131,132,133,130,129,134,135,136,137,151,124,126,127,151,124,126,127,129,130,129,124,126,127,131,131,132,133,130,129,134,135,136,137,125,124,126,127,131,132,133,130,129,134,135,136,137,141,130,129,124,126,127,131,132,133,130,129,134,135,136,137,124,126,127,141,141,124,124,124,126,126,126,127,127,127,124,126,127,130,129,127,124,126,141,124,124,124,126,126,126,127,127,127,141,124,124,124,126,126,126,127,127,127,141,124,124,124,126,126,126,127,127,127,133,133,152,124,126,127,152,141,124,124,124,126,126,126,127,127,127,124,126,127,131,132,133,130,129,134,135,136,137,124,126,127,131,132,133,130,129,134,135,136,137,124,126,127,131,132,133,130,129,134,135,136,137,141,124,124,124,126,126,126,127,127,127,141,124,124,124,126,126,126,127,127,127,153,153,153,0,0,0,0,0,0,114,82,114,0,0,0,82,82,44,82,122,144,143,82,44,128,119,122,144,143,82,44,128,119,122,144,143,82,44,128,122,144,143,82,82,44,128,122,144,143,82,44,128,122,144,143,82,44,128,119,119,82,122,144,143,82,44,128,119,82,82,82,82,82,82,44,128,122,144,143,82,44,128,119,44,128,44,128,44,128,82,82,82,82,82,122,144,143,82,82,82,82,44,128,82,82,82,82,82,122,144,143,82,44,128,119,122,144,143,82,44,128,119,122,144,143,82,44,128,119,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,21,0,146,139,139,146,139,139,21,139,0,0,0,0,0,0,21,21,139,139,139,145,139,139,139,139,139,139,139,139,139,146,145,139,138,19,20,21,146,145,139,138,19,20,21,146,145,139,138,19,20,21,139,19,20,21,139,139,138,139,139,21,146,139,19,20,21,139,145,146,145,139,139,139,139,139,138,19,20,21,145,146,145,139,138,19,20,21,139,139,139,139,139,139,139,139,19,20,21,138,138,138,138,139,139,139,146,145,139,138,19,20,21,139,139,139,138,145,139,138,138,139,145,138,19,20,19,20,21,21,139,139,19,20,21,139,139,145,145,145,145,139,139,139,21,139,146,145,139,138,19,20,21,146,145,139,138,19,20,21,146,145,139,138,19,20,21,139,138,0,0,27,29,0,96,96,96,96,96,96,96,96,96,96,96,96,96],"f":[0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[1,1],2],[[1,3],4],[-1,-1,[]],[5,1],[[1,-1],6,7],0,[-1,-2,[],[]],0,0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,[[10,11]],[[10,12]],[[13,11]],[[13,12]],[[10,12],6],[[10,11],6],[[13,11],6],[[13,12],6],[[12,12],12],[[10,-1],10,[[14,[12]]]],[[13,-1],13,[[14,[12]]]],[[12,12],12],[[10,-1],10,[[14,[12]]]],[[13,-1],13,[[14,[12]]]],[10],[10],[10,12],[13,12],[[10,11],[[15,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[13,13],[[10,10],16],[[13,13],16],[[10,10],2],[[13,13],2],[[17,3],4],[[18,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[10,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[13,3],4],[[10,11],[[15,[10]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],10],[[10,-1],6,7],[[13,-1],6,7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,-1],2,[[14,[12]]]],[[13,-1],2,[[14,[12]]]],[10,2],[13,2],[12,10],[12,13],[12,10],[12,13],[12,10],[12,13],[10,19],[10,19],[10,19],[10,19],[10,20],[[10,21],19],[[10,10],[[15,[16]]]],[[13,13],[[15,[16]]]],[[10,10],[[15,[11]]]],[[10,10]],[[10,11]],[[10,12]],[[13,13]],[[13,11]],[[13,12]],[[10,11],6],[[10,12],6],[[13,11],6],[[13,12],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[12,[[8,[10,17]]]],[12,[[8,[13,18]]]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[],10],[[],13],[[],6],[[],6],0,[[],6],0,0,[[],10],0,0,0,[[],2],[[],6],[[],6],[[],6],[[],6],[-1,-2,22,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1,-2]]],[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]],[23,[-1,-2]]],2,[],[]],[[[23,[-1,-2]],3],4,[],0],[[24,3],4],[[25,3],4],[[26,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,[[23,[-1,-2]]],[],[]],[[[23,[-1,-2]]],-1,27,28],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[23,[-1,-2]],-1],6,29,30],0,[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[31,3],4],[-1,-1,[]],[31,[[15,[5]]]],[31,[[15,[32]]]],[31,[[15,[12]]]],[-1,-2,[],[]],[[],[[15,[31]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],0,0,0,0,0,0,0,0,[[],33],[33,6],[33,6],[33,6],[33,6],[33,6],[[],12],[[],12],[33,6],[[],6],[12,6],[12,6],0,[34,6],[34,6],[33,6],[[],34],[[],34],0,0,0,0,0,0,0,0,0,[[[35,[-1]],5],[[8,[[35,[-1]],36]]],37],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,35],[39,39],[38,38],[[[35,[-1]]],[[35,[-1]]],[37,40]],[[39,39],16],[[39,39],2],[[[35,[-1]]],[[35,[-1]]],37],[10,6],[[[35,[-1]]],6,37],[[],6],[41,6],[[41,3],4],[[39,3],4],[[38,3],4],[[[35,[-1]],3],4,[37,42]],[[36,3],4],[[36,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[39,-1],6,7],[[[35,[-1]]],[[35,[-1]]],37],[[[35,[-1]]],[[35,[-1]]],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,5],[38,32],0,[5,[[8,[39,43]]]],[[],[[15,[38]]]],[[[35,[-1]],[44,[-2]]],[[35,[-2]]],37,37],[[39,39],[[15,[16]]]],[[[35,[-1]],39],[[35,[-1]]],37],[38,2],[38,6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[39,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],45],[[],46],[[],47],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],6],[[46,46],6],[[47,47],6],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],6],[[46,46],6],[[47,47],6],[45,12],[45,12],[46,12],[46,12],[47,12],[47,12],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],6],[[46,46],6],[[47,47],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[46,46],[47,47],[[45,45],16],[[46,46],16],[[47,47],16],[45,45],[46,46],[47,47],[[45,45],2],[[46,46],2],[[47,47],2],[[45,45],45],[[46,46],46],[[47,47],47],[[],45],[[],46],[[],47],[[45,45],2],[[46,46],2],[[47,47],2],[[45,-1],6,48],[[46,-1],6,48],[[47,-1],6,48],[[49,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[45,3],4],[[50,3],4],[[51,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[46,3],4],[[52,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[[47,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[45]]]],[12,[[15,[46]]]],[12,[[15,[47]]]],[12,45],[12,45],[12,46],[12,46],[12,47],[12,47],[12,45],[12,46],[12,47],[12,45],[12,46],[12,47],[-1,45,48],[-1,46,48],[-1,47,48],[43,[[15,[45]]]],[43,[[15,[46]]]],[43,[[15,[47]]]],[[45,-1],6,7],[[46,-1],6,7],[[47,-1],6,7],[[45,45],6],[[46,46],6],[[47,47],6],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],2],[[46,46],2],[[47,47],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45],[46],[47],[45,2],[46,2],[47,2],[45,2],[46,2],[47,2],[45,[[53,[45]]]],[46,[[53,[46]]]],[47,[[53,[47]]]],[45,[[54,[45]]]],[46,[[54,[46]]]],[47,[[54,[47]]]],[45,45],[46,46],[47,47],[[45,45],[[15,[16]]]],[[46,46],[[15,[16]]]],[[47,47],[[15,[16]]]],[[],45],[[],10],[[],[[6,[55,46]]]],[[],47],[[],[[6,[55,39]]]],[[],12],[[],12],[[],[[6,[55,5]]]],[[],12],[[45,45],6],[[46,46],6],[[47,47],6],[[45,45,2],6],[[46,46,2],6],[[47,47,2],6],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],6],[[46,46],6],[[47,47],6],[[45,45],45],[[46,46],46],[[47,47],47],[[45,45],6],[[46,46],6],[[47,47],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[45,45],45],[[46,46],46],[[47,47],47],[-1,6,22],[-1,6,22],[45,6],[[55,46],6],[47,6],[[55,39],6],[12,6],[12,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],56],[[],57],[[56,56],56],[[57,57],57],[[56,56],6],[[57,57],6],[[56,56],56],[[57,57],57],[[56,56],6],[[57,57],6],[56,12],[56,12],[57,12],[57,12],[58,12],[[56,56],56],[[57,57],57],[[56,56],6],[[57,57],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[56,56],[57,57],[60,60],[61,61],[58,58],[[56,56],16],[[57,57],16],[56,56],[57,57],[[58,59],60],[[56,56],2],[[57,57],2],[[56,56],56],[[57,57],57],[[],56],[[],57],[[59,59],2],[[56,56],2],[[57,57],2],[[60,60],2],[[61,61],2],[[58,58],2],[[56,-1],6,48],[[57,-1],6,48],[58,57],[[62,3],4],[[63,3],4],[[64,3],4],[[65,3],4],[[59,3],4],[[66,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[56,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[57,3],4],[[60,3],4],[[61,3],4],[[58,3],4],[[67,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[57,58],[-1,-1,[]],[12,[[15,[56]]]],[12,[[15,[57]]]],[12,[[15,[60]]]],[12,[[15,[61]]]],[12,[[15,[58]]]],[12,56],[12,56],[12,57],[12,57],[12,56],[12,57],[12,58],[12,56],[12,57],[12,58],[-1,56,48],[-1,57,48],[43,[[15,[56]]]],[43,[[15,[57]]]],[59,68],[59,57],[[56,-1],6,7],[[57,-1],6,7],[[56,56],6],[[57,57],6],[[58,57],6],[[56,56],56],[[57,57],57],[[56,56],2],[[57,57],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56],[57],[56,2],[57,2],[56,2],[57,2],[56,[[53,[56]]]],[57,[[53,[57]]]],[56,[[54,[56]]]],[57,[[54,[57]]]],[59,57],[68,[[15,[59]]]],[11,[[15,[61]]]],[56,56],[57,57],[[56,56],[[15,[16]]]],[[57,57],[[15,[16]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],56],[[],58],[[],12],[[],12],[[56,56],6],[[57,57],6],[[58,57],6],[[56,56,2],6],[[57,57,2],6],[[58,59,60],6],[[58,57,2],6],[[58,59,61],6],[[58,59],61],[[56,56],56],[[57,57],57],[[56,56],6],[[57,57],6],[[56,56],56],[[57,57],57],[[56,56],6],[[57,57],6],[[58,57],6],[59,56],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[56,56],56],[[57,57],57],[12,6],[12,6],[12,6],[12,6],[12,6],[58,6],[12,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],69],[[],70],[[69,69],69],[[70,70],70],[[69,69],6],[[70,70],6],[[69,69],69],[[70,70],70],[[69,69],6],[[70,70],6],[69,12],[69,12],[70,12],[70,12],[[69,69],69],[[70,70],70],[[69,69],6],[[70,70],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,69],[70,70],[[69,69],16],[[70,70],16],[69,69],[70,70],[[69,69],2],[[70,70],2],[[69,69],69],[[70,70],70],[[],69],[[],70],[[69,69],2],[[70,70],2],[[69,-1],6,48],[[70,-1],6,48],[[71,3],4],[[72,3],4],[[73,3],4],[[74,3],4],[[75,3],4],[[76,3],4],[[77,3],4],[[78,3],4],[[79,3],4],[[80,3],4],[[69,3],4],[[69,3],4],[[69,3],4],[[69,3],4],[[69,3],4],[[70,3],4],[[70,3],4],[[70,3],4],[[70,3],4],[[70,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[69]]]],[12,[[15,[70]]]],[12,69],[12,69],[12,70],[12,70],[12,69],[12,70],[12,69],[12,70],[-1,69,48],[-1,70,48],[43,[[15,[69]]]],[43,[[15,[70]]]],[[69,-1],6,7],[[70,-1],6,7],[[69,69],6],[[70,70],6],[[69,69],69],[[70,70],70],[[69,69],2],[[70,70],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69],[70],[69,2],[70,2],[69,2],[70,2],[69,[[53,[69]]]],[70,[[53,[70]]]],[69,[[54,[69]]]],[70,[[54,[70]]]],[32,71],[69,69],[70,70],[[69,69],[[15,[16]]]],[[70,70],[[15,[16]]]],[71,12],[[],69],[[],10],[[],10],[[],10],[[],[[6,[33,33,33,33]]]],[[],10],[[],81],[[],[[6,[70,82]]]],[[],[[6,[70,82]]]],[[],12],[[],[[6,[5,5]]]],[[69,69],6],[[70,70],6],[[69,69,2],6],[[70,70,2],6],[[69,69],69],[[70,70],70],[[69,69],6],[[70,70],6],[[69,69],69],[[70,70],70],[[69,69],6],[[70,70],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[69,69],69],[[70,70],70],[-1,6,22],[[71,12],6],[69,6],[10,6],[10,6],[10,6],[[33,33,33,33],[[8,[6,43]]]],[10,6],[81,6],[[70,82],6],[[70,82],6],[12,6],[[5,5],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],83],[[83,83],83],[[83,83],6],[[83,83],83],[[83,83],6],[83,32],[83,32],[[83,83],83],[[83,83],6],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[[83,83],16],[83,83],[[83,83],2],[[],83],[[83,83],83],[[],83],[[83,83],2],[[83,-1],6,48],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[[83,3],4],[-1,-1,[]],[32,[[15,[83]]]],[32,83],[32,83],[32,83],[32,83],[-1,83,48],[43,[[15,[83]]]],[[83,-1],6,7],[[83,83],6],[[83,83],83],[[83,83],2],[-1,-2,[],[]],[83],[83,2],[83,2],[83,[[53,[83]]]],[83,[[54,[83]]]],[83,83],[[83,83],[[15,[16]]]],[[],83],[[83,83],6],[[83,83,2],6],[[83,83],83],[[83,83],6],[[83,83],83],[[83,83],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[83,83],83],[83,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],81],[[81,81],81],[[81,81],6],[[81,81],81],[[81,81],6],[81,12],[81,12],[[81,81],81],[[81,81],6],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[81,81],16],[81,81],[[81,81],2],[[81,81],81],[[],81],[[81,81],2],[[81,-1],6,48],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[[81,3],4],[-1,-1,[]],[12,[[15,[81]]]],[12,81],[12,81],[12,81],[12,81],[-1,81,48],[43,[[15,[81]]]],[[81,-1],6,7],[[81,81],6],[[81,81],81],[[81,81],2],[-1,-2,[],[]],[81],[81,2],[81,2],[81,[[53,[81]]]],[81,[[54,[81]]]],[81,81],[[81,81],[[15,[16]]]],[[],81],[[],12],[[81,81],6],[[81,81,2],6],[[81,81],81],[[81,81],6],[[81,81],81],[[81,81],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[[81,81],81],[81,6],[12,6],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[33,33],16],[[33,33],2],[[33,3],4],[[84,3],4],[[85,3],4],[[86,3],4],[[87,3],4],[[88,3],4],[[89,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[33,-1],6,7],[33,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,1],33],[[33,33],[[15,[16]]]],[[],10],[[],10],[[],10],[33,1],[33,6],[33,6],[33,6],[33,6],[33,6],[33,6],[33,6],[[33,1],6],[[],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[10,6],[10,6],[10,6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],90],[[90,90],90],[[90,90],6],[[90,90],90],[[90,90],6],[90,12],[90,12],[[90,90],90],[[90,90],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,90],[[90,90],16],[90,90],[[90,90],2],[[90,90],90],[[],90],[[90,90],2],[[90,-1],6,48],[[91,3],4],[[90,3],4],[[90,3],4],[[90,3],4],[[90,3],4],[[90,3],4],[-1,-1,[]],[-1,-1,[]],[12,[[15,[90]]]],[12,90],[12,90],[12,90],[12,90],[-1,90,48],[43,[[15,[90]]]],[[90,-1],6,7],[[90,90],6],[[90,90],90],[[90,90],2],[-1,-2,[],[]],[-1,-2,[],[]],[90],[90,2],[90,2],[90,[[53,[90]]]],[90,[[54,[90]]]],[90,90],[[90,90],[[15,[16]]]],[[],90],[[],12],[[90,90],6],[[90,90,2],6],[[90,90],90],[[90,90],6],[[90,90],90],[[90,90],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[90,90],90],[90,6],[12,6],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[34,3],4],[-1,-1,[]],0,0,[-1,-2,[],[]],0,0,0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],0,[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[92,93],33],[[],94],[92,[[95,[12]]]],[[94,94],94],[[94,94],6],[[94,94],94],[[94,94],6],[94,12],[94,12],[[94,94],94],[[94,94],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[93,93],[94,94],[[94,94],16],[94,94],[[94,94],2],[[94,94],94],[93,1],[[],94],[[94,94],2],[[94,-1],6,48],[[92,3],4],[[93,3],4],[[94,3],4],[[94,3],4],[[94,3],4],[[94,3],4],[[94,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[94]]]],[12,94],[12,94],[12,94],[12,94],[-1,94,48],[43,[[15,[94]]]],[[[95,[12]]],92],[[94,-1],6,7],[[94,94],6],[[94,94],94],[[94,94],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94],[94,2],[94,2],[94,[[53,[94]]]],[94,[[54,[94]]]],[[],93],[[],93],[92,6],[92,6],[[],92],[94,94],[[94,94],[[15,[16]]]],[[94,94],6],[[94,94,2],6],[[94,94],94],[[94,94],6],[[94,94],94],[[94,94],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[96,93],[96,93],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[94,94],94],[[],93],[[],93],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],97],[98,[[100,[99]]]],[[97,97],97],[[97,97],6],[[97,97],97],[[97,97],6],[97,12],[97,12],[[97,97],97],[[97,97],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[101,101],[[[102,[-1]]],[[102,[-1]]],40],[103,103],[99,99],[97,97],[104,104],[105,105],[106,106],[[97,97],16],0,[97,97],[[97,97],2],0,0,0,[98],[104,105],0,[[97,97],97],[[103,2],103],0,0,[[],97],[[[102,[-1]],[102,[-1]]],2,[]],[[103,103],2],[[97,97],2],[[104,104],2],[[105,105],2],[[106,106],2],[[97,-1],6,48],[104,2],[[98,3],4],[[101,3],4],[[[102,[-1]],3],4,[]],[[103,3],4],[[99,3],4],[[97,3],4],[[97,3],4],[[97,3],4],[[97,3],4],[[97,3],4],[[104,3],4],[[105,3],4],[[106,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[97]]]],[12,97],[12,97],[12,97],[12,97],[-1,97,48],[43,[[15,[97]]]],0,[[[102,[-1]]],10,[]],[[97,-1],6,7],[[104,-1],6,7],[[105,-1],6,7],0,[[101,11]],[104,12],[[101,11]],[[97,97],6],0,[[97,97],97],[[97,97],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97],0,0,[99,107],[97,2],[97,2],[104,2],[97,[[53,[97]]]],[97,[[54,[97]]]],[101,6],[101,6],0,[[],[[102,[-1]]],[]],[[],101],[12,[[15,[104]]]],[12,104],0,[97,97],0,0,[[97,97],[[15,[16]]]],[[97,97],6],[101,6],0,0,[[97,97,2],6],[[[102,[-1]],10],103,[]],[[[102,[108]],108],103],[[[102,[109]],109],103],[[[102,[110]],110],103],[[[102,[111]],111],103],[[[102,[112]],112],103],[[103,2],103],[[103,1],103],[[103,5],103],0,[[101,-1],[[95,[[102,[112]]]]],[[113,[11]]]],[[101,-1],[[95,[[102,[112]]]]],[[113,[11]]]],0,0,0,[[97,97],97],[[97,97],6],[[97,97],97],[[97,97],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[97,97],97],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[15,[[55,[-2]]]]],[],[]],[[-1,[55,[-2]]],6,[],[]],0,0,0,0,0,0,0,[[[55,[-1]],12],[],114],[[[55,[-1]],12],6,114],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[55,[-1]]],[[55,[-1]]],[40,114]],[[[115,[-1]]],[[115,[-1]]],[40,114]],[[[116,[-1]]],[[116,[-1]]],[40,114]],[[[55,[-1]],[55,[-1]]],16,[117,114]],[13,[[55,[-1]]],114],0,0,[[[55,[-1]],[55,[-1]]],2,[118,114]],[[[115,[-1]],[115,[-1]]],2,[118,114]],[[[116,[-1]],[116,[-1]]],2,[118,114]],[[[55,[-1]],3],4,114],[[[115,[-1]],3],4,114],[[[116,[-1]],3],4,114],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[13,[[8,[[55,[-1]],119]]],114],[13,[[55,[-1]]],114],[[[55,[-1]],-2],6,[120,114],7],[[[115,[-1]],-2],6,[120,114],7],[[[116,[-1]],-2],6,[120,114],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[115,[-1]]],2,114],[[[116,[-1]]],2,114],[[[115,[-1]]],15,114],[[[116,[-1]]],15,114],[[[55,[-1]],[55,[-1]]],[[15,[16]]],[121,114]],[[[55,[-1]],[55,[-1]]],[[115,[-1]]],114],[[[55,[-1]],[55,[-1]]],[[116,[-1]]],114],[[[55,[-1]]],12,114],0,0,[[[55,[-1]]],13,114],[[[55,[-1]],[55,[-1]]],[],114],[[[55,[-1]],12],[],114],[[[55,[-1]],12],6,114],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],6,[],[[123,[122]]]],[[[124,[-1]],-2],6,125,[[123,[122]]]],[[126,-1],6,[[123,[122]]]],[[127,-1],6,[[123,[122]]]],[[-1,128,-2],6,[],[[123,[122]]]],[[[124,[-1]],128,-2],6,125,[[123,[122]]]],[[126,128,-1],6,[[123,[122]]]],[[127,128,-1],6,[[123,[122]]]],[[],129],[[[130,[-1]]],6,114],[129,6],[[[124,[-1]],3],4,[42,125]],[[126,3],4],[[127,3],4],[[131,3],4],[[131,3],4],[[132,3],4],[[133,3],4],[[[130,[-1]],3],4,[42,114]],[[129,3],4],[[[134,[-1]],3],4,[42,114]],[[135,3],4],[[136,3],4],[[137,3],4],[[-1,55],138,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-2,[55,[-1]],139,-3],[[8,[[130,[-1]],[134,[-1]]]]],114,[140,[141,[-1]]],[[142,[122]],140]],[[[130,[-1]]],6,114],[129,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[124,[-1]]],138,125],[126,138],[127,138],[[-1,[82,[-2]],[55,[-2]],139,-3],[[8,[[130,[-2]],[134,[-2]]]]],140,[],[[142,[122]],140]],[[-1,[82,[-2]],[55,[-2]],139,139,-3],[[8,[[130,[-2]],[134,[-2]]]]],140,[],[[142,[122]],140]],[[[124,[-1]],[82,[143]],[55,[143]],139,139,-2],[[8,[[130,[143]],[134,[143]]]]],125,[[142,[122]],140]],[[[124,[-1]],[82,[144]],[55,[144]],139,139,-2],[[8,[[130,[144]],[134,[144]]]]],125,[[142,[122]],140]],[[[124,[-1]],[82,[122]],[55,[122]],139,139,-2],[[8,[[130,[122]],[134,[122]]]]],125,[[142,[122]],140]],[[126,[82,[122]],[55,[122]],139,139,-1],[[8,[[130,[122]],[134,[122]]]]],[[142,[122]],140]],[[126,[82,[144]],[55,[144]],139,139,-1],[[8,[[130,[144]],[134,[144]]]]],[[142,[122]],140]],[[126,[82,[143]],[55,[143]],139,139,-1],[[8,[[130,[143]],[134,[143]]]]],[[142,[122]],140]],[[127,[82,[122]],[55,[122]],139,139,-1],[[8,[[130,[122]],[134,[122]]]]],[[142,[122]],140]],[[127,[82,[143]],[55,[143]],139,139,-1],[[8,[[130,[143]],[134,[143]]]]],[[142,[122]],140]],[[127,[82,[144]],[55,[144]],139,139,-1],[[8,[[130,[144]],[134,[144]]]]],[[142,[122]],140]],[[138,-1],[[124,[-1]]],125],[[138,10],126],[138,[[8,[127,131]]]],[[[82,[-1]]],[[130,[-1]]],114],[[],129],[[138,19],127],[[[124,[-1]]],-1,125],[126,10],[[-1,[82,[-2]],139],[[8,[129,136]]],[],[]],[[[124,[-1]],[82,[143]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[122]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[144]],139],[[8,[129,136]]],125],[[126,[82,[144]],139],[[8,[129,136]]]],[[126,[82,[143]],139],[[8,[129,136]]]],[[126,[82,[122]],139],[[8,[129,136]]]],[[127,[82,[143]],139],[[8,[129,136]]]],[[127,[82,[122]],139],[[8,[129,136]]]],[[127,[82,[144]],139],[[8,[129,136]]]],[[-1,[82,[-2]],139],[[8,[129,136]]],[],[]],[[[124,[-1]],[82,[122]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[143]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[144]],139],[[8,[129,136]]],125],[[126,[82,[122]],139],[[8,[129,136]]]],[[126,[82,[144]],139],[[8,[129,136]]]],[[126,[82,[143]],139],[[8,[129,136]]]],[[127,[82,[144]],139],[[8,[129,136]]]],[[127,[82,[122]],139],[[8,[129,136]]]],[[127,[82,[143]],139],[[8,[129,136]]]],[[-1,[82,[-2]],139],[[8,[129,136]]],[],[]],[[[124,[-1]],[82,[122]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[144]],139],[[8,[129,136]]],125],[[[124,[-1]],[82,[143]],139],[[8,[129,136]]],125],[[126,[82,[144]],139],[[8,[129,136]]]],[[126,[82,[143]],139],[[8,[129,136]]]],[[126,[82,[122]],139],[[8,[129,136]]]],[[127,[82,[143]],139],[[8,[129,136]]]],[[127,[82,[144]],139],[[8,[129,136]]]],[[127,[82,[122]],139],[[8,[129,136]]]],[133,12],[133,13],[[-1,10],132,[]],[[[124,[-1]],10],132,125],[[126,10],132],[[127,10],132],[[-1,10],[[15,[13]]],[]],[[-1,[82,[-2]]],[[8,[[55,[-2]],137]]],[],[]],[[[124,[-1]],[82,[143]]],[[8,[[55,[143]],137]]],125],[[[124,[-1]],[82,[144]]],[[8,[[55,[144]],137]]],125],[[[124,[-1]],[82,[122]]],[[8,[[55,[122]],137]]],125],[[126,[82,[122]]],[[8,[[55,[122]],137]]]],[[126,[82,[143]]],[[8,[[55,[143]],137]]]],[[126,[82,[144]]],[[8,[[55,[144]],137]]]],[[127,[82,[143]]],[[8,[[55,[143]],137]]]],[[127,[82,[144]]],[[8,[[55,[144]],137]]]],[[127,[82,[122]]],[[8,[[55,[122]],137]]]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[-1,[82,[-2]]],[[8,[[6,[[55,[-2]],[130,[-2]]]],135]]],[],[]],[[[124,[-1]],[82,[143]]],[[8,[[6,[[55,[143]],[130,[143]]]],135]]],125],[[[124,[-1]],[82,[122]]],[[8,[[6,[[55,[122]],[130,[122]]]],135]]],125],[[[124,[-1]],[82,[144]]],[[8,[[6,[[55,[144]],[130,[144]]]],135]]],125],[[126,[82,[122]]],[[8,[[6,[[55,[122]],[130,[122]]]],135]]]],[[126,[82,[144]]],[[8,[[6,[[55,[144]],[130,[144]]]],135]]]],[[126,[82,[143]]],[[8,[[6,[[55,[143]],[130,[143]]]],135]]]],[[127,[82,[143]]],[[8,[[6,[[55,[143]],[130,[143]]]],135]]]],[[127,[82,[144]]],[[8,[[6,[[55,[144]],[130,[144]]]],135]]]],[[127,[82,[122]]],[[8,[[6,[[55,[122]],[130,[122]]]],135]]]],[[-1,[82,[-2]],139],[[8,[[130,[-2]],136]]],[],[]],[[[124,[-1]],[82,[143]],139],[[8,[[130,[143]],136]]],125],[[[124,[-1]],[82,[144]],139],[[8,[[130,[144]],136]]],125],[[[124,[-1]],[82,[122]],139],[[8,[[130,[122]],136]]],125],[[126,[82,[144]],139],[[8,[[130,[144]],136]]]],[[126,[82,[143]],139],[[8,[[130,[143]],136]]]],[[126,[82,[122]],139],[[8,[[130,[122]],136]]]],[[127,[82,[122]],139],[[8,[[130,[122]],136]]]],[[127,[82,[143]],139],[[8,[[130,[143]],136]]]],[[127,[82,[144]],139],[[8,[[130,[144]],136]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[82,[-1]],12],[],114],[[[82,[-1]],12],6,114],[[[44,[144]]],[[44,[122]]]],[[[82,[-1]],11],[[15,[[82,[-1]]]]],114],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,122],[144,144],[143,143],[[[82,[-1]]],[[82,[-1]]],[40,114]],[[[44,[-1]]],[[44,[-1]]],[40,114]],[[[128,[-1]]],[[128,[-1]]],[40,114]],[[122,122],16],[[144,144],16],[[143,143],16],[[[82,[-1]],[82,[-1]]],16,[117,114]],[10,[[82,[-1]]],114],0,0,[[122,122],2],[[144,144],2],[[143,143],2],[[[82,[-1]],[82,[-1]]],2,[118,114]],[[[44,[-1]],[44,[-1]]],2,[118,114]],[[[128,[-1]],[128,[-1]]],2,[118,114]],[[122,3],4],[[144,3],4],[[143,3],4],[[[82,[-1]],3],4,114],[[[44,[-1]],3],4,114],[[[128,[-1]],3],4,114],[[119,3],4],[[119,3],4],[[[82,[-1]],11],[[15,[[82,[-1]]]]],114],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[19,19,19,19],[[82,[122]]]],[[19,19],[[82,[143]]]],[[19,19,19],[[82,[144]]]],[10,[[8,[[82,[-1]],119]]],114],[10,[[82,[-1]]],114],[[[82,[-1]],-2],6,[120,114],7],[[[44,[-1]],-2],6,[120,114],7],[[[128,[-1]],-2],6,[120,114],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],2,114],[[[128,[-1]]],2,114],[[[44,[-1]]],15,114],[[[128,[-1]]],15,114],[[[82,[122]]],19],[[[82,[-1]]],19,37],[[[82,[-1]]],19,114],[[[82,[-1]]],19,114],[[[82,[-1]],21],19,114],[[122,122],[[15,[16]]]],[[144,144],[[15,[16]]]],[[143,143],[[15,[16]]]],[[[82,[-1]],[82,[-1]]],[[15,[16]]],[121,114]],[[[82,[-1]],[82,[-1]]],[[44,[-1]]],114],[[[82,[-1]],[82,[-1]]],[[128,[-1]]],114],[[[82,[-1]]],12,114],0,0,[[[82,[-1]]],10,114],[[[82,[-1]],[82,[-1]]],[[15,[11]]],114],[[[82,[-1]],[82,[-1]]],[],114],[[[82,[-1]],12],[],114],[[[82,[-1]],12],6,114],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[145,13],[[],139],[[139,139],139],[[139,139],6],[[139,139],139],[[139,139],6],[139,12],[139,12],[[139,139],139],[[139,139],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,146],[145,145],[139,139],[138,138],[19,19],[20,20],[21,21],[[139,139],16],[[19,19],16],[[20,20],16],[[21,21],16],[139,139],[[139,139],2],[[],138],[[139,139],139],[[],139],[21,12],[[146,146],2],[[139,139],2],[[19,19],2],[[20,20],2],[[21,21],2],[[139,-1],6,48],[145,139],[[146,3],4],[[145,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[139,3],4],[[138,3],4],[[19,3],4],[[20,3],4],[[21,3],4],[145,[[8,[55,146]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[15,[139]]]],[12,139],[12,139],[12,139],[12,139],[-1,139,48],[43,[[15,[139]]]],[[139,-1],6,7],[[19,-1],6,7],[[20,-1],6,7],[[21,-1],6,7],[[138,11]],[[138,19]],[[138,19]],[[138,11]],[[139,139],6],[[139,139],139],[[139,139],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139],[139,2],[139,2],[138,2],[145,2],[139,[[53,[139]]]],[138,[[0,[147]]]],[138,[[0,[147]]]],[139,[[54,[139]]]],[[],145],[[],138],[5,19],[5,20],[5,19],[5,20],[21,[[15,[21]]]],[21,[[15,[21]]]],[139,139],[[139,139],[[15,[16]]]],[[19,19],[[15,[16]]]],[[20,20],[[15,[16]]]],[[21,21],[[15,[16]]]],[[139,139],6],[[139,139,2],6],[[145,13,139],6],[[145,139],6],[[145,55,139],6],[145,6],[[139,139],139],[[139,139],6],[[139,139],139],[21,12],[[139,139],6],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[139,139],139],[138,6],0,0,[5,-1,[]],[[5,-1],6,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[[96,3],4],[-1,-1,[]],0,[-1,-2,[],[]],0,[[],96],0,[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,9,[]]],"c":[221,222,223,224,225,226,227,228,229,230,231,232,363,478,479,480,747,748,1002,1003,1166,1241,1378,1413,1532,1713,2371],"p":[[4,"PrivilegeLevel",0],[15,"bool"],[3,"Formatter",2466],[6,"Result",2466],[15,"u16"],[15,"tuple"],[8,"Hasher",2467],[4,"Result",2468],[3,"TypeId",2469],[3,"VirtAddr",27],[15,"usize"],[15,"u64"],[3,"PhysAddr",27],[8,"Into",2470],[4,"Option",2471],[4,"Ordering",2472],[3,"VirtAddrNotValid",27],[3,"PhysAddrNotValid",27],[3,"PageTableIndex",2263],[3,"PageOffset",2263],[4,"PageTableLevel",2263],[8,"FnOnce",2473],[3,"PortGeneric",151],[3,"ReadOnlyAccess",151],[3,"WriteOnlyAccess",151],[3,"ReadWriteAccess",151],[8,"PortRead",2448],[8,"PortReadAccess",151],[8,"PortWrite",2448],[8,"PortWriteAccess",151],[3,"RdRand",199],[15,"u32"],[3,"SegmentSelector",1270],[3,"DescriptorTablePointer",1446],[3,"InvlpgbFlushBuilder",239],[3,"AsidOutOfRangeError",239],[8,"NotGiantPageSize",2137],[3,"Invlpgb",239],[3,"Pcid",239],[8,"Clone",2474],[4,"InvPicdCommand",239],[8,"Debug",2466],[15,"str"],[3,"PageRange",2137],[3,"Cr0Flags",328],[3,"Cr3Flags",328],[3,"Cr4Flags",328],[8,"IntoIterator",2475],[3,"Cr0",328],[3,"Cr2",328],[3,"Cr3",328],[3,"Cr4",328],[3,"Iter",2476],[3,"IterNames",2476],[3,"PhysFrame",1837],[3,"Dr6Flags",586],[3,"Dr7Flags",586],[3,"Dr7Value",586],[4,"DebugAddressRegisterNumber",586],[4,"BreakpointCondition",586],[4,"BreakpointSize",586],[3,"Dr0",586],[3,"Dr1",586],[3,"Dr2",586],[3,"Dr3",586],[3,"Dr6",586],[3,"Dr7",586],[15,"u8"],[3,"EferFlags",867],[3,"CetFlags",867],[3,"Msr",867],[3,"Efer",867],[3,"FsBase",867],[3,"GsBase",867],[3,"KernelGsBase",867],[3,"Star",867],[3,"LStar",867],[3,"SFMask",867],[3,"UCet",867],[3,"SCet",867],[3,"RFlags",1193],[3,"Page",2137],[3,"MxCsr",1118],[3,"CS",1270],[3,"SS",1270],[3,"DS",1270],[3,"ES",1270],[3,"FS",1270],[3,"GS",1270],[3,"XCr0Flags",1367],[3,"XCr0",1367],[3,"GlobalDescriptorTable",1463],[4,"Descriptor",1463],[3,"DescriptorFlags",1463],[15,"slice"],[3,"TaskStateSegment",2452],[3,"PageFaultErrorCode",1575],[3,"InterruptStackFrame",1575],[3,"InterruptStackFrameValue",1575],[3,"Volatile",2477],[3,"InterruptDescriptorTable",1575],[3,"Entry",1575],[3,"EntryOptions",1575],[3,"SelectorErrorCode",1575],[4,"DescriptorTable",1575],[4,"ExceptionVector",1575],[15,"never"],[6,"DivergingHandlerFuncWithErrCode",1575],[6,"DivergingHandlerFunc",1575],[6,"PageFaultHandlerFunc",1575],[6,"HandlerFuncWithErrCode",1575],[6,"HandlerFunc",1575],[8,"RangeBounds",2478],[8,"PageSize",2137],[3,"PhysFrameRange",1837],[3,"PhysFrameRangeInclusive",1837],[8,"Ord",2472],[8,"PartialEq",2472],[3,"AddressNotAligned",2137],[8,"Hash",2467],[8,"PartialOrd",2472],[4,"Size4KiB",2137],[8,"FrameDeallocator",1814],[3,"MappedPageTable",1897],[8,"PageTableFrameMapping",1897],[3,"OffsetPageTable",1897],[3,"RecursivePageTable",1897],[3,"PageRangeInclusive",2137],[3,"MapperFlushAll",1897],[3,"MapperFlush",1897],[4,"InvalidPageTable",1897],[4,"TranslateResult",1897],[4,"MappedFrame",1897],[4,"MapToError",1897],[4,"UnmapError",1897],[4,"FlagUpdateError",1897],[4,"TranslateError",1897],[3,"PageTable",2263],[3,"PageTableFlags",2263],[8,"Sized",2479],[8,"Mapper",1897],[8,"FrameAllocator",1814],[4,"Size1GiB",2137],[4,"Size2MiB",2137],[3,"PageTableEntry",2263],[4,"FrameError",2263],[8,"Iterator",2480],[8,"DebugAddressRegister",586],[8,"Segment64",1270],[8,"Segment",1270],[8,"CleanUp",1897],[8,"Translate",1897],[13,"Mapped",2134]],"b":[[31,"impl-Add%3Cusize%3E-for-VirtAddr"],[32,"impl-Add%3Cu64%3E-for-VirtAddr"],[33,"impl-Add%3Cusize%3E-for-PhysAddr"],[34,"impl-Add%3Cu64%3E-for-PhysAddr"],[35,"impl-AddAssign%3Cu64%3E-for-VirtAddr"],[36,"impl-AddAssign%3Cusize%3E-for-VirtAddr"],[37,"impl-AddAssign%3Cusize%3E-for-PhysAddr"],[38,"impl-AddAssign%3Cu64%3E-for-PhysAddr"],[66,"impl-Octal-for-VirtAddr"],[67,"impl-Pointer-for-VirtAddr"],[68,"impl-UpperHex-for-VirtAddr"],[69,"impl-LowerHex-for-VirtAddr"],[70,"impl-Debug-for-VirtAddr"],[71,"impl-Binary-for-VirtAddr"],[72,"impl-Octal-for-PhysAddr"],[73,"impl-Binary-for-PhysAddr"],[74,"impl-LowerHex-for-PhysAddr"],[75,"impl-UpperHex-for-PhysAddr"],[76,"impl-Pointer-for-PhysAddr"],[77,"impl-Debug-for-PhysAddr"],[109,"impl-Sub-for-VirtAddr"],[110,"impl-Sub%3Cusize%3E-for-VirtAddr"],[111,"impl-Sub%3Cu64%3E-for-VirtAddr"],[112,"impl-Sub-for-PhysAddr"],[113,"impl-Sub%3Cusize%3E-for-PhysAddr"],[114,"impl-Sub%3Cu64%3E-for-PhysAddr"],[115,"impl-SubAssign%3Cusize%3E-for-VirtAddr"],[116,"impl-SubAssign%3Cu64%3E-for-VirtAddr"],[117,"impl-SubAssign%3Cusize%3E-for-PhysAddr"],[118,"impl-SubAssign%3Cu64%3E-for-PhysAddr"],[275,"impl-Display-for-AsidOutOfRangeError"],[276,"impl-Debug-for-AsidOutOfRangeError"],[390,"impl-Cr0Flags"],[391,"impl-Flags-for-Cr0Flags"],[392,"impl-Cr3Flags"],[393,"impl-Flags-for-Cr3Flags"],[394,"impl-Cr4Flags"],[395,"impl-Flags-for-Cr4Flags"],[441,"impl-UpperHex-for-Cr0Flags"],[442,"impl-Debug-for-Cr0Flags"],[443,"impl-Binary-for-Cr0Flags"],[444,"impl-Octal-for-Cr0Flags"],[445,"impl-LowerHex-for-Cr0Flags"],[448,"impl-Debug-for-Cr3Flags"],[449,"impl-LowerHex-for-Cr3Flags"],[450,"impl-Binary-for-Cr3Flags"],[451,"impl-UpperHex-for-Cr3Flags"],[452,"impl-Octal-for-Cr3Flags"],[454,"impl-UpperHex-for-Cr4Flags"],[455,"impl-LowerHex-for-Cr4Flags"],[456,"impl-Octal-for-Cr4Flags"],[457,"impl-Binary-for-Cr4Flags"],[458,"impl-Debug-for-Cr4Flags"],[469,"impl-Flags-for-Cr0Flags"],[470,"impl-Cr0Flags"],[471,"impl-Flags-for-Cr3Flags"],[472,"impl-Cr3Flags"],[473,"impl-Flags-for-Cr4Flags"],[474,"impl-Cr4Flags"],[643,"impl-Flags-for-Dr6Flags"],[644,"impl-Dr6Flags"],[645,"impl-Dr7Flags"],[646,"impl-Flags-for-Dr7Flags"],[708,"impl-UpperHex-for-Dr6Flags"],[709,"impl-Binary-for-Dr6Flags"],[710,"impl-Octal-for-Dr6Flags"],[711,"impl-LowerHex-for-Dr6Flags"],[712,"impl-Debug-for-Dr6Flags"],[713,"impl-Binary-for-Dr7Flags"],[714,"impl-UpperHex-for-Dr7Flags"],[715,"impl-Debug-for-Dr7Flags"],[716,"impl-LowerHex-for-Dr7Flags"],[717,"impl-Octal-for-Dr7Flags"],[740,"impl-Flags-for-Dr6Flags"],[741,"impl-Dr6Flags"],[742,"impl-Flags-for-Dr7Flags"],[743,"impl-Dr7Flags"],[914,"impl-Flags-for-EferFlags"],[915,"impl-EferFlags"],[916,"impl-Flags-for-CetFlags"],[917,"impl-CetFlags"],[972,"impl-Binary-for-EferFlags"],[973,"impl-LowerHex-for-EferFlags"],[974,"impl-UpperHex-for-EferFlags"],[975,"impl-Debug-for-EferFlags"],[976,"impl-Octal-for-EferFlags"],[977,"impl-Debug-for-CetFlags"],[978,"impl-UpperHex-for-CetFlags"],[979,"impl-Binary-for-CetFlags"],[980,"impl-LowerHex-for-CetFlags"],[981,"impl-Octal-for-CetFlags"],[996,"impl-Flags-for-EferFlags"],[997,"impl-EferFlags"],[998,"impl-Flags-for-CetFlags"],[999,"impl-CetFlags"],[1141,"impl-MxCsr"],[1142,"impl-Flags-for-MxCsr"],[1156,"impl-Octal-for-MxCsr"],[1157,"impl-Debug-for-MxCsr"],[1158,"impl-UpperHex-for-MxCsr"],[1159,"impl-Binary-for-MxCsr"],[1160,"impl-LowerHex-for-MxCsr"],[1163,"impl-Flags-for-MxCsr"],[1164,"impl-MxCsr"],[1217,"impl-Flags-for-RFlags"],[1218,"impl-RFlags"],[1231,"impl-Octal-for-RFlags"],[1232,"impl-UpperHex-for-RFlags"],[1233,"impl-LowerHex-for-RFlags"],[1234,"impl-Binary-for-RFlags"],[1235,"impl-Debug-for-RFlags"],[1238,"impl-RFlags"],[1239,"impl-Flags-for-RFlags"],[1385,"impl-XCr0Flags"],[1386,"impl-Flags-for-XCr0Flags"],[1402,"impl-Octal-for-XCr0Flags"],[1403,"impl-LowerHex-for-XCr0Flags"],[1404,"impl-Debug-for-XCr0Flags"],[1405,"impl-UpperHex-for-XCr0Flags"],[1406,"impl-Binary-for-XCr0Flags"],[1410,"impl-Flags-for-XCr0Flags"],[1411,"impl-XCr0Flags"],[1497,"impl-DescriptorFlags"],[1498,"impl-Flags-for-DescriptorFlags"],[1520,"impl-Octal-for-DescriptorFlags"],[1521,"impl-Debug-for-DescriptorFlags"],[1522,"impl-UpperHex-for-DescriptorFlags"],[1523,"impl-Binary-for-DescriptorFlags"],[1524,"impl-LowerHex-for-DescriptorFlags"],[1529,"impl-Flags-for-DescriptorFlags"],[1530,"impl-DescriptorFlags"],[1632,"impl-Flags-for-PageFaultErrorCode"],[1633,"impl-PageFaultErrorCode"],[1692,"impl-LowerHex-for-PageFaultErrorCode"],[1693,"impl-Debug-for-PageFaultErrorCode"],[1694,"impl-Binary-for-PageFaultErrorCode"],[1695,"impl-UpperHex-for-PageFaultErrorCode"],[1696,"impl-Octal-for-PageFaultErrorCode"],[1710,"impl-PageFaultErrorCode"],[1711,"impl-Flags-for-PageFaultErrorCode"],[1765,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)+-%3E+!%3E"],[1766,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)+-%3E+!%3E"],[1767,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+PageFaultErrorCode)%3E"],[1768,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame,+u64)%3E"],[1769,"impl-Entry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame)%3E"],[1885,"impl-Sub-for-PhysFrame%3CS%3E"],[1886,"impl-Sub%3Cu64%3E-for-PhysFrame%3CS%3E"],[1971,"impl-Display-for-InvalidPageTable"],[1972,"impl-Debug-for-InvalidPageTable"],[2014,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2015,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2016,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2017,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2018,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2019,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2020,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2021,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2022,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2032,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2033,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2034,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2035,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2036,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2037,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2038,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2039,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2040,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2042,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2043,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2044,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2045,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2046,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2047,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2048,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2049,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2050,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2052,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2053,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2054,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2055,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2056,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2057,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2058,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2059,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2060,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2069,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2070,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2071,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2072,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2073,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2074,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2075,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2076,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2077,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2115,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2116,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2117,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2118,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2119,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2120,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2121,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2122,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2123,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2125,"impl-Mapper%3CSize1GiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2126,"impl-Mapper%3CSize2MiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2127,"impl-Mapper%3CSize4KiB%3E-for-MappedPageTable%3C\'a,+P%3E"],[2128,"impl-Mapper%3CSize2MiB%3E-for-OffsetPageTable%3C\'a%3E"],[2129,"impl-Mapper%3CSize1GiB%3E-for-OffsetPageTable%3C\'a%3E"],[2130,"impl-Mapper%3CSize4KiB%3E-for-OffsetPageTable%3C\'a%3E"],[2131,"impl-Mapper%3CSize4KiB%3E-for-RecursivePageTable%3C\'a%3E"],[2132,"impl-Mapper%3CSize1GiB%3E-for-RecursivePageTable%3C\'a%3E"],[2133,"impl-Mapper%3CSize2MiB%3E-for-RecursivePageTable%3C\'a%3E"],[2192,"impl-Debug-for-AddressNotAligned"],[2193,"impl-Display-for-AddressNotAligned"],[2239,"impl-Sub-for-Page%3CS%3E"],[2240,"impl-Sub%3Cu64%3E-for-Page%3CS%3E"],[2306,"impl-Flags-for-PageTableFlags"],[2307,"impl-PageTableFlags"],[2350,"impl-Binary-for-PageTableFlags"],[2351,"impl-Octal-for-PageTableFlags"],[2352,"impl-LowerHex-for-PageTableFlags"],[2353,"impl-UpperHex-for-PageTableFlags"],[2354,"impl-Debug-for-PageTableFlags"],[2368,"impl-Flags-for-PageTableFlags"],[2369,"impl-PageTableFlags"],[2378,"impl-Index%3Cusize%3E-for-PageTable"],[2379,"impl-Index%3CPageTableIndex%3E-for-PageTable"],[2380,"impl-IndexMut%3CPageTableIndex%3E-for-PageTable"],[2381,"impl-IndexMut%3Cusize%3E-for-PageTable"]]},\
"zerocopy":{"doc":"<em>Want to help improve zerocopy? Fill out our user survey!</em>","t":"IYIIIYIYDDIYLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKOOOLLLLLLLLLLLLLLGEIDDDDDDGESSSSGGDDDDSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLLKLLKLLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLKLLLKLLKLLLKLLKLLKLLKLLGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG","n":["AsBytes","AsBytes","ByteSlice","ByteSliceMut","FromBytes","FromBytes","FromZeroes","FromZeroes","Ref","Unalign","Unaligned","Unaligned","as_bytes","as_bytes_mut","as_mut_ptr","as_ptr","borrow","borrow","borrow_mut","borrow_mut","byteorder","bytes","bytes_mut","clone","cmp","cmp","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut_unchecked","deref_unchecked","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","get","get_mut_ptr","get_ptr","hash","include_value","into","into","into_inner","into_mut","into_mut_slice","into_ref","into_slice","mut_from","mut_from_prefix","mut_from_suffix","mut_slice_from","mut_slice_from_prefix","mut_slice_from_suffix","new","new","new_from_prefix","new_from_prefix_zeroed","new_from_suffix","new_from_suffix_zeroed","new_slice","new_slice_from_prefix","new_slice_from_prefix_zeroed","new_slice_from_suffix","new_slice_from_suffix_zeroed","new_slice_unaligned","new_slice_unaligned_from_prefix","new_slice_unaligned_from_prefix_zeroed","new_slice_unaligned_from_suffix","new_slice_unaligned_from_suffix_zeroed","new_slice_unaligned_zeroed","new_slice_zeroed","new_unaligned","new_unaligned_from_prefix","new_unaligned_from_prefix_zeroed","new_unaligned_from_suffix","new_unaligned_from_suffix_zeroed","new_unaligned_zeroed","new_zeroed","new_zeroed","partial_cmp","partial_cmp","partial_cmp","read","read_from","read_from_prefix","read_from_suffix","ref_from","ref_from_prefix","ref_from_suffix","set","slice_from","slice_from_prefix","slice_from_suffix","split_at","transmute","transmute_mut","transmute_ref","try_deref","try_deref_mut","try_from","try_from","try_into","try_into","type_id","type_id","update","write","write_to","write_to_prefix","write_to_suffix","zero","BE","BigEndian","ByteOrder","F32","F64","I128","I16","I32","I64","LE","LittleEndian","MAX_VALUE","MAX_VALUE","MAX_VALUE","MAX_VALUE","NativeEndian","NetworkEndian","U128","U16","U32","U64","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","big_endian","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_slice_f32","from_slice_f32","from_slice_f32","from_slice_f64","from_slice_f64","from_slice_f64","from_slice_i128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_u128","from_slice_u128","from_slice_u128","from_slice_u16","from_slice_u16","from_slice_u16","from_slice_u32","from_slice_u32","from_slice_u32","from_slice_u64","from_slice_u64","from_slice_u64","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","little_endian","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","native_endian","neg","neg","neg","neg","neg","neg","network_endian","new","new","new","new","new","new","new","new","new","new","not","not","not","not","not","not","not","not","partial_cmp","partial_cmp","read_f32","read_f32_into","read_f32_into_unchecked","read_f64","read_f64_into","read_f64_into_unchecked","read_i128","read_i128_into","read_i16","read_i16_into","read_i24","read_i32","read_i32_into","read_i48","read_i64","read_i64_into","read_int","read_int128","read_u128","read_u128","read_u128","read_u128_into","read_u128_into","read_u128_into","read_u16","read_u16","read_u16","read_u16_into","read_u16_into","read_u16_into","read_u24","read_u32","read_u32","read_u32","read_u32_into","read_u32_into","read_u32_into","read_u48","read_u64","read_u64","read_u64","read_u64_into","read_u64_into","read_u64_into","read_uint","read_uint","read_uint","read_uint128","read_uint128","read_uint128","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","set","set","set","set","set","set","set","set","set","set","shl","shl","shl","shl","shl","shl","shl","shl","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shr","shr","shr","shr","shr","shr","shr","shr","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_f32","write_f32_into","write_f64","write_f64_into","write_i128","write_i128_into","write_i16","write_i16_into","write_i24","write_i32","write_i32_into","write_i48","write_i64","write_i64_into","write_i8_into","write_int","write_int128","write_u128","write_u128","write_u128","write_u128_into","write_u128_into","write_u128_into","write_u16","write_u16","write_u16","write_u16_into","write_u16_into","write_u16_into","write_u24","write_u32","write_u32","write_u32","write_u32_into","write_u32_into","write_u32_into","write_u48","write_u64","write_u64","write_u64","write_u64_into","write_u64_into","write_u64_into","write_uint","write_uint","write_uint","write_uint128","write_uint128","write_uint128","F32","F64","I128","I16","I32","I64","U128","U16","U32","U64","F32","F64","I128","I16","I32","I64","U128","U16","U32","U64","F32","F64","I128","I16","I32","I64","U128","U16","U32","U64","F32","F64","I128","I16","I32","I64","U128","U16","U32","U64"],"q":[[0,"zerocopy"],[123,"zerocopy::byteorder"],[792,"zerocopy::byteorder::big_endian"],[802,"zerocopy::byteorder::little_endian"],[812,"zerocopy::byteorder::native_endian"],[822,"zerocopy::byteorder::network_endian"],[832,"core::marker"],[833,"core::marker"],[834,"core::cmp"],[835,"core::cmp"],[836,"core::fmt"],[837,"core::hash"],[838,"core::cmp"],[839,"core::any"],[840,"core::ops::function"],[841,"core::clone"],[842,"core::fmt"]],"d":["Types which are safe to treat as an immutable byte slice.","","A mutable or immutable reference to a byte slice.","A mutable reference to a byte slice.","Types for which any byte pattern is valid.","","Types for which a sequence of bytes all set to zero …","Analyzes whether a type is <code>FromZeroes</code>.","A typed reference derived from a byte slice.","A type with no alignment requirement.","Types with no alignment requirement.","","Gets the bytes of this value.","Gets the bytes of this value mutably.","Gets a mutable raw pointer to the first byte in the slice.","Gets a raw pointer to the first byte in the slice.","","","","","Byte order-aware numeric primitives.","Gets the underlying bytes.","Gets the underlying bytes mutably.","","","","","","","","","","","","Returns a mutable reference to the wrapped <code>T</code> without …","Returns a reference to the wrapped <code>T</code> without checking …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets a copy of the inner <code>T</code>.","Gets an unaligned mutable raw pointer to the inner <code>T</code>.","Gets an unaligned raw pointer to the inner <code>T</code>.","","Includes a file and safely transmutes it to a value of an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes <code>self</code>, returning the inner <code>T</code>.","Converts this <code>Ref</code> into a mutable reference.","Converts this <code>Ref</code> into a mutable slice reference.","Converts this <code>Ref</code> into a reference.","Converts this <code>Ref</code> into a slice reference.","Interprets the given <code>bytes</code> as a <code>&amp;mut Self</code> without copying.","Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut Self</code> …","Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut Self</code> …","Interprets the given <code>bytes</code> as a <code>&amp;mut [Self]</code> without …","Interprets the prefix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> …","Interprets the suffix of the given <code>bytes</code> as a <code>&amp;mut [Self]</code> …","Constructs a new <code>Ref</code>.","Constructs a new <code>Unalign</code>.","Constructs a new <code>Ref</code> from the prefix of a byte slice.","Constructs a new <code>Ref</code> from the prefix of a byte slice, …","Constructs a new <code>Ref</code> from the suffix of a byte slice.","Constructs a new <code>Ref</code> from the suffix of a byte slice, …","Constructs a new <code>Ref</code> of a slice type.","Constructs a new <code>Ref</code> of a slice type from the prefix of a …","Constructs a new <code>Ref</code> of a slice type from the prefix of a …","Constructs a new <code>Ref</code> of a slice type from the suffix of a …","Constructs a new <code>Ref</code> of a slice type from the prefix of a …","Constructs a new <code>Ref</code> of a slice type with no alignment …","Constructs a new <code>Ref</code> of a slice type with no alignment …","Constructs a new <code>Ref</code> of a slice type with no alignment …","Constructs a new <code>Ref</code> of a slice type with no alignment …","Constructs a new <code>Ref</code> of a slice type with no alignment …","Constructs a new <code>Ref</code> for a slice type with no alignment …","Constructs a new <code>Ref</code> of a slice type after zeroing the …","Constructs a new <code>Ref</code> for a type with no alignment …","Constructs a new <code>Ref</code> from the prefix of a byte slice for a …","Constructs a new <code>Ref</code> from the prefix of a byte slice for a …","Constructs a new <code>Ref</code> from the suffix of a byte slice for a …","Constructs a new <code>Ref</code> from the suffix of a byte slice for a …","Constructs a new <code>Ref</code> for a type with no alignment …","Creates an instance of <code>Self</code> from zeroed bytes.","Constructs a new <code>Ref</code> after zeroing the bytes.","","","","Reads a copy of <code>T</code>.","Reads a copy of <code>Self</code> from <code>bytes</code>.","Reads a copy of <code>Self</code> from the prefix of <code>bytes</code>.","Reads a copy of <code>Self</code> from the suffix of <code>bytes</code>.","Interprets the given <code>bytes</code> as a <code>&amp;Self</code> without copying.","Interprets the prefix of the given <code>bytes</code> as a <code>&amp;Self</code> …","Interprets the suffix of the given <code>bytes</code> as a <code>&amp;Self</code> …","Sets the inner <code>T</code>, dropping the previous value.","Interprets the given <code>bytes</code> as a <code>&amp;[Self]</code> without copying.","Interprets the prefix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with …","Interprets the suffix of the given <code>bytes</code> as a <code>&amp;[Self]</code> with …","Splits the slice at the midpoint.","Safely transmutes a value of one type to a value of …","Safely transmutes a mutable reference of one type to an …","Safely transmutes a mutable or immutable reference of one …","Attempts to return a reference to the wrapped <code>T</code>, failing …","Attempts to return a mutable reference to the wrapped <code>T</code>, …","","","","","","","Updates the inner <code>T</code> by calling a function on it.","Writes the bytes of <code>t</code> and then forgets <code>t</code>.","Writes a copy of <code>self</code> to <code>bytes</code>.","Writes a copy of <code>self</code> to the prefix of <code>bytes</code>.","Writes a copy of <code>self</code> to the suffix of <code>bytes</code>.","Overwrites <code>self</code> with zeroes.","A type alias for <code>BigEndian</code>.","Defines big-endian serialization.","<code>ByteOrder</code> describes types that can serialize integers as …","A 32-bit floating point number stored in a given byte …","A 64-bit floating point number stored in a given byte …","A 128-bit signed integer stored in a given byte order.","A 16-bit signed integer stored in a given byte order.","A 32-bit signed integer stored in a given byte order.","A 64-bit signed integer stored in a given byte order.","A type alias for <code>LittleEndian</code>.","Defines little-endian serialization.","The maximum value.","The maximum value.","The maximum value.","The maximum value.","Defines system native-endian serialization.","Defines network byte order serialization.","A 128-bit unsigned integer stored in a given byte order.","A 16-bit unsigned integer stored in a given byte order.","A 32-bit unsigned integer stored in a given byte order.","A 64-bit unsigned integer stored in a given byte order.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","The value zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Numeric primitives stored in big-endian byte order.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Constructs a new value from bytes which are already in the …","Converts the given slice of IEEE754 single-precision (4 …","","","Converts the given slice of IEEE754 double-precision (8 …","","","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to a …","","","Converts the given slice of unsigned 16 bit integers to a …","","","Converts the given slice of unsigned 32 bit integers to a …","","","Converts the given slice of unsigned 64 bit integers to a …","","","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","Returns the value as a primitive type, possibly performing …","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Numeric primitives stored in little-endian byte order.","","","","","","","","","","","","","","","","","","","","","Numeric primitives stored in native-endian byte order.","","","","","","","Numeric primitives stored in network-endian byte order.","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","Constructs a new value, possibly performing an endianness …","","","","","","","","","","","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a IEEE754 double-precision (8 bytes) floating point …","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","","","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 16 bit integer from <code>buf</code>.","","","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","","","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","","","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","Reads an unsigned n-bytes integer from <code>buf</code>.","","","","","","","","","","","","","","","","","","","","","","","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","Updates the value in place as a primitive type, possibly …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes a IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 single-precision (4 bytes) floating point …","Writes a IEEE754 double-precision (8 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","","","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","","","A 32-bit floating point number stored in big-endian byte …","A 64-bit floating point number stored in big-endian byte …","A 128-bit signed integer stored in big-endian byte order.","A 16-bit signed integer stored in big-endian byte order.","A 32-bit signed integer stored in big-endian byte order.","A 64-bit signed integer stored in big-endian byte order.","A 128-bit unsigned integer stored in big-endian byte order.","A 16-bit unsigned integer stored in big-endian byte order.","A 32-bit unsigned integer stored in big-endian byte order.","A 64-bit unsigned integer stored in big-endian byte order.","A 32-bit floating point number stored in little-endian …","A 64-bit floating point number stored in little-endian …","A 128-bit signed integer stored in little-endian byte …","A 16-bit signed integer stored in little-endian byte order.","A 32-bit signed integer stored in little-endian byte order.","A 64-bit signed integer stored in little-endian byte order.","A 128-bit unsigned integer stored in little-endian byte …","A 16-bit unsigned integer stored in little-endian byte …","A 32-bit unsigned integer stored in little-endian byte …","A 64-bit unsigned integer stored in little-endian byte …","A 32-bit floating point number stored in native-endian …","A 64-bit floating point number stored in native-endian …","A 128-bit signed integer stored in native-endian byte …","A 16-bit signed integer stored in native-endian byte order.","A 32-bit signed integer stored in native-endian byte order.","A 64-bit signed integer stored in native-endian byte order.","A 128-bit unsigned integer stored in native-endian byte …","A 16-bit unsigned integer stored in native-endian byte …","A 32-bit unsigned integer stored in native-endian byte …","A 64-bit unsigned integer stored in native-endian byte …","A 32-bit floating point number stored in network-endian …","A 64-bit floating point number stored in network-endian …","A 128-bit signed integer stored in network-endian byte …","A 16-bit signed integer stored in network-endian byte …","A 32-bit signed integer stored in network-endian byte …","A 64-bit signed integer stored in network-endian byte …","A 128-bit unsigned integer stored in network-endian byte …","A 16-bit unsigned integer stored in network-endian byte …","A 32-bit unsigned integer stored in network-endian byte …","A 64-bit unsigned integer stored in network-endian byte …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,14,14,7,5,4,8,4,8,0,4,4,8,4,4,8,8,4,4,8,4,4,8,8,8,4,4,8,4,4,4,4,8,8,4,8,8,8,8,8,0,4,8,8,4,4,4,4,3,3,3,3,3,3,4,8,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,59,4,4,4,8,4,3,3,3,3,3,3,8,3,3,3,5,0,0,0,8,8,4,8,4,8,4,8,8,4,14,14,14,59,0,0,0,0,0,0,0,0,0,0,0,30,32,33,34,0,0,0,0,0,0,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,0,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,42,43,30,32,33,34,35,36,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,42,43,42,43,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,42,43,30,30,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,42,43,30,30,30,30,30,30,32,32,32,32,32,32,33,33,33,33,33,33,34,34,34,34,34,34,35,35,35,35,35,35,36,36,36,36,36,36,37,37,37,37,37,37,38,38,38,38,38,38,39,39,40,40,42,43,30,30,30,32,32,32,32,33,33,33,33,33,34,34,34,34,34,34,35,35,35,36,36,36,36,37,37,37,37,37,38,38,38,38,38,38,39,39,39,40,40,40,40,30,32,33,34,35,36,37,38,39,40,31,42,43,31,42,43,31,31,31,31,31,42,43,31,42,43,31,42,43,31,42,43,30,32,33,34,35,36,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,0,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,0,35,36,37,38,39,40,0,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,42,43,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,42,43,31,42,43,31,42,43,31,42,43,31,31,42,43,31,42,43,31,31,42,43,31,42,43,31,42,43,31,42,43,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,30,32,33,34,35,36,37,38,39,40,30,32,33,34,35,36,37,38,39,40,42,43,30,30,30,30,30,30,30,30,32,32,32,32,32,33,33,33,34,35,35,35,35,35,35,35,35,36,36,36,36,36,37,37,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,42,43,30,32,33,34,35,36,37,38,39,40,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,42,43,31,42,43,31,42,43,31,42,43,31,31,42,43,31,42,43,31,31,42,43,31,42,43,31,42,43,31,42,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[2,[1]]],[]],[-1,[[2,[1]]],3],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[4,[-1,-2]]],[[2,[1]]],5,6],[[[4,[-1,-2]]],[[2,[1]]],7,6],[[[8,[-1]]],[[8,[-1]]],9],[[[4,[-1,-2]],[4,[-1,-2]]],10,5,[3,11]],[[[4,[-1,[2,[-2]]]],[4,[-1,[2,[-2]]]]],10,5,[3,11]],[[[8,[-1]],[8,[-1]]],10,[12,11]],[[],[[8,[-1]]],13],[[[4,[-1,[2,[-2]]]]],[[2,[-2]]],5,3],[[[4,[-1,-2]]],-2,5,3],[[[8,[-1]]],-1,12],[[[4,[-1,[2,[-2]]]]],[[2,[-2]]],7,[3,14]],[[[4,[-1,-2]]],-2,7,[3,14]],[[[8,[-1]]],-1,12],[[[8,[-1]]],-1,[]],[[[8,[-1]]],-1,[]],[[[4,[-1,[2,[-2]]]],[4,[-1,[2,[-2]]]]],15,5,[3,16]],[[[4,[-1,-2]],[4,[-1,-2]]],15,5,[3,16]],[[[8,[-1]],[8,[-1]]],15,[12,16]],[[[4,[-1,-2]],17],18,5,[3,19]],[[[4,[-1,[2,[-2]]]],17],18,5,[3,19]],[[[4,[-1,-2]],17],18,5,[3,20]],[[[4,[-1,[2,[-2]]]],17],18,5,3],[[[8,[-1]],17],18,[12,20]],[[[8,[-1]],17],18,[12,19]],[-1,-1,[]],[-1,-1,[]],[[[8,[-1]]],-1,9],[[[8,[-1]]],[],[]],[[[8,[-1]]],[],[]],[[[8,[-1]],-2],21,[12,22],23],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[8,[-1]]],-1,[]],[[[4,[-1,-2]]],-2,7,[3,14]],[[[4,[-1,[2,[-2]]]]],[[2,[-2]]],7,[3,14]],[[[4,[-1,-2]]],-2,5,3],[[[4,[-1,[2,[-2]]]]],[[2,[-2]]],5,3],[[[2,[1]]],[[24,[-1]]],[6,14]],[[[2,[1]]],[[24,[-1]]],[6,14]],[[[2,[1]]],[[24,[-1]]],[6,14]],[[[2,[1]]],[[24,[[2,[-1]]]]],[6,14]],[[[2,[1]],25],[[24,[[21,[[2,[-1]],[2,[1]]]]]]],[6,14]],[[[2,[1]],25],[[24,[[21,[[2,[1]],[2,[-1]]]]]]],[6,14]],[-1,[[24,[[4,[-1,-2]]]]],5,[]],[-1,[[8,[-1]]],[]],[-1,[[24,[[21,[[4,[-1,-2]],-1]]]]],5,[]],[-1,[[24,[[21,[[4,[-1,-2]],-1]]]]],7,[]],[-1,[[24,[[21,[-1,[4,[-1,-2]]]]]]],5,[]],[-1,[[24,[[21,[-1,[4,[-1,-2]]]]]]],7,[]],[-1,[[24,[[4,[-1,[2,[-2]]]]]]],5,[]],[[-1,25],[[24,[[21,[[4,[-1,[2,[-2]]]],-1]]]]],5,[]],[[-1,25],[[24,[[21,[[4,[-1,[2,[-2]]]],-1]]]]],7,[]],[[-1,25],[[24,[[21,[-1,[4,[-1,[2,[-2]]]]]]]]],5,[]],[[-1,25],[[24,[[21,[-1,[4,[-1,[2,[-2]]]]]]]]],7,[]],[-1,[[24,[[4,[-1,[2,[-2]]]]]]],5,12],[[-1,25],[[24,[[21,[[4,[-1,[2,[-2]]]],-1]]]]],5,12],[[-1,25],[[24,[[21,[[4,[-1,[2,[-2]]]],-1]]]]],7,12],[[-1,25],[[24,[[21,[-1,[4,[-1,[2,[-2]]]]]]]]],5,12],[[-1,25],[[24,[[21,[-1,[4,[-1,[2,[-2]]]]]]]]],7,12],[-1,[[24,[[4,[-1,[2,[-2]]]]]]],7,12],[-1,[[24,[[4,[-1,[2,[-2]]]]]]],7,[]],[-1,[[24,[[4,[-1,-2]]]]],5,12],[-1,[[24,[[21,[[4,[-1,-2]],-1]]]]],5,12],[-1,[[24,[[21,[[4,[-1,-2]],-1]]]]],7,12],[-1,[[24,[[21,[-1,[4,[-1,-2]]]]]]],5,12],[-1,[[24,[[21,[-1,[4,[-1,-2]]]]]]],7,12],[-1,[[24,[[4,[-1,-2]]]]],7,12],[[],-1,6],[-1,[[24,[[4,[-1,-2]]]]],7,[]],[[[4,[-1,-2]],[4,[-1,-2]]],[[24,[10]]],5,[3,26]],[[[4,[-1,[2,[-2]]]],[4,[-1,[2,[-2]]]]],[[24,[10]]],5,[3,26]],[[[8,[-1]],[8,[-1]]],[[24,[10]]],[12,26]],[[[4,[-1,-2]]],-2,5,3],[[[2,[1]]],[[24,[-1]]],6],[[[2,[1]]],[[24,[-1]]],6],[[[2,[1]]],[[24,[-1]]],6],[[[2,[1]]],[[24,[-1]]],6],[[[2,[1]]],[[24,[-1]]],6],[[[2,[1]]],[[24,[-1]]],6],[[[8,[-1]],-1],21,[]],[[[2,[1]]],[[24,[[2,[-1]]]]],6],[[[2,[1]],25],[[24,[[21,[[2,[-1]],[2,[1]]]]]]],6],[[[2,[1]],25],[[24,[[21,[[2,[1]],[2,[-1]]]]]]],6],[[-1,25],[[21,[-1,-1]]],[]],0,0,0,[[[8,[-1]]],[[24,[-1]]],[]],[[[8,[-1]]],[[24,[-1]]],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[[8,[-1]],-2],-3,[],29,[]],[[[4,[-1,-2]],-2],21,7,14],[[-1,[2,[1]]],[[24,[21]]],[]],[[-1,[2,[1]]],[[24,[21]]],[]],[[-1,[2,[1]]],[[24,[21]]],[]],[-1,21,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]],[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]],[40,[-1]]],[[40,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[39,[-1]],[39,[-1]]],21,31],[[[40,[-1]],[40,[-1]]],21,31],[[[30,[-1]]],[[41,[1]]],31],[[[32,[-1]]],[[41,[1]]],31],[[[33,[-1]]],[[41,[1]]],31],[[[34,[-1]]],[[41,[1]]],31],[[[35,[-1]]],[[41,[1]]],31],[[[36,[-1]]],[[41,[1]]],31],[[[37,[-1]]],[[41,[1]]],31],[[[38,[-1]]],[[41,[1]]],31],[[[39,[-1]]],[[41,[1]]],31],[[[40,[-1]]],[[41,[1]]],31],[[[30,[-1]]],[[41,[1]]],31],[[[32,[-1]]],[[41,[1]]],31],[[[33,[-1]]],[[41,[1]]],31],[[[34,[-1]]],[[41,[1]]],31],[[[35,[-1]]],[[41,[1]]],31],[[[36,[-1]]],[[41,[1]]],31],[[[37,[-1]]],[[41,[1]]],31],[[[38,[-1]]],[[41,[1]]],31],[[[39,[-1]]],[[41,[1]]],31],[[[40,[-1]]],[[41,[1]]],31],0,[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[43,43],[[[30,[-1]]],[[30,[-1]]],44],[[[32,[-1]]],[[32,[-1]]],44],[[[33,[-1]]],[[33,[-1]]],44],[[[34,[-1]]],[[34,[-1]]],44],[[[35,[-1]]],[[35,[-1]]],44],[[[36,[-1]]],[[36,[-1]]],44],[[[37,[-1]]],[[37,[-1]]],44],[[[38,[-1]]],[[38,[-1]]],44],[[[39,[-1]]],[[39,[-1]]],44],[[[40,[-1]]],[[40,[-1]]],44],[[42,42],10],[[43,43],10],[[],42],[[],43],[[],[[30,[-1]]],[]],[[],[[32,[-1]]],[]],[[],[[33,[-1]]],[]],[[],[[34,[-1]]],[]],[[],[[35,[-1]]],[]],[[],[[36,[-1]]],[]],[[],[[37,[-1]]],[]],[[],[[38,[-1]]],[]],[[],[[39,[-1]]],[]],[[],[[40,[-1]]],[]],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]],[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]],[40,[-1]]],[[40,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[39,[-1]],[39,[-1]]],21,31],[[[40,[-1]],[40,[-1]]],21,31],[[42,42],15],[[43,43],15],[[[30,[-1]],[41,[1]]],15,31],[[[30,[-1]],[30,[-1]]],15,16],[[[32,[-1]],[32,[-1]]],15,16],[[[32,[-1]],[41,[1]]],15,31],[[[33,[-1]],[33,[-1]]],15,16],[[[33,[-1]],[41,[1]]],15,31],[[[34,[-1]],[41,[1]]],15,31],[[[34,[-1]],[34,[-1]]],15,16],[[[35,[-1]],[35,[-1]]],15,16],[[[35,[-1]],[41,[1]]],15,31],[[[36,[-1]],[41,[1]]],15,31],[[[36,[-1]],[36,[-1]]],15,16],[[[37,[-1]],[41,[1]]],15,31],[[[37,[-1]],[37,[-1]]],15,16],[[[38,[-1]],[38,[-1]]],15,16],[[[38,[-1]],[41,[1]]],15,31],[[[39,[-1]],[41,[1]]],15,31],[[[39,[-1]],[39,[-1]]],15,16],[[[40,[-1]],[40,[-1]]],15,16],[[[40,[-1]],[41,[1]]],15,31],[[42,17],[[27,[21,45]]]],[[43,17],[[27,[21,45]]]],[[[30,[-1]],17],18,31],[[[30,[-1]],17],18,31],[[[30,[-1]],17],18,31],[[[30,[-1]],17],18,31],[[[30,[-1]],17],18,31],[[[30,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[32,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[33,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[34,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[35,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[36,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[37,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[38,[-1]],17],18,31],[[[39,[-1]],17],18,31],[[[39,[-1]],17],18,31],[[[40,[-1]],17],18,31],[[[40,[-1]],17],18,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[41,[1]]],[[30,[-1]]],31],[46,[[30,[-1]]],31],[[[30,[-1]]],[[32,[-2]]],31,31],[-1,-1,[]],[47,[[32,[-1]]],31],[[[41,[1]]],[[32,[-1]]],31],[-1,-1,[]],[[[41,[1]]],[[33,[-1]]],31],[[[32,[-1]]],[[33,[-2]]],31,31],[[[30,[-1]]],[[33,[-2]]],31,31],[48,[[33,[-1]]],31],[[[32,[-1]]],[[34,[-2]]],31,31],[[[30,[-1]]],[[34,[-2]]],31,31],[[[41,[1]]],[[34,[-1]]],31],[49,[[34,[-1]]],31],[-1,-1,[]],[[[33,[-1]]],[[34,[-2]]],31,31],[50,[[35,[-1]]],31],[-1,-1,[]],[[[41,[1]]],[[35,[-1]]],31],[[[35,[-1]]],[[36,[-2]]],31,31],[-1,-1,[]],[[[41,[1]]],[[36,[-1]]],31],[51,[[36,[-1]]],31],[[[35,[-1]]],[[37,[-2]]],31,31],[52,[[37,[-1]]],31],[-1,-1,[]],[[[41,[1]]],[[37,[-1]]],31],[[[36,[-1]]],[[37,[-2]]],31,31],[53,[[38,[-1]]],31],[[[37,[-1]]],[[38,[-2]]],31,31],[[[41,[1]]],[[38,[-1]]],31],[-1,-1,[]],[[[35,[-1]]],[[38,[-2]]],31,31],[[[36,[-1]]],[[38,[-2]]],31,31],[-1,-1,[]],[54,[[39,[-1]]],31],[[[41,[1]]],[[39,[-1]]],31],[[[41,[1]]],[[40,[-1]]],31],[-1,-1,[]],[[[39,[-1]]],[[40,[-2]]],31,31],[55,[[40,[-1]]],31],[[[41,[1]]],[[30,[-1]]],[]],[[[41,[1]]],[[32,[-1]]],[]],[[[41,[1]]],[[33,[-1]]],[]],[[[41,[1]]],[[34,[-1]]],[]],[[[41,[1]]],[[35,[-1]]],[]],[[[41,[1]]],[[36,[-1]]],[]],[[[41,[1]]],[[37,[-1]]],[]],[[[41,[1]]],[[38,[-1]]],[]],[[[41,[1]]],[[39,[-1]]],[]],[[[41,[1]]],[[40,[-1]]],[]],[[[2,[54]]],21],[[[2,[54]]],21],[[[2,[54]]],21],[[[2,[55]]],21],[[[2,[55]]],21],[[[2,[55]]],21],[[[2,[53]]],21],[[[2,[50]]],21],[[[2,[51]]],21],[[[2,[52]]],21],[[[2,[49]]],21],[[[2,[49]]],21],[[[2,[49]]],21],[[[2,[46]]],21],[[[2,[46]]],21],[[[2,[46]]],21],[[[2,[47]]],21],[[[2,[47]]],21],[[[2,[47]]],21],[[[2,[48]]],21],[[[2,[48]]],21],[[[2,[48]]],21],[[[30,[-1]]],46,31],[[[32,[-1]]],47,31],[[[33,[-1]]],48,31],[[[34,[-1]]],49,31],[[[35,[-1]]],50,31],[[[36,[-1]]],51,31],[[[37,[-1]]],52,31],[[[38,[-1]]],53,31],[[[39,[-1]]],54,31],[[[40,[-1]]],55,31],[[42,-1],21,23],[[43,-1],21,23],[[[30,[-1]],-2],21,22,23],[[[32,[-1]],-2],21,22,23],[[[33,[-1]],-2],21,22,23],[[[34,[-1]],-2],21,22,23],[[[35,[-1]],-2],21,22,23],[[[36,[-1]],-2],21,22,23],[[[37,[-1]],-2],21,22,23],[[[38,[-1]],-2],21,22,23],[[[39,[-1]],-2],21,22,23],[[[40,[-1]],-2],21,22,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]],[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]],[40,[-1]]],[[40,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[39,[-1]],[39,[-1]]],21,31],[[[40,[-1]],[40,[-1]]],21,31],0,[[[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]]],[[40,[-1]]],31],0,[46,[[30,[-1]]],31],[47,[[32,[-1]]],31],[48,[[33,[-1]]],31],[49,[[34,[-1]]],31],[50,[[35,[-1]]],31],[51,[[36,[-1]]],31],[52,[[37,[-1]]],31],[53,[[38,[-1]]],31],[54,[[39,[-1]]],31],[55,[[40,[-1]]],31],[[[30,[-1]]],[[30,[-1]]],[]],[[[32,[-1]]],[[32,[-1]]],[]],[[[33,[-1]]],[[33,[-1]]],[]],[[[34,[-1]]],[[34,[-1]]],[]],[[[35,[-1]]],[[35,[-1]]],[]],[[[36,[-1]]],[[36,[-1]]],[]],[[[37,[-1]]],[[37,[-1]]],[]],[[[38,[-1]]],[[38,[-1]]],[]],[[42,42],[[24,[10]]]],[[43,43],[[24,[10]]]],[[[2,[1]]],54],[[[2,[1]],[2,[54]]],21],[[[2,[1]],[2,[54]]],21],[[[2,[1]]],55],[[[2,[1]],[2,[55]]],21],[[[2,[1]],[2,[55]]],21],[[[2,[1]]],53],[[[2,[1]],[2,[53]]],21],[[[2,[1]]],50],[[[2,[1]],[2,[50]]],21],[[[2,[1]]],51],[[[2,[1]]],51],[[[2,[1]],[2,[51]]],21],[[[2,[1]]],52],[[[2,[1]]],52],[[[2,[1]],[2,[52]]],21],[[[2,[1]],25],52],[[[2,[1]],25],53],[[[2,[1]]],49],[[[2,[1]]],49],[[[2,[1]]],49],[[[2,[1]],[2,[49]]],21],[[[2,[1]],[2,[49]]],21],[[[2,[1]],[2,[49]]],21],[[[2,[1]]],46],[[[2,[1]]],46],[[[2,[1]]],46],[[[2,[1]],[2,[46]]],21],[[[2,[1]],[2,[46]]],21],[[[2,[1]],[2,[46]]],21],[[[2,[1]]],47],[[[2,[1]]],47],[[[2,[1]]],47],[[[2,[1]]],47],[[[2,[1]],[2,[47]]],21],[[[2,[1]],[2,[47]]],21],[[[2,[1]],[2,[47]]],21],[[[2,[1]]],48],[[[2,[1]]],48],[[[2,[1]]],48],[[[2,[1]]],48],[[[2,[1]],[2,[48]]],21],[[[2,[1]],[2,[48]]],21],[[[2,[1]],[2,[48]]],21],[[[2,[1]],25],48],[[[2,[1]],25],48],[[[2,[1]],25],48],[[[2,[1]],25],49],[[[2,[1]],25],49],[[[2,[1]],25],49],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]],[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]],[40,[-1]]],[[40,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[39,[-1]],[39,[-1]]],21,31],[[[40,[-1]],[40,[-1]]],21,31],[[[30,[-1]],46],21,31],[[[32,[-1]],47],21,31],[[[33,[-1]],48],21,31],[[[34,[-1]],49],21,31],[[[35,[-1]],50],21,31],[[[36,[-1]],51],21,31],[[[37,[-1]],52],21,31],[[[38,[-1]],53],21,31],[[[39,[-1]],54],21,31],[[[40,[-1]],55],21,31],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[30,[-1]],[30,[-1]]],[[30,[-1]]],31],[[[32,[-1]],[32,[-1]]],[[32,[-1]]],31],[[[33,[-1]],[33,[-1]]],[[33,[-1]]],31],[[[34,[-1]],[34,[-1]]],[[34,[-1]]],31],[[[35,[-1]],[35,[-1]]],[[35,[-1]]],31],[[[36,[-1]],[36,[-1]]],[[36,[-1]]],31],[[[37,[-1]],[37,[-1]]],[[37,[-1]]],31],[[[38,[-1]],[38,[-1]]],[[38,[-1]]],31],[[[39,[-1]],[39,[-1]]],[[39,[-1]]],31],[[[40,[-1]],[40,[-1]]],[[40,[-1]]],31],[[[30,[-1]],[30,[-1]]],21,31],[[[32,[-1]],[32,[-1]]],21,31],[[[33,[-1]],[33,[-1]]],21,31],[[[34,[-1]],[34,[-1]]],21,31],[[[35,[-1]],[35,[-1]]],21,31],[[[36,[-1]],[36,[-1]]],21,31],[[[37,[-1]],[37,[-1]]],21,31],[[[38,[-1]],[38,[-1]]],21,31],[[[39,[-1]],[39,[-1]]],21,31],[[[40,[-1]],[40,[-1]]],21,31],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[48,[[27,[[30,[-1]],56]]],31],[-1,[[27,[-2]]],[],[]],[[[34,[-1]]],[[27,[[30,[-2]],56]]],31,31],[49,[[27,[[30,[-1]],56]]],31],[[[33,[-1]]],[[27,[[30,[-2]],56]]],31,31],[[[32,[-1]]],[[27,[[30,[-2]],56]]],31,31],[25,[[27,[[30,[-1]],56]]],31],[47,[[27,[[30,[-1]],56]]],31],[49,[[27,[[32,[-1]],56]]],31],[[[34,[-1]]],[[27,[[32,[-2]],56]]],31,31],[[[33,[-1]]],[[27,[[32,[-2]],56]]],31,31],[48,[[27,[[32,[-1]],56]]],31],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[[[34,[-1]]],[[27,[[33,[-2]],56]]],31,31],[49,[[27,[[33,[-1]],56]]],31],[-1,[[27,[-2]]],[],[]],[57,[[27,[[35,[-1]],56]]],31],[-1,[[27,[-2]]],[],[]],[51,[[27,[[35,[-1]],56]]],31],[[[37,[-1]]],[[27,[[35,[-2]],56]]],31,31],[53,[[27,[[35,[-1]],56]]],31],[[[38,[-1]]],[[27,[[35,[-2]],56]]],31,31],[[[36,[-1]]],[[27,[[35,[-2]],56]]],31,31],[52,[[27,[[35,[-1]],56]]],31],[52,[[27,[[36,[-1]],56]]],31],[[[37,[-1]]],[[27,[[36,[-2]],56]]],31,31],[53,[[27,[[36,[-1]],56]]],31],[[[38,[-1]]],[[27,[[36,[-2]],56]]],31,31],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[53,[[27,[[37,[-1]],56]]],31],[[[38,[-1]]],[[27,[[37,[-2]],56]]],31,31],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[[2,[1]],54],21],[[[2,[54]],[2,[1]]],21],[[[2,[1]],55],21],[[[2,[55]],[2,[1]]],21],[[[2,[1]],53],21],[[[2,[53]],[2,[1]]],21],[[[2,[1]],50],21],[[[2,[50]],[2,[1]]],21],[[[2,[1]],51],21],[[[2,[1]],51],21],[[[2,[51]],[2,[1]]],21],[[[2,[1]],52],21],[[[2,[1]],52],21],[[[2,[52]],[2,[1]]],21],[[[2,[58]],[2,[1]]],21],[[[2,[1]],52,25],21],[[[2,[1]],53,25],21],[[[2,[1]],49],21],[[[2,[1]],49],21],[[[2,[1]],49],21],[[[2,[49]],[2,[1]]],21],[[[2,[49]],[2,[1]]],21],[[[2,[49]],[2,[1]]],21],[[[2,[1]],46],21],[[[2,[1]],46],21],[[[2,[1]],46],21],[[[2,[46]],[2,[1]]],21],[[[2,[46]],[2,[1]]],21],[[[2,[46]],[2,[1]]],21],[[[2,[1]],47],21],[[[2,[1]],47],21],[[[2,[1]],47],21],[[[2,[1]],47],21],[[[2,[47]],[2,[1]]],21],[[[2,[47]],[2,[1]]],21],[[[2,[47]],[2,[1]]],21],[[[2,[1]],48],21],[[[2,[1]],48],21],[[[2,[1]],48],21],[[[2,[1]],48],21],[[[2,[48]],[2,[1]]],21],[[[2,[48]],[2,[1]]],21],[[[2,[48]],[2,[1]]],21],[[[2,[1]],48,25],21],[[[2,[1]],48,25],21],[[[2,[1]],48,25],21],[[[2,[1]],49,25],21],[[[2,[1]],49,25],21],[[[2,[1]],49,25],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[551,554],"p":[[15,"u8"],[15,"slice"],[8,"FromBytes",0],[3,"Ref",0],[8,"ByteSlice",0],[8,"Sized",832],[8,"ByteSliceMut",0],[3,"Unalign",0],[8,"Copy",832],[4,"Ordering",833],[8,"Ord",833],[8,"Unaligned",0],[8,"Default",834],[8,"AsBytes",0],[15,"bool"],[8,"PartialEq",833],[3,"Formatter",835],[6,"Result",835],[8,"Debug",835],[8,"Display",835],[15,"tuple"],[8,"Hash",836],[8,"Hasher",836],[4,"Option",837],[15,"usize"],[8,"PartialOrd",833],[4,"Result",838],[3,"TypeId",839],[8,"FnOnce",840],[3,"U16",123],[8,"ByteOrder",123],[3,"U32",123],[3,"U64",123],[3,"U128",123],[3,"I16",123],[3,"I32",123],[3,"I64",123],[3,"I128",123],[3,"F32",123],[3,"F64",123],[15,"array"],[4,"BigEndian",123],[4,"LittleEndian",123],[8,"Clone",841],[3,"Error",835],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i128"],[15,"f32"],[15,"f64"],[3,"TryFromIntError",842],[15,"isize"],[15,"i8"],[8,"FromZeroes",0]],"b":[[24,"impl-Ord-for-Ref%3CB,+T%3E"],[25,"impl-Ord-for-Ref%3CB,+%5BT%5D%3E"],[28,"impl-Deref-for-Ref%3CB,+%5BT%5D%3E"],[29,"impl-Deref-for-Ref%3CB,+T%3E"],[31,"impl-DerefMut-for-Ref%3CB,+%5BT%5D%3E"],[32,"impl-DerefMut-for-Ref%3CB,+T%3E"],[36,"impl-PartialEq-for-Ref%3CB,+%5BT%5D%3E"],[37,"impl-PartialEq-for-Ref%3CB,+T%3E"],[39,"impl-Debug-for-Ref%3CB,+T%3E"],[40,"impl-Debug-for-Ref%3CB,+%5BT%5D%3E"],[41,"impl-Display-for-Ref%3CB,+T%3E"],[42,"impl-Display-for-Ref%3CB,+%5BT%5D%3E"],[43,"impl-Display-for-Unalign%3CT%3E"],[44,"impl-Debug-for-Unalign%3CT%3E"],[91,"impl-PartialOrd-for-Ref%3CB,+T%3E"],[92,"impl-PartialOrd-for-Ref%3CB,+%5BT%5D%3E"],[315,"impl-PartialEq%3C%5Bu8;+2%5D%3E-for-U16%3CO%3E"],[316,"impl-PartialEq-for-U16%3CO%3E"],[317,"impl-PartialEq-for-U32%3CO%3E"],[318,"impl-PartialEq%3C%5Bu8;+4%5D%3E-for-U32%3CO%3E"],[319,"impl-PartialEq-for-U64%3CO%3E"],[320,"impl-PartialEq%3C%5Bu8;+8%5D%3E-for-U64%3CO%3E"],[321,"impl-PartialEq%3C%5Bu8;+16%5D%3E-for-U128%3CO%3E"],[322,"impl-PartialEq-for-U128%3CO%3E"],[323,"impl-PartialEq-for-I16%3CO%3E"],[324,"impl-PartialEq%3C%5Bu8;+2%5D%3E-for-I16%3CO%3E"],[325,"impl-PartialEq%3C%5Bu8;+4%5D%3E-for-I32%3CO%3E"],[326,"impl-PartialEq-for-I32%3CO%3E"],[327,"impl-PartialEq%3C%5Bu8;+8%5D%3E-for-I64%3CO%3E"],[328,"impl-PartialEq-for-I64%3CO%3E"],[329,"impl-PartialEq-for-I128%3CO%3E"],[330,"impl-PartialEq%3C%5Bu8;+16%5D%3E-for-I128%3CO%3E"],[331,"impl-PartialEq%3C%5Bu8;+4%5D%3E-for-F32%3CO%3E"],[332,"impl-PartialEq-for-F32%3CO%3E"],[333,"impl-PartialEq-for-F64%3CO%3E"],[334,"impl-PartialEq%3C%5Bu8;+8%5D%3E-for-F64%3CO%3E"],[337,"impl-Debug-for-U16%3CO%3E"],[338,"impl-Display-for-U16%3CO%3E"],[339,"impl-Octal-for-U16%3CO%3E"],[340,"impl-LowerHex-for-U16%3CO%3E"],[341,"impl-Binary-for-U16%3CO%3E"],[342,"impl-UpperHex-for-U16%3CO%3E"],[343,"impl-UpperHex-for-U32%3CO%3E"],[344,"impl-Octal-for-U32%3CO%3E"],[345,"impl-Debug-for-U32%3CO%3E"],[346,"impl-Display-for-U32%3CO%3E"],[347,"impl-Binary-for-U32%3CO%3E"],[348,"impl-LowerHex-for-U32%3CO%3E"],[349,"impl-LowerHex-for-U64%3CO%3E"],[350,"impl-Binary-for-U64%3CO%3E"],[351,"impl-Octal-for-U64%3CO%3E"],[352,"impl-Display-for-U64%3CO%3E"],[353,"impl-Debug-for-U64%3CO%3E"],[354,"impl-UpperHex-for-U64%3CO%3E"],[355,"impl-Debug-for-U128%3CO%3E"],[356,"impl-LowerHex-for-U128%3CO%3E"],[357,"impl-Binary-for-U128%3CO%3E"],[358,"impl-Octal-for-U128%3CO%3E"],[359,"impl-UpperHex-for-U128%3CO%3E"],[360,"impl-Display-for-U128%3CO%3E"],[361,"impl-Octal-for-I16%3CO%3E"],[362,"impl-Debug-for-I16%3CO%3E"],[363,"impl-Display-for-I16%3CO%3E"],[364,"impl-Binary-for-I16%3CO%3E"],[365,"impl-LowerHex-for-I16%3CO%3E"],[366,"impl-UpperHex-for-I16%3CO%3E"],[367,"impl-LowerHex-for-I32%3CO%3E"],[368,"impl-Binary-for-I32%3CO%3E"],[369,"impl-UpperHex-for-I32%3CO%3E"],[370,"impl-Octal-for-I32%3CO%3E"],[371,"impl-Display-for-I32%3CO%3E"],[372,"impl-Debug-for-I32%3CO%3E"],[373,"impl-Binary-for-I64%3CO%3E"],[374,"impl-Display-for-I64%3CO%3E"],[375,"impl-LowerHex-for-I64%3CO%3E"],[376,"impl-Octal-for-I64%3CO%3E"],[377,"impl-UpperHex-for-I64%3CO%3E"],[378,"impl-Debug-for-I64%3CO%3E"],[379,"impl-Binary-for-I128%3CO%3E"],[380,"impl-LowerHex-for-I128%3CO%3E"],[381,"impl-Octal-for-I128%3CO%3E"],[382,"impl-Debug-for-I128%3CO%3E"],[383,"impl-UpperHex-for-I128%3CO%3E"],[384,"impl-Display-for-I128%3CO%3E"],[385,"impl-Display-for-F32%3CO%3E"],[386,"impl-Debug-for-F32%3CO%3E"],[387,"impl-Display-for-F64%3CO%3E"],[388,"impl-Debug-for-F64%3CO%3E"],[392,"impl-From%3C%5Bu8;+2%5D%3E-for-U16%3CO%3E"],[393,"impl-From%3Cu16%3E-for-U16%3CO%3E"],[394,"impl-From%3CU16%3CO%3E%3E-for-U32%3CP%3E"],[396,"impl-From%3Cu32%3E-for-U32%3CO%3E"],[397,"impl-From%3C%5Bu8;+4%5D%3E-for-U32%3CO%3E"],[399,"impl-From%3C%5Bu8;+8%5D%3E-for-U64%3CO%3E"],[400,"impl-From%3CU32%3CO%3E%3E-for-U64%3CP%3E"],[401,"impl-From%3CU16%3CO%3E%3E-for-U64%3CP%3E"],[402,"impl-From%3Cu64%3E-for-U64%3CO%3E"],[403,"impl-From%3CU32%3CO%3E%3E-for-U128%3CP%3E"],[404,"impl-From%3CU16%3CO%3E%3E-for-U128%3CP%3E"],[405,"impl-From%3C%5Bu8;+16%5D%3E-for-U128%3CO%3E"],[406,"impl-From%3Cu128%3E-for-U128%3CO%3E"],[408,"impl-From%3CU64%3CO%3E%3E-for-U128%3CP%3E"],[409,"impl-From%3Ci16%3E-for-I16%3CO%3E"],[411,"impl-From%3C%5Bu8;+2%5D%3E-for-I16%3CO%3E"],[412,"impl-From%3CI16%3CO%3E%3E-for-I32%3CP%3E"],[414,"impl-From%3C%5Bu8;+4%5D%3E-for-I32%3CO%3E"],[415,"impl-From%3Ci32%3E-for-I32%3CO%3E"],[416,"impl-From%3CI16%3CO%3E%3E-for-I64%3CP%3E"],[417,"impl-From%3Ci64%3E-for-I64%3CO%3E"],[419,"impl-From%3C%5Bu8;+8%5D%3E-for-I64%3CO%3E"],[420,"impl-From%3CI32%3CO%3E%3E-for-I64%3CP%3E"],[421,"impl-From%3Ci128%3E-for-I128%3CO%3E"],[422,"impl-From%3CI64%3CO%3E%3E-for-I128%3CP%3E"],[423,"impl-From%3C%5Bu8;+16%5D%3E-for-I128%3CO%3E"],[425,"impl-From%3CI16%3CO%3E%3E-for-I128%3CP%3E"],[426,"impl-From%3CI32%3CO%3E%3E-for-I128%3CP%3E"],[428,"impl-From%3Cf32%3E-for-F32%3CO%3E"],[429,"impl-From%3C%5Bu8;+4%5D%3E-for-F32%3CO%3E"],[430,"impl-From%3C%5Bu8;+8%5D%3E-for-F64%3CO%3E"],[432,"impl-From%3CF32%3CO%3E%3E-for-F64%3CP%3E"],[433,"impl-From%3Cf64%3E-for-F64%3CO%3E"],[683,"impl-TryFrom%3Cu64%3E-for-U16%3CO%3E"],[685,"impl-TryFrom%3CU128%3CP%3E%3E-for-U16%3CO%3E"],[686,"impl-TryFrom%3Cu128%3E-for-U16%3CO%3E"],[687,"impl-TryFrom%3CU64%3CP%3E%3E-for-U16%3CO%3E"],[688,"impl-TryFrom%3CU32%3CP%3E%3E-for-U16%3CO%3E"],[689,"impl-TryFrom%3Cusize%3E-for-U16%3CO%3E"],[690,"impl-TryFrom%3Cu32%3E-for-U16%3CO%3E"],[691,"impl-TryFrom%3Cu128%3E-for-U32%3CO%3E"],[692,"impl-TryFrom%3CU128%3CP%3E%3E-for-U32%3CO%3E"],[693,"impl-TryFrom%3CU64%3CP%3E%3E-for-U32%3CO%3E"],[694,"impl-TryFrom%3Cu64%3E-for-U32%3CO%3E"],[697,"impl-TryFrom%3CU128%3CP%3E%3E-for-U64%3CO%3E"],[698,"impl-TryFrom%3Cu128%3E-for-U64%3CO%3E"],[700,"impl-TryFrom%3Cisize%3E-for-I16%3CO%3E"],[702,"impl-TryFrom%3Ci32%3E-for-I16%3CO%3E"],[703,"impl-TryFrom%3CI64%3CP%3E%3E-for-I16%3CO%3E"],[704,"impl-TryFrom%3Ci128%3E-for-I16%3CO%3E"],[705,"impl-TryFrom%3CI128%3CP%3E%3E-for-I16%3CO%3E"],[706,"impl-TryFrom%3CI32%3CP%3E%3E-for-I16%3CO%3E"],[707,"impl-TryFrom%3Ci64%3E-for-I16%3CO%3E"],[708,"impl-TryFrom%3Ci64%3E-for-I32%3CO%3E"],[709,"impl-TryFrom%3CI64%3CP%3E%3E-for-I32%3CO%3E"],[710,"impl-TryFrom%3Ci128%3E-for-I32%3CO%3E"],[711,"impl-TryFrom%3CI128%3CP%3E%3E-for-I32%3CO%3E"],[714,"impl-TryFrom%3Ci128%3E-for-I64%3CO%3E"],[715,"impl-TryFrom%3CI128%3CP%3E%3E-for-I64%3CO%3E"]],"a":{"include_bytes":[51],"include_data":[51],"include_type":[51]}}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
